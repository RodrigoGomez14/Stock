{"version":3,"sources":["images/logo.png","images/Home.png","images/Valvulas.png","images/Empty.png","App.js","components/Navbar.jsx","components/MenuDrawer.jsx","components/Dialogs/DialogConfirmGoBack.jsx","Pages/Layout.jsx","utilities.js","Pages/styles/styles.js","components/Clientes/CardCliente.jsx","Pages/Clientes.jsx","components/Cliente/Deuda.jsx","components/Cliente/ProductoCardPedido.jsx","components/Cliente/CardPedido.jsx","components/Cliente/ListaDePedidos.jsx","components/Cliente/Detalles.jsx","components/Cliente/DialogConfirmDelete.jsx","Pages/Cliente.jsx","components/Nuevo-Cliente/Telefonos.jsx","components/Nuevo-Cliente/Direccion.jsx","components/Nuevo-Cliente/InfoExtra.jsx","components/Nuevo-Cliente/Mails.jsx","components/Nuevo-Cliente/Dialogs/DialogNuevaDireccion.jsx","components/Nuevo-Cliente/Dialogs/DialogNuevoTelefono.jsx","components/Nuevo-Cliente/Dialogs/DialogNuevaInfoExtra.jsx","components/Nuevo-Cliente/Dialogs/DialogNuevoMail.jsx","components/Nuevo-Cliente/Dialogs/DialogEliminarElemento.jsx","components/Nuevo-Cliente/Step.jsx","components/Nuevo-Cliente/FormDetalles.jsx","Pages/NuevoCliente.jsx","Pages/NuevoProveedor.jsx","components/Proveedores/CardProveedor.jsx","Pages/Proveedores.jsx","components/Proveedor/Deuda.jsx","Pages/Proveedor.jsx","components/Expresos/CardExpreso.jsx","Pages/Expresos.jsx","components/Expreso/Dialogs/DialogAsentarInconveniente.jsx","components/Expreso/CardEnvio.jsx","components/Expreso/ListaDeEnvios.jsx","Pages/Expreso.jsx","Pages/NuevoExpreso.jsx","components/Nuevo-Pedido/Productos.jsx","components/Nuevo-Pedido/Dialogs/DialogNuevoProducto.jsx","components/Nuevo-Pedido/Dialogs/DialogEliminarElemento.jsx","components/Nuevo-Pedido/Step.jsx","Pages/NuevoPedido.jsx","Pages/Inicio.jsx","components/Deudas/CardDeudaCliente.jsx","components/Deudas/CardDeudaProveedor.jsx","Pages/Deudas.jsx","components/Pedidos/CardPedido.jsx","components/Dialogs/DialogConfirmAction.jsx","components/Cheques/Cheque.jsx","components/Cheques/DialogEntregarCheque.jsx","Pages/Cheques.jsx","components/Productos/StepperCadena.jsx","components/Productos/CardProducto.jsx","Pages/Productos.jsx","components/Iva/Tabla.jsx","components/Iva/Compras.jsx","components/Iva/Ventas.jsx","Pages/Iva.jsx","components/Historial/MenuCheques.jsx","Pages/HistorialCliente.jsx","components/Historial/MenuChequesPersonales.jsx","Pages/HistorialProveedor.jsx","Pages/Pedidos.jsx","components/Entregas/CardEntrega.jsx","Pages/Entregas.jsx","components/Nueva-Entrega/Productos.jsx","components/Nueva-Entrega/Dialogs/DialogNuevoProducto.jsx","components/Nueva-Entrega/Dialogs/DialogEliminarElemento.jsx","components/Nueva-Entrega/Step.jsx","Pages/NuevaEntrega.jsx","components/Recibir-Entrega/Cheques.jsx","components/Recibir-Entrega/ChequesPersonales.jsx","components/Recibir-Entrega/Dialogs/DialogNuevoChequePersonal.jsx","components/Recibir-Entrega/Dialogs/DialogEliminarCheque.jsx","components/Recibir-Entrega/Step.jsx","Pages/RecibirEntrega.jsx","components/Enviar-Pedido/Dialogs/DialogNuevoCheque.jsx","components/Enviar-Pedido/Dialogs/DialogEliminarCheque.jsx","components/Enviar-Pedido/Cheques.jsx","components/Enviar-Pedido/Step.jsx","Pages/EnviarPedido.jsx","components/Nuevo-Producto/StepperNuevoProducto.jsx","components/Nuevo-Producto/Subproductos.jsx","components/Nuevo-Producto/Dialogs/DialogAgregarProceso.jsx","components/Nuevo-Producto/Dialogs/DialogEliminarElemento.jsx","components/Nuevo-Producto/Dialogs/DialogNuevoSubproducto.jsx","components/Nuevo-Producto/Step.jsx","Pages/NuevoProducto.jsx","Pages/PantallaDeCarga.jsx","components/FormSignIn.jsx","Pages/SignIn.jsx","reducers/index.js","Pages/NotFound.jsx","components/Nuevo-Pago/ChequesPersonales.jsx","components/Nuevo-Pago/Dialogs/DialogNuevoCheque.jsx","components/Nuevo-Pago/Dialogs/DialogEliminarCheque.jsx","components/Nuevo-Pago/Dialogs/DialogNuevoChequePersonal.jsx","components/Nuevo-Pago/Step.jsx","components/Nuevo-Pago/Dialogs/DialogEliminarChequePersonal.jsx","Pages/NuevoPagoProveedor.jsx","Pages/NuevoPagoCliente.jsx","components/Cadenas-De-Produccion/CardStep.jsx","components/Cadenas-De-Produccion/Cadena.jsx","Pages/CadenasDeProduccion.jsx","components/Historial-De-Produccion/Cadena.jsx","Pages/HistorialDeProduccion.jsx","components/Finalizar-Proceso/Dialogs/DialogEliminarCheque.jsx","components/Finalizar-Proceso/ChequesPersonales.jsx","components/Finalizar-Proceso/Dialogs/DialogNuevoChequePersonal.jsx","components/Finalizar-Proceso/Step.jsx","Pages/FinalizarProceso.jsx","components/Cuentas-Bancarias/CardCuentaBancaria.jsx","Pages/CuentasBancarias.jsx","components/Nueva-Cuenta-Bancaria/Step.jsx","Pages/NuevaCuentaBancaria.jsx","components/Depositar-Cheque/Step.jsx","Pages/DepositarCheque.jsx","components/Cheques/ChequePersonal.jsx","Pages/ChequesPersonales.jsx","components/Finalizar-Proceso-Propio/Step.jsx","Pages/FinalizarProcesoPropio.jsx","components/Nuevo-Consumo-Facturado/Step.jsx","Pages/NuevoConsumoFacturado.jsx","serviceWorker.js","index.js","images/noData.png"],"names":["module","exports","store","data","useStyles","makeStyles","theme","appBar","backgroundColor","palette","primary","main","color","contrastText","menuButton","title","flexGrow","textAlign","avatar","dark","danger","error","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","height","spacing","marginRight","width","enteringScreen","display","NavBar","page","history","setMenuOpened","menuOpened","blockGoBack","setBlockGoBack","classes","AppBar","position","className","clsx","appBarShift","Toolbar","IconButton","edge","onClick","e","goBack","aria-label","ArrowBackRounded","Typography","variant","hide","MenuOpen","link","textDecoration","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","down","toolbar","alignItems","justifyContent","padding","mixins","buttonSignOut","flex","flexDirection","checkSelected","icon","slice","MenuDrawer","Drawer","anchor","paper","open","onClose","ChevronRight","Divider","List","to","ListItem","button","key","selected","location","pathname","ListItemIcon","Home","ListItemText","MoveToInbox","Contacts","LocalShipping","AccountBalanceWallet","LocalAtm","AccountBalance","Link","ShoppingCart","replace","auth","signOut","ExitToApp","DialogConfirmGoBack","Dialog","DialogTitle","DialogContent","DialogActions","Button","maxWidth","text","app","minHeight","maxHeight","fontSize","Layout","children","hiddenAppBar","user","useState","dialogBlockOpen","setdialogBackOpen","formatMoney","amount","decimalCount","Math","abs","isNaN","negativeSign","i","parseInt","Number","toFixed","toString","j","length","substr","console","log","obtenerFecha","f","Date","getDate","getMonth","getFullYear","fechaDetallada","getDay","checkSearch","search","checkWhiteSpace","checkSearchProducto","aux","checkCode","indexOf","getActualMonthDetailed","date","monthsList","filtrarCotizaciones","auxCotizaciones","nombre","valor","parseFloat","casa","compra","venta","getProductosList","productos","Object","keys","map","isSubproducto","push","getProductosListWithPrice","precio","getSubproductosList","subproducto","getAllProductosList","content","cardBgGreen","success","cardBgRed","marginTop","paddingTop","paddingLeft","paddingRight","secondary","overflow","stepper","backdrop","displayNone","paperCliente","containerDetallesCliente","flexWrap","titleDetallesCard","cardDeudaGreen","cardDeudaRed","cardCliente","titleCardCliente","chipCardDangerCliente","cursor","chipCardSuccessCliente","cardPedidoHeader","cardPedidoActions","containerProductos","cardDeudaRedCardPedido","cardDeudaGreenCardPedido","alertPedidoFacturado","alertEnvioInconveniente","cardTotalPedidoDanger","cardTotalPedidoSuccess","cardEnvioHeader","cardEnvioHeaderSuccess","cardEnvioHeaderDanger","cardEnvioHeaderWarning","warning","cardEnvioHeaderTextSuccess","cardEnvioHeaderTextWarning","cardEnvioHeaderIconSuccess","cardEnvioHeaderIconWarning","cardProducto","cardProductoChipAdeudado","cardProductoChipAfavor","paperTotalEnviarPedido","totalProductoNuevoPedido","paperTotalRecibirEntrega","iconLabelSelected","cardChequeHeader","cardChequeHeaderBaja","light","cardChequeEnviadoHeader","cardHeaderChequeIconDanger","cardHeaderChequeIconSuccess","cardChequeChip","alertCheque","CardHeaderGrupoCheques","CardMonthCheques","cardCadena","cardHeaderCadena","cardCadenaStep","cardHeaderCadenaStepActive","cardHeaderCadenaStepGreen","tabPanelDeuda","cardHeaderStep","activeBankAccountCard","disabledBankAccountCard","CarouselCotizaciones","PaperCarouselCotizaciones","CardCliente","datos","anchorEl","setAnchorEl","Grid","item","xs","sm","md","lg","style","toLowerCase","Card","CardHeader","action","event","currentTarget","MoreVert","Menu","id","keepMounted","Boolean","MenuItem","deleteButton","CardContent","container","justify","Chip","deuda","AttachMoney","label","connect","state","clientes","props","setSearch","uid","Paper","PersonAdd","TextField","value","onChange","target","disabled","src","Empty","alt","Deuda","generateChartDeudas","subheader","tipo","size","History","Add","ProductoCardPedido","producto","factura","expanded","setExpanded","facturacion","setFacturacion","getPrecioAnterior","discount","increase","cantidad","ExpandLess","ExpandMore","cotizacion","Collapse","in","timeout","unmountOnExit","CardPedido","pedido","searchPedido","searchRemito","elevation","header","fecha","total","metodoDeEnvio","Alert","severity","expreso","remito","metodoDePago","articulos","pagado","adeudado","deudaPasada","deudaActualizada","totalTransferencia","cuentaTransferencia","efectivo","chequesPersonales","totalChequesPersonales","cheque","cheques","ListaDePedidos","pedidos","undefined","indexYear","months","reverse","month","keyPedido","idPedido","entregas","keyEntrega","idEntrega","Detalles","dni","cuit","direcciones","telefonos","mails","infoExtra","expresos","PeopleAlt","noData","Room","direccion","calleYnumero","ciudad","provincia","cp","Phone","telefono","numero","Mail","mail","ContactMail","info","DialogConfirmDelete","setOpen","eliminarCliente","fullWidth","dividers","gutterBottom","autoFocus","photosList","cliente","showSnackbar","setshowSnackbar","loading","setLoading","showDialogConfirmDelete","setshowDialogConfirmDelete","filteredPedidos","setFilteredPedidos","useEffect","years","keyCliente","forEach","year","split","1","2","3","4","5","6","7","8","9","10","11","12","sortedPedidos","entries","sort","year1","setTimeout","deudas","labels","initialMonth","now","setMonth","pagos","pago","day","auxFecha","setFullYear","auxdeudas","options","chart","sparkline","enabled","stroke","curve","tooltip","y","formatter","val","series","name","type","articulo","pos","mode","fillSeriesColor","generateChartProductos","sales","labelsUltimoAnio","fechaActual","mesActual","anioActual","auxSales","mesInicio","anioInicio","initialDate","dataMonth","Array","fill","auxMeses","arr1Meses","arr2Meses","arr1Sales","arr2Sales","grid","row","colors","opacity","dataLabels","dropShadow","left","top","yaxis","show","generateChartAnualSales","eliminarPedido","database","ref","child","remove","then","catch","EditOutlined","DeleteOutline","Backdrop","CircularProgress","Snackbar","autoHideDuration","Telefonos","seteditIndex","showDialog","openDialogDelete","ListItemSecondaryAction","DeleteOutlineOutlined","Direccion","InfoExtra","index","Mails","input","marginBottom","DialogNuevaDireccion","setdirecciones","edit","editIndex","setcalleYnumero","setciudad","setprovincia","setcp","resetTextFields","direction","editarDireccion","agregarDireccion","DialogNuevoTelefono","settelefonos","setnombre","setnumero","editarTelefono","agregarTelefono","DialogNuevaInfoExtra","setinfoExtra","nuevaInfo","setnuevaInfo","editarInfoExtra","agregarInfoExtra","DialogNuevoMail","setmails","setmail","editarMail","agregarMail","DialogEliminarElemento","setopen","setDatos","setdeleteIndex","tipoDeElemento","splice","eliminarElemento","Step","tipoDeDato","Expresos","setshowDialog","showDialogDelete","setshowDialogDelete","deleteIndex","handleChange","startIcon","AddOutlined","FormControl","InputLabel","Select","multiple","Input","renderStep","FormDetalles","setdni","setcuit","setexpresos","setdeuda","activeStep","setActiveStep","steps","handleNext","prevActiveStep","handleBack","guardarDatos","newAux","update","Stepper","orientation","StepLabel","getStepLabel","StepContent","step","getStepContent","proveedores","CardProveedor","proveedor","searchEntrega","filteredEntregas","setFilteredEntregas","keyProveedor","entrega","sortedEntregas","CardExpreso","DialogAsentarInconveniente","asentarInconveniente","descripcion","setDescripcion","margin","InputLabelProps","shrink","CardEnvio","envio","asentarLlegada","asentarResolucionInconveniente","showDialogAsentarInconveniente","setshowDialogAsentarInconveniente","handleClose","fechaDeLlegada","inconveniente","resolucionInconveniente","ListaDeEnvios","envios","Clear","setExpreso","Productos","TableContainer","component","Table","TableHead","TableRow","TableCell","align","TableBody","scope","DialogNuevoProducto","setproductos","productosList","settotal","setproducto","setcantidad","setDiscount","setIncrease","redondeo","setRedondeo","showPriceModifier","setShowPriceModifier","setprecio","editarPrecio","seteditarPrecio","editarProducto","nuevoTotal","actualizarTotal","obtenerPrecio","getDiscountPrice","porcentaje","getIncreasedPrice","Autocomplete","freeSolo","getOptionLabel","option","onSelect","renderInput","params","getDiscount","CheckCircle","CancelRounded","agregarProducto","cotizaciones","dolares","setfecha","setDisabled","guardarPedido","compras","ventas","sortedCompras","setSortedCompras","sortedVentas","setSortedVentas","setValue","sortedProductos","setSortedProductos","setSortedClientes","TabPanel","role","hidden","Box","p","auxSortedCompras","yearsCompras","filtrarCompras","auxSortedVentas","yearsVentas","filtrarVentas","auxSortedProductos","currentYear","filter","yearData","v","findIndex","d","filtrarProductos","auxSortedClientes","filtrarClientes","currentMonth","daysInMonth","from","auxData","totalMonth","auxBalance","generateChartMonthSalesValue","generateChartMonthPurchasesValue","consumoFacturado","totalIva","background","generateChartMonthIva","generateChartMonthBalance","purchases","dif","auxPurchases","arr1Purchases","arr2Purchases","sale","purchase","products","auxProducts","product","arr1Products","arr2Products","auxFinalData","generateChartAnualProductsValue","generateChartAnualProducts","generateChartAnualIva","Tabs","newValue","Tab","generateChartProductsValue","generateChartAnualProductsUnits","CardDeudaCliente","CardDeudaProveedor","totalClientes","setTotalClientes","totalProveedores","setTotalProveedores","auxFilteredDeudas","values","generateChartDeudasClientes","generateChartDeudasProveedores","setShowDialogDelete","setDeleteIndex","setUpdatePricesIndex","setShowDialogUpdatePrices","tipoDeCambio","textWhite","cardProductoChip","CardActions","FormControlLabel","control","Switch","checked","DialogConfirmAction","setShowDialog","Cheque","guardarChequeRebotado","guardarChequeEnBlanco","guardarChequeEnNegro","setShowDialogSelectGroup","setIdGroup","dadoDeBaja","destinatario","acreditado","grupo","vencimiento","depositadoEnCuenta","egreso","ingreso","banco","setTotalBlanco","setTotalNegro","sortedCheques","setSortedCheques","showDialogSelectGroup","idGroup","actualizarDeuda","nuevaDeudaCliente","nuevaDeudaProveedor","guardarPago","calcularDeudaActualizada","getDeudaPasada","auxSortedCheques","yearOfCheque","totalDisponible","filtrarCheques","auxBlanco","auxNegro","obtenerTotalGrupos","endIcon","ArrowForward","StepperCadena","cadenaDeProduccion","alternativeLabel","proceso","CardProducto","historialDeStock","subproductos","eliminarProducto","historialDeProduccion","iniciarCadena","marginLeft","ListSubheader","auxHistorial","movimiento","generateChartHistorialStock","generateChartSubproductos","fechaDeInicio","firebase","historialDeCadenas","Tabla","stickyHeader","titulo","card","media","CardAnualIva","CardMensualIva","CardContentMensual","default","Compras","MesDeCompras","Ventas","MesDeVentas","setYear","gridTable","MenuCheques","ArrowDropDown","auxEfectivo","calcularTotal","MenuChequesPersonales","showDialogUpdatePrices","updatePricesIndex","auxPedido","auxTotal","actualizarPrecio","CardEntrega","eliminarEntrega","table","proveedoresList","getProductos","utils","DateFnsUtils","noValidate","disableToolbar","format","guardarEntrega","Cheques","chequesList","addCheque","Checkbox","ChequesPersonales","DialogNuevoChequePersonal","listaChequesPersonales","listaCheques","setListaCheques","setListaChequesPersonales","setTotalChequesPersonales","setvencimiento","setvalor","convertirVencimiento","lastIndexOf","auxVencimiento","toLocaleDateString","editarCheque","agregarCheque","DialogEliminarCheque","eliminarCheque","setefectivo","setcheques","setChequesPersonales","setexpreso","setremito","setsumarEnvio","sumarEnvio","setCuentaTransferencia","setTotalTransferencia","cuentasBancarias","InputProps","startAdornment","InputAdornment","CuentasBancarias","recibirEntrega","a","aumentarProductos","actualizarCheques","chequesPersonalesList","agregarChequesPersonales","calcularAdeudado","calcularPagado","actualizarPrecios","idLink","agregarAListaDeCompras","agregarPagoAlHistorial","guardarTransferenciaBancaria","nuevaCantidad","auxCheque","totalPedido","totalRecibido","cuenta","auxDeposito","expresosList","DialogNuevoCheque","setdatos","setbanco","check","setcheck","enviarPedido","descontarProductos","guardarCheques","agregarAListaDeIva","agregarAListaDeVentas","iva","StepperNuevoProducto","Edit","Delete","Subproductos","DialogAgregarProceso","setEdit","setcadenaDeProduccion","setNombre","setProveedor","isProcesoPropio","setisProcesoPropio","FormGroup","DialogNuevoSubproducto","setSubproductos","subproductosList","setCantidad","editarSubproducto","agregarSubproducto","disableCantidad","setIsSubproducto","iterm","guardarProducto","AccountTree","searchx","root","PantallaDeCarga","LocalGasStationOutlined","form","submit","checkBox","linkButtons","logo","FormSignIn","inputUser","setInputUser","setloading","emailSended","setEmailSended","resetConfirmation","setResetConfirmation","inputPassword","setInputPassword","userError","setUserError","passwordError","setPasswordError","logIn","signInWithEmailAndPassword","code","Avatar","LockOutlined","helperText","required","Grow","languageCode","sendPasswordResetEmail","AlertTitle","right","bottom","image","img","objectFit","borderRadius","borderColor","border","SignInPage","foto","reducer","NotFound","deudaActual","CardStep","iniciarProceso","fechaDeEntrega","Cadena","cadena","getStep","procesos","cadenasActivas","generateChartCadena","historial","inicio","x","getTime","plotOptions","bar","horizontal","xaxis","setPrecio","setEfectivo","checkStepProceso","finalizarProceso","actualizarCadenaDeProduccion","aumentarProducto","descontarSubproductos","CardCuentaBancaria","active","activeAccount","nuevaCuenta","setNuevaCuenta","agregarNuevaCuentaBancaria","auxCuentaBancaria","cuentasList","setDestinatario","depositarCheque","actualizarCheque","asentarAcreditacion","guardarChequeEnGrupo","fechaAcreditacion","setTitulo","settotalIva","guardarConsumoFacturado","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","onAuthStateChanged","on","snapshot","fetch","response","json","createStore","setState","themeProvider","createMuiTheme","white","this","ThemeProvider","exact","path","Inicio","Iva","Clientes","Cliente","NuevoCliente","Proveedores","Proveedor","NuevoProveedor","Expreso","HistorialCliente","HistorialProveedor","NuevoExpreso","Deudas","NuevoConsumoFacturado","DepositarCheque","NuevoProducto","NuevaCuentaBancaria","Pedidos","NuevoPedido","EnviarPedido","Entregas","NuevaEntrega","RecibirEntrega","NuevoPagoCliente","NuevoPagoProveedor","CadenasDeProduccion","HistorialDeProduccion","FinalizarProceso","FinalizarProcesoPropio","Component","isLocalhost","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.16b3713e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0024a6bc.png\";","module.exports = __webpack_public_path__ + \"static/media/Home.a273eee2.png\";","module.exports = __webpack_public_path__ + \"static/media/Valvulas.d6b035d7.png\";","module.exports = __webpack_public_path__ + \"static/media/Empty.0b4b4cfd.png\";","import React, { Component } from 'react';\r\nimport {BrowserRouter,Route,Switch} from 'react-router-dom'\r\nimport Clientes from './Pages/Clientes'\r\nimport Cliente from './Pages/Cliente'\r\nimport NuevoCliente from './Pages/NuevoCliente'\r\nimport NuevoProveedor from './Pages/NuevoProveedor'\r\nimport Proveedores from './Pages/Proveedores'\r\nimport Proveedor from './Pages/Proveedor'\r\nimport Expresos from './Pages/Expresos'\r\nimport Expreso from './Pages/Expreso'\r\nimport NuevoExpreso from './Pages/NuevoExpreso'\r\nimport NuevoPedido from './Pages/NuevoPedido'\r\nimport Inicio from './Pages/Inicio'\r\nimport Deudas from './Pages/Deudas'\r\nimport Cheques from './Pages/Cheques'\r\nimport Productos from './Pages/Productos'\r\nimport Iva from './Pages/Iva'\r\nimport HistorialCliente from './Pages/HistorialCliente'\r\nimport HistorialProveedor from './Pages/HistorialProveedor';\r\nimport Pedidos from './Pages/Pedidos'\r\nimport Entregas from './Pages/Entregas'\r\nimport NuevaEntrega from './Pages/NuevaEntrega'\r\nimport RecibirEntrega from './Pages/RecibirEntrega'\r\nimport EnviarPedido from './Pages/EnviarPedido'\r\nimport NuevoProducto from './Pages/NuevoProducto'\r\nimport {SignInPage} from './Pages/SignIn'\r\nimport {PantallaDeCarga} from './Pages/PantallaDeCarga'\r\nimport {Provider} from 'react-redux'\r\nimport reducer from './reducers'\r\nimport {createStore} from 'redux'\r\nimport * as firebase from 'firebase'\r\nimport {NotFound} from './Pages/NotFound'\r\nimport { createMuiTheme,ThemeProvider } from '@material-ui/core/styles';\r\nimport NuevoPagoProveedor from './Pages/NuevoPagoProveedor';\r\nimport NuevoPagoCliente from './Pages/NuevoPagoCliente';\r\nimport CadenasDeProduccion from './Pages/CadenasDeProduccion';\r\nimport HistorialDeProduccion from './Pages/HistorialDeProduccion';\r\nimport FinalizarProceso from './Pages/FinalizarProceso';\r\nimport CuentasBancarias from './Pages/CuentasBancarias';\r\nimport NuevaCuentaBancaria from './Pages/NuevaCuentaBancaria';\r\nimport DepositarCheque from './Pages/DepositarCheque';\r\nimport ChequesPersonales from './Pages/ChequesPersonales';\r\nimport FinalizarProcesoPropio from './Pages/FinalizarProcesoPropio';\r\nimport NuevoConsumoFacturado from './Pages/NuevoConsumoFacturado';\r\n\r\nlet store \r\nlet data\r\n\r\n\r\n//FIREBASE\r\nvar config = {\r\n    apiKey: \"AIzaSyDPmTjxjMxN2abofP8ZczgFGeYQYSvbXHE\",\r\n    authDomain: \"stock-119e8.firebaseapp.com\",\r\n    databaseURL: \"https://stock-119e8.firebaseio.com\",\r\n    projectId: \"stock-119e8\",\r\n    storageBucket: \"stock-119e8.appspot.com\",\r\n    messagingSenderId: \"1007277754269\",\r\n    appId: \"1:1007277754269:web:d1db0def0da907b2\"\r\n};\r\n\r\nfirebase.initializeApp(config)\r\nclass App extends Component {\r\n  state={\r\n    loading:true,\r\n  }\r\n\r\n  // Comprobacion de usuario y creacion del store\r\n  async componentDidMount(){\r\n    firebase.auth().onAuthStateChanged(async user=>{\r\n      if(user){\r\n        const databaseRef = await firebase.database().ref().child(user.uid)\r\n        databaseRef.on('value', snapshot=>{\r\n          data= snapshot.val()\r\n          var dolares = []\r\n          fetch(\"https://www.dolarsi.com/api/api.php?type=valoresprincipales\")\r\n            .then((response) => response.json())  \r\n            .then((info) => dolares = info)\r\n            .then(()=>{\r\n              store=createStore(reducer, {dolares:dolares,user:user,...data})\r\n              this.setState({store,user:user,loading:false})\r\n            })\r\n        })\r\n      }\r\n      else{\r\n        this.setState({user:null,loading:false})\r\n        this.setState({loading:false})\r\n      }\r\n    })\r\n  }\r\n  \r\n  render(){\r\n    //creacion del tema \r\n    const themeProvider = createMuiTheme({\r\n      palette: {\r\n          white:'#fff',\r\n          primary: {\r\n            light: '#5e92f3',\r\n            main: '#01579b',\r\n            dark: '#003c8f',\r\n            contrastText: '#fff',\r\n          },\r\n          secondary: {\r\n            light: '#4f5b62',\r\n            main: '#263238',\r\n            dark: '#000a12',\r\n            contrastText: '#000',\r\n          },\r\n          info:{\r\n            main:'#ffeb3b',\r\n            contrastText:'#000'\r\n          },\r\n          danger:{\r\n            main:'#c62828',\r\n            light:'#ef5350'\r\n          },\r\n          success:{\r\n            main:'#2e7d32',\r\n            light:'#66bb6a',\r\n            dark:'#43a047'\r\n          },\r\n          type:'dark'\r\n      }\r\n  });\r\n\r\n    //PANTALLA DE CARGA\r\n    if(this.state.loading){\r\n      return(\r\n          <ThemeProvider theme={themeProvider}>\r\n              <PantallaDeCarga/>\r\n          </ThemeProvider>\r\n      )\r\n    }\r\n    //DIVISION DE RUTAS\r\n    else{\r\n      // RUTEADO DE LA APP\r\n      if(this.state.user){\r\n        return (\r\n          <ThemeProvider theme={themeProvider}>\r\n              <Provider store={this.state.store}>\r\n                <BrowserRouter>\r\n                  <Switch>\r\n                    <Route exact path='/' component={Inicio}/>\r\n                    <Route exact path='/Iva' component={Iva}/>\r\n                    <Route exact path='/Clientes' component={Clientes}/>\r\n                    <Route exact path='/Cliente' component={Cliente}/>\r\n                    <Route exact path='/Nuevo-Cliente' component={NuevoCliente}/>\r\n                    <Route exact path='/Editar-Cliente' component={NuevoCliente}/>\r\n                    <Route exact path='/Proveedores' component={Proveedores}/>\r\n                    <Route exact path='/Proveedor' component={Proveedor}/>\r\n                    <Route exact path='/Nuevo-Proveedor' component={NuevoProveedor}/>\r\n                    <Route exact path='/Editar-Proveedor' component={NuevoProveedor}/>\r\n                    <Route exact path='/Expresos' component={Expresos}/>\r\n                    <Route exact path='/Expreso' component={Expreso}/>\r\n                    <Route exact path='/Historial-Cliente' component={HistorialCliente}/>\r\n                    <Route exact path='/Historial-Proveedor' component={HistorialProveedor}/>\r\n                    <Route exact path='/Nuevo-Expreso' component={NuevoExpreso}/>\r\n                    <Route exact path='/Editar-Expreso' component={NuevoExpreso}/>\r\n                    <Route exact path='/Deudas' component={Deudas}/>\r\n                    <Route exact path='/Nuevo-Consumo-Facturado' component={NuevoConsumoFacturado}/>\r\n                    \r\n                    <Route exact path='/Cheques' component={Cheques}/>\r\n                    <Route exact path='/Cheques-Personales' component={ChequesPersonales}/>\r\n                    <Route exact path='/Depositar-Cheque' component={DepositarCheque}/>\r\n\r\n                    <Route exact path='/Productos' component={Productos}/>\r\n                    <Route exact path='/Nuevo-Producto' component={NuevoProducto}/>\r\n                    <Route exact path='/Editar-Producto' component={NuevoProducto}/>\r\n\r\n                    <Route exact path='/Cuentas-Bancarias' component={CuentasBancarias}/>\r\n                    <Route exact path='/Nueva-Cuenta-Bancaria' component={NuevaCuentaBancaria}/>\r\n                    \r\n                    <Route exact path='/Pedidos' component={Pedidos}/>\r\n                    <Route exact path='/Nuevo-Pedido' component={NuevoPedido}/>\r\n                    <Route exact path='/Editar-Pedido' component={NuevoPedido}/>\r\n                    <Route exact path='/Enviar-Pedido' component={EnviarPedido}/>\r\n                    \r\n                    <Route exact path='/Entregas' component={Entregas}/>\r\n                    <Route exact path='/Nueva-Entrega' component={NuevaEntrega}/>\r\n                    <Route exact path='/Editar-Entrega' component={NuevaEntrega}/>\r\n                    <Route exact path='/Recibir-Entrega' component={RecibirEntrega}/>\r\n\r\n                    <Route exact path='/Nuevo-Pago-Cliente' component={NuevoPagoCliente}/>\r\n                    <Route exact path='/Nuevo-Pago-Proveedor' component={NuevoPagoProveedor}/>\r\n\r\n                    <Route exact path='/Cadenas-De-Produccion' component={CadenasDeProduccion}/>\r\n                    <Route exact path='/Historial-De-Produccion' component={HistorialDeProduccion}/>\r\n                    <Route exact path='/Finalizar-Proceso' component={FinalizarProceso}/>\r\n                    <Route exact path='/Finalizar-Proceso-Propio' component={FinalizarProcesoPropio}/>\r\n    \r\n                    <Route component={NotFound}/>\r\n                  </Switch>\r\n                </BrowserRouter>\r\n              </Provider>\r\n            </ThemeProvider>\r\n        )\r\n      }\r\n      //Si no hay usuario la unica ruta es SignIn\r\n      else{\r\n        return (\r\n          <ThemeProvider theme={themeProvider}>\r\n            <BrowserRouter>\r\n              <Switch>\r\n                <Route exact path='/' component={SignInPage}/>\r\n                <Route component={NotFound}/>\r\n              </Switch>\r\n            </BrowserRouter>\r\n          </ThemeProvider>\r\n        )\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport {makeStyles} from '@material-ui/core'\r\nimport {AppBar,Toolbar,IconButton,Typography} from '@material-ui/core'\r\nimport {MenuOpen,ArrowBackRounded} from '@material-ui/icons'\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nconst useStyles = makeStyles( theme=>({\r\n    appBar:{\r\n        backgroundColor:theme.palette.primary.main,\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    menuButton: {\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        textAlign:'center'\r\n    },\r\n    avatar:{\r\n        color: theme.palette.primary.contrastText,\r\n        backgroundColor: theme.palette.primary.dark,\r\n    },\r\n    danger:{\r\n        color:theme.palette.error.main\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        height:theme.spacing(8)\r\n      },\r\n      appBarShift: {\r\n        marginRight: 240,\r\n        width: `calc(100% - ${240}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n      },\r\n      menuButton: {\r\n        marginRight: 18,\r\n      },\r\n      hide: {\r\n        display: 'none',\r\n      },\r\n}))\r\n\r\nexport const NavBar = ({page,history,setMenuOpened,menuOpened,blockGoBack,setBlockGoBack}) =>{\r\n    const classes = useStyles()\r\n    return(\r\n        <AppBar position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: menuOpened,\r\n        })} >\r\n            <Toolbar>\r\n            {!menuOpened &&\r\n              page!=='Menu'&&\r\n                  <IconButton edge=\"end\" onClick={e=>{\r\n                      blockGoBack?setBlockGoBack(true):history.goBack()\r\n                  }} color=\"inherit\" aria-label=\"menu\">\r\n                      <ArrowBackRounded />\r\n                  </IconButton>\r\n            }\r\n            <Typography variant=\"h6\" className={classes.title} >\r\n                {page}\r\n            </Typography>\r\n            {!menuOpened &&\r\n                <IconButton edge=\"end\" className={clsx(classes.menuButton, {\r\n                    [classes.hide]: menuOpened,\r\n                  })} onClick={e=>{\r\n                    setMenuOpened(true)\r\n                }} color=\"inherit\" aria-label=\"menu\">\r\n                    <MenuOpen />\r\n                </IconButton>\r\n            }\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}","import React from 'react'\r\nimport {auth} from 'firebase'\r\nimport {Card,CardMedia,Drawer,List,makeStyles,ListItem,IconButton,ListItemIcon,ListItemText,Divider} from '@material-ui/core'\r\nimport {MoveToInbox,Home,List as ListIcon,ExitToApp,Link as LinkIcon,AccountBalanceWallet,LocalShipping,ChevronRight,LocalAtm,ShoppingCart, AccountBalance, Contacts} from '@material-ui/icons'\r\nimport {Link} from 'react-router-dom'\r\nimport logo from '../images/logo.png'\r\nimport clsx from 'clsx';\r\n\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    link:{\r\n        textDecoration:'none !important',\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n      drawer: {\r\n        width: '240px',\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n      },\r\n      drawerOpen: {\r\n        width: '240px',\r\n        transition: theme.transitions.create('width', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n      },\r\n      drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.down('xs')]: {\r\n          width: 0,\r\n        },\r\n      },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height:theme.spacing(8),\r\n        justifyContent: 'flex-start',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n      },\r\n      buttonSignOut:{\r\n          flex:1,\r\n          display:'flex',\r\n          flexDirection:'column',\r\n          justifyContent:'flex-end'\r\n\r\n      }\r\n}))\r\n\r\n//FUNCTIONS \r\n\r\nconst checkSelected = (icon,page) =>{\r\n    if(icon==page){\r\n        return true\r\n    }\r\n    else if(icon=='Inicio' && page== ''){\r\n        return true\r\n    }\r\n    // PRODUCTOS\r\n    else if(icon==='Productos' && (page=='Nuevo-Producto' || page=='Editar-Producto')){\r\n        return true\r\n    }\r\n    // PEDIDOS\r\n    else if(icon==='Pedidos' && (page=='Enviar-Pedido' || page=='Editar-Pedido')){\r\n        return true\r\n    }\r\n    // ENTREGAS\r\n    else if(icon==='Entregas' && (page=='Recibir-Entrega' || page=='Editar-Entrega')){\r\n        return true\r\n    }\r\n    // CLIENTES\r\n    else if(icon==='Clientes'&& (page=='Nuevo-Cliente'||page=='Editar-Cliente'||page.slice(0,7)=='Cliente'||page.slice(0,17)=='Historial-Cliente')){\r\n        return true\r\n    }\r\n    // PROVEEDORES\r\n    else if(icon==='Proveedores'&& (page=='Nuevo-Proveedor'||page=='Editar-Proveedor'||page.slice(0,9)=='Proveedor'||page.slice(0,19)=='Historial-Proveedor')){\r\n        return true\r\n    }\r\n    // EXPRESOS\r\n    else if(icon==='Expresos'&& (page=='Nuevo-Expreso'||page=='Editar-Expreso'||page.slice(0,7)=='Expreso')){\r\n        return true\r\n    }\r\n     // CHEQUES\r\n     else if(icon==='Cheques'&& (page=='Depositar-Cheque' || page=='Cheques-Personales')){\r\n        return true\r\n    }\r\n    // CADENAS DE PRODUCCION\r\n    else if(icon==='Cadenas De Produccion'&& (page.slice(0,23)=='Historial De Produccion'||page=='Finalizar Proceso')){\r\n        return true\r\n    }\r\n    else{\r\n        return false\r\n    }\r\n}\r\nexport const MenuDrawer = ({menuOpened,setMenuOpened,history,page})=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Drawer \r\n            anchor='right'\r\n            variant=\"permanent\"\r\n            className={clsx(classes.drawer, {\r\n                [classes.drawerOpen]: menuOpened,\r\n                [classes.drawerClose]: !menuOpened,\r\n            })}\r\n            classes={{\r\n                paper: clsx({\r\n                [classes.drawerOpen]: menuOpened,\r\n                [classes.drawerClose]: !menuOpened,\r\n            }),\r\n            }} \r\n            open={menuOpened}  \r\n            onClose={e=>{setMenuOpened(false)}}>\r\n            <div className={classes.toolbar}>\r\n                <IconButton onClick={()=>{setMenuOpened(false)}}>\r\n                    <ChevronRight /> \r\n                </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n                <Link className={classes.link} to='/'>\r\n                    <ListItem button key={'Inicio'} selected={checkSelected('Inicio',history.location.pathname.slice(1))}>\r\n                        <ListItemIcon>\r\n                            <Home/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={'Inicio'} />\r\n                    </ListItem>\r\n                </Link>\r\n            <Divider />\r\n                <Link className={classes.link} to='/Productos'>\r\n                    <ListItem button key={'Productos'} selected={checkSelected('Productos',history.location.pathname.slice(1))}>\r\n                        <ListItemIcon>\r\n                            <ListIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={'Productos'} />\r\n                    </ListItem>\r\n                </Link>\r\n                <Divider />\r\n                <Link className={classes.link} to='/Pedidos'>\r\n                    <ListItem button key={'Pedidos'} selected={checkSelected('Pedidos',history.location.pathname.slice(1))}>\r\n                        <ListItemIcon>\r\n                            <MoveToInbox/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={'Pedidos'} />\r\n                    </ListItem>\r\n                </Link>\r\n            <Divider />\r\n                <Link className={classes.link} to='/Entregas'>\r\n                    <ListItem button key={'Entregas'} selected={checkSelected('Entregas',history.location.pathname.slice(1))}>\r\n                        <ListItemIcon>\r\n                            <MoveToInbox/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={'Entregas'} />\r\n                    </ListItem>\r\n                </Link>\r\n            <Divider />\r\n                <Link className={classes.link} to='/Clientes'>\r\n                    <ListItem button key={'Clientes'} selected={checkSelected('Clientes',history.location.pathname.slice(1))}>\r\n                        <ListItemIcon>\r\n                            <Contacts/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={'Clientes'} />\r\n                    </ListItem>\r\n                </Link>\r\n            <Divider />\r\n                <Link className={classes.link} to='/Proveedores'>\r\n                    <ListItem button key={'Proveedores'} selected={checkSelected('Proveedores',history.location.pathname.slice(1))}>\r\n                        <ListItemIcon>\r\n                            <Contacts/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={'Proveedores'} />\r\n                    </ListItem>\r\n                </Link>\r\n            <Divider />\r\n                <Link className={classes.link} to='/Expresos'>\r\n                    <ListItem button key={'Expresos'} selected={checkSelected('Expresos',history.location.pathname.slice(1))}>\r\n                        <ListItemIcon>\r\n                            <LocalShipping/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={'Expresos'} />\r\n                    </ListItem>\r\n                </Link>\r\n            <Divider />\r\n            <Link className={classes.link} to='/Deudas'>\r\n                <ListItem button key={'Deudas'} selected={checkSelected('Deudas',history.location.pathname.slice(1))}>\r\n                        <ListItemIcon>\r\n                            <AccountBalanceWallet/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={'Deudas'} />\r\n                    </ListItem>\r\n                </Link>\r\n            <Divider />\r\n            <Link className={classes.link} to='/Cheques'>\r\n                <ListItem button key={'Cheques'} selected={checkSelected('Cheques',history.location.pathname.slice(1))}>\r\n                        <ListItemIcon>\r\n                            <LocalAtm/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={'Cheques'} />\r\n                    </ListItem>\r\n                </Link>\r\n            <Divider />\r\n            <Link className={classes.link} to='/Cuentas-Bancarias'>\r\n                <ListItem button key={'Cuentas Bancarias'} selected={checkSelected('Cuentas-Bancarias',history.location.pathname.slice(1))}>\r\n                        <ListItemIcon>\r\n                            <AccountBalance/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={'Cuentas Bancarias'} />\r\n                    </ListItem>\r\n                </Link>\r\n            <Divider />\r\n            </List>\r\n            <List className={classes.buttonSignOut}>\r\n                <Divider />\r\n                <Link className={classes.link} to='/Cadenas-De-Produccion'>\r\n                    <ListItem button key={'Cadenas De Produccion'} selected={checkSelected('Cadenas-De-Produccion',history.location.pathname.slice(1))}>\r\n                        <ListItemIcon>\r\n                            <LinkIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText  primary={'Cadenas de Produccion'} />\r\n                    </ListItem> \r\n                </Link>\r\n                <Divider />\r\n                <Link className={classes.link} to='/Nuevo-Pedido'>\r\n                    <ListItem button key={'Nuevo Pedido'} selected={checkSelected('Nuevo-Pedido',history.location.pathname.slice(1))}>\r\n                        <ListItemIcon>\r\n                            <ShoppingCart/>\r\n                        </ListItemIcon>\r\n                        <ListItemText  primary={'Nuevo Pedido'} />\r\n                    </ListItem> \r\n                </Link>\r\n                <Divider />\r\n                <Link className={classes.link} to='/Nueva-Entrega'>\r\n                    <ListItem button key={'Nueva Entrega'} selected={checkSelected('Nueva-Entrega',history.location.pathname.slice(1))}>\r\n                        <ListItemIcon>\r\n                            <ShoppingCart/>\r\n                        </ListItemIcon>\r\n                        <ListItemText  primary={'Nueva Entrega'} />\r\n                    </ListItem>    \r\n                </Link>\r\n                <Divider />\r\n                <ListItem button key={'Cerrar sesion'}  onClick={()=>{\r\n                    history.replace('/')\r\n                    auth().signOut()\r\n                }} >\r\n                    <ListItemIcon>\r\n                        <ExitToApp color='error'/>\r\n                    </ListItemIcon>\r\n                    <ListItemText  primary={'Cerrar sesion'} />\r\n                </ListItem>    \r\n            </List>\r\n        </Drawer>\r\n    )\r\n}","import React from 'react'\r\nimport {Dialog,DialogTitle,DialogActions,Button,DialogContent} from '@material-ui/core'\r\n\r\n\r\nexport const DialogConfirmGoBack = ({blockGoBack,setBlockGoBack,history}) =>{    \r\n    const goBack = () =>{\r\n        setBlockGoBack(false)\r\n        history.goBack()\r\n    }\r\n    return(\r\n        <Dialog open={blockGoBack}>\r\n            <DialogTitle>\r\n                Desea Salir?\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                Si continua se perderan los datos ingresados\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button \r\n                    onClick={()=>{\r\n                        setBlockGoBack(false)\r\n                    }}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n                <Button\r\n                    color='error'\r\n                    onClick={()=>{\r\n                        goBack()\r\n                    }}\r\n                >\r\n                    Continuar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React , {useState} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {NavBar} from '../components/Navbar'\r\nimport {MenuDrawer} from '../components/MenuDrawer'\r\nimport {DialogConfirmGoBack} from '../components/Dialogs/DialogConfirmGoBack'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    drawer:{\r\n        maxWidth:'300px',\r\n        height:'100%',\r\n    },\r\n    icon:{\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    text:{\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    app:{\r\n        minHeight: '100vh',\r\n        height: '100vh',\r\n        maxHeight:'100vh',\r\n        display: 'flex',\r\n        textAlign: 'center',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'start',\r\n        fontSize: 'calc(10px + 2vmin)',\r\n        color: 'white',\r\n    },\r\n}));\r\n\r\n\r\nexport const Layout=({page,children,history,hiddenAppBar,blockGoBack,user})=>{\r\n    const classes = useStyles();\r\n    const [menuOpened,setMenuOpened]=useState(false)\r\n    const [dialogBlockOpen,setdialogBackOpen]=useState(false)\r\n    return(\r\n        <>\r\n            <DialogConfirmGoBack blockGoBack={dialogBlockOpen} setBlockGoBack={setdialogBackOpen} history={history}/>\r\n            {!hiddenAppBar&&\r\n                <NavBar page={page} history={history} setMenuOpened={setMenuOpened} menuOpened={menuOpened} blockGoBack={blockGoBack} setBlockGoBack={setdialogBackOpen}/>\r\n            }\r\n            {children}\r\n            {!hiddenAppBar&&\r\n                <MenuDrawer menuOpened={menuOpened} setMenuOpened={setMenuOpened} history={history} blockGoBack={blockGoBack} setBlockGoBack={setdialogBackOpen} page={[page]}/>\r\n            }\r\n        </>\r\n    )\r\n}","export const formatMoney =amount=> {\r\n    let decimalCount = 2\r\n    let decimal = ','\r\n    let thousands = '.'\r\n    try {\r\n      decimalCount = Math.abs(decimalCount);\r\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\r\n  \r\n      const negativeSign = amount < 0 ? \"-\" : \"\";\r\n  \r\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\r\n      let j = (i.length > 3) ? i.length % 3 : 0;\r\n        \r\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\r\n    } \r\n    catch (e) {\r\n      console.log(e)\r\n    }\r\n}\r\nexport const obtenerFecha = () =>{\r\n  var f=new Date()\r\n  return `${f.getDate()}/${f.getMonth()+1}/${f.getFullYear()}`\r\n}\r\nexport const convertirFecha = (fecha) =>{\r\n  return `${fecha.getDate()}/${fecha.getMonth()+1}/${fecha.getFullYear()}`\r\n}\r\n\r\nexport const fechaDetallada = () =>{\r\n  let meses = [\"Enero\",\"Febrero\",\"Marzo\",\"Abril\",\"Mayo\",\"Junio\",\"Julio\",\"Agosto\",\"Septiembre\",\"Octubre\",\"Noviembre\",\"Diciembre\"]\r\n  let diasSemana = [\"Domingo\",\"Lunes\",\"Martes\",\"Miércoles\",\"Jueves\",\"Viernes\",\"Sábado\"]\r\n  var f=new Date()\r\n  return `${diasSemana[f.getDay()]} ${f.getDate()} de ${meses[f.getMonth()]} de ${f.getFullYear()}`\r\n}\r\n\r\n// CHECK IF SEARCH CONTAINS WHITE SPACES\r\nexport const checkSearch =(search)=>{\r\n  let aux = checkWhiteSpace(search.slice(1).toString())\r\n  return aux\r\n}\r\n\r\nexport const checkSearchProducto =(search)=>{\r\n  let aux = checkWhiteSpace(search.slice(1).toString())\r\n  return checkCode(aux)\r\n}\r\nconst checkWhiteSpace =(text)=>{\r\n  var aux = text\r\n  while(aux.indexOf('%20')!=-1){\r\n      aux = aux.slice(0,aux.indexOf('%20')) + ' ' + aux.slice(aux.indexOf('%20')+3)\r\n  }\r\n  return aux\r\n}\r\nconst checkCode =(text)=>{\r\n  var aux = text\r\n  while(aux.indexOf('%C2%BD')!=-1){\r\n      aux = aux.slice(0,aux.indexOf('%C2%BD')) + ' ½' + aux.slice(aux.indexOf('%C2%BD')+6)\r\n  }\r\n  while(aux.indexOf('%C2%BC')!=-1){\r\n    aux = aux.slice(0,aux.indexOf('%C2%BC')) + ' ¼' + aux.slice(aux.indexOf('%C2%BC')+6)\r\n  }\r\n  while(aux.indexOf('%C2%BE')!=-1){\r\n    aux = aux.slice(0,aux.indexOf('%C2%BE')) + ' ¾' + aux.slice(aux.indexOf('%C2%BE')+6)\r\n  }\r\n  while(aux.indexOf('%22')!=-1){\r\n    aux = aux.slice(0,aux.indexOf('%22')) + '\"' + aux.slice(aux.indexOf('%22')+3)\r\n  }\r\n  return aux\r\n}\r\n\r\nexport const getActualMonth = (date) =>{\r\n  if(date){\r\n    let month = date.slice(date.indexOf('/')+1)\r\n    if(month.indexOf('/')){\r\n      month = month.slice(0,month.indexOf('/'))\r\n    }\r\n    return month\r\n  }\r\n  else{\r\n    return new Date().getMonth()+1\r\n  }\r\n}\r\nexport const getActualMonthDetailed = (date) =>{\r\n    return monthsList[new Date().getMonth()]\r\n}\r\nexport const filtrarCotizaciones = (aux) => {\r\n  let auxCotizaciones = []\r\n  console.log(aux)\r\n  auxCotizaciones[0] = {nombre:'Oficial Compra',valor:parseFloat(aux[0].casa.compra)}\r\n  auxCotizaciones[1] = {nombre:'Oficial Promedio',valor:(parseFloat(aux[0].casa.compra)+parseFloat(aux[0].casa.venta))/2}\r\n  auxCotizaciones[2] = {nombre:'Blue Compra',valor:parseFloat(aux[1].casa.compra)}\r\n  auxCotizaciones[3] = {nombre:'Blue Venta',valor:parseFloat(aux[1].casa.venta)}\r\n  auxCotizaciones[4] = {nombre:'Blue Promedio',valor:(parseFloat(aux[1].casa.compra)+parseFloat(aux[1].casa.venta))/2}\r\n  auxCotizaciones[5] = {nombre:'Oficial Venta',valor:parseFloat(aux[0].casa.venta)}\r\n  return(auxCotizaciones)\r\n}\r\n\r\n// OBTENER LISTA DE PRODUCTOS Y SUBPRODUCTOS\r\nexport const getProductosList = (productos) =>{\r\n  let aux = []\r\n  if(productos){\r\n      Object.keys(productos).map(key=>{\r\n          if(!productos[key].isSubproducto){\r\n              aux.push(productos[key])\r\n          }\r\n      })\r\n  }\r\n  console.log(aux)\r\n  return aux\r\n\r\n}\r\nexport const getProductosListWithPrice = (productos) =>{\r\n  let aux = []\r\n  if(productos){\r\n      Object.keys(productos).map(key=>{\r\n          if(!productos[key].isSubproducto){\r\n              aux.push({nombre:productos[key].nombre,precio:productos[key].precio})\r\n          }\r\n      })\r\n  }\r\n  return aux\r\n\r\n}\r\nexport const getClientList = (clientes) =>{\r\n  let aux = []\r\n  if(clientes){\r\n      Object.keys(clientes).map(key=>{\r\n        aux.push(key)\r\n      })\r\n  }\r\n  return aux\r\n\r\n}\r\nexport const getSubproductosList = (subproducto) =>{\r\n  let aux = []\r\n  if(subproducto){\r\n      Object.keys(subproducto).map(key=>{\r\n          if(subproducto[key].isSubproducto){\r\n              aux.push(subproducto[key])\r\n          }\r\n      })\r\n  }\r\n  return aux\r\n}\r\n\r\nexport const getAllProductosList = (subproducto) =>{\r\n  let aux = []\r\n  if(subproducto){\r\n      Object.keys(subproducto).map(key=>{\r\n        aux.push(subproducto[key])\r\n      })\r\n  }\r\n  return aux\r\n}\r\nexport const monthsList = [\"Enero\",\"Febrero\",\"Marzo\",\"Abril\",\"Mayo\",\"Junio\",\"Julio\",\"Agosto\",\"Septiembre\",\"Octubre\",\"Noviembre\",\"Diciembre\"]","import {CardHeader, makeStyles,Paper} from '@material-ui/core'\r\n\r\n//STYLES\r\nexport const content =makeStyles(theme=>({\r\n    cardBgGreen:{\r\n        backgroundColor:theme.palette.success.main\r\n    },\r\n    cardBgRed:{\r\n        backgroundColor:theme.palette.danger.main\r\n    },\r\n    //LAYOUT\r\n    content: {\r\n        flexGrow: 1,\r\n        height:'calc(100vh - 64px)',\r\n        marginTop:theme.spacing(8),\r\n        marginRight:theme.spacing(7),\r\n        paddingTop:theme.spacing(2),\r\n        paddingLeft:theme.spacing(2),\r\n        paddingRight:theme.spacing(2),\r\n        backgroundColor:theme.palette.secondary.main,\r\n        overflow:'scroll',\r\n    },\r\n    stepper:{\r\n        backgroundColor:'transparent'\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n    display:{\r\n        display:'block'\r\n    },\r\n    displayNone:{\r\n        display:'none'\r\n    },\r\n    // CLIENTE\r\n    paperCliente:{\r\n        width:'300px',\r\n        height:'200px',\r\n        overflow:'scroll'\r\n    },\r\n    containerDetallesCliente:{\r\n        overflow:'scroll',\r\n        flexWrap:'nowrap'\r\n    },\r\n    titleDetallesCard:{\r\n        backgroundColor:theme.palette.primary.main\r\n    },\r\n    cardDeudaGreen:{\r\n        backgroundColor:theme.palette.success.main,\r\n        width:'100%',\r\n    },\r\n    cardDeudaRed:{\r\n        backgroundColor:theme.palette.danger.main,\r\n        width:'100%',\r\n    },\r\n\r\n        // CARD CLIENT\r\n        cardCliente:{\r\n            backgroundColor:theme.palette.primary.main,\r\n        },\r\n        titleCardCliente:{\r\n            color: theme.palette.primary.contrastText,\r\n            textDecoration:'none',\r\n            textAlign:'center'\r\n        },\r\n        chipCardDangerCliente:{\r\n            backgroundColor:theme.palette.danger.main,\r\n            cursor:'pointer'\r\n        },\r\n        chipCardSuccessCliente:{\r\n            backgroundColor:theme.palette.success.main,\r\n            cursor:'pointer'\r\n        },\r\n    \r\n    // CARD PEDIDO\r\n    cardPedidoHeader:{\r\n        backgroundColor:theme.palette.primary.main\r\n    },\r\n    cardPedidoActions:{\r\n        backgroundColor:theme.palette.primary.dark\r\n    },\r\n    containerProductos:{\r\n        overflow:'scroll',\r\n        flexWrap:'nowrap'\r\n    },\r\n    cardDeudaRedCardPedido:{\r\n        backgroundColor:theme.palette.danger.main\r\n    },\r\n    cardDeudaGreenCardPedido:{\r\n        backgroundColor:theme.palette.success.main\r\n    },\r\n    alertPedidoFacturado:{\r\n        width:'100%',\r\n        color:'#000 !important'\r\n    },\r\n    alertEnvioInconveniente:{\r\n        width:'100%',\r\n        color:'#000 !important'\r\n    },\r\n\r\n    // NUEVO-PEDIDO\r\n    cardTotalPedidoDanger:{\r\n        padding:'15px',\r\n        backgroundColor:theme.palette.danger.main\r\n    },\r\n    cardTotalPedidoSuccess:{\r\n        padding:'15px',\r\n        backgroundColor:theme.palette.success.main\r\n    },\r\n    // CARD ENVIO\r\n    cardEnvioHeader:{\r\n        backgroundColor:theme.palette.primary.main\r\n    },\r\n    cardEnvioHeaderSuccess:{\r\n        backgroundColor:theme.palette.success.main\r\n    },\r\n    cardEnvioHeaderDanger:{\r\n        backgroundColor:theme.palette.danger.dark\r\n    },\r\n    cardEnvioHeaderWarning:{\r\n        backgroundColor:theme.palette.warning.main,\r\n        color:'#000 !important'\r\n    },\r\n    cardEnvioHeaderTextSuccess:{\r\n        color:'#fff',\r\n        textDecoration:'none',\r\n    },\r\n    cardEnvioHeaderTextWarning:{\r\n        color:'#000',\r\n        textDecoration:'none',    \r\n    },\r\n    cardEnvioHeaderIconSuccess:{\r\n        color:'#fff',\r\n    },\r\n    cardEnvioHeaderIconWarning:{\r\n        color:'#000',\r\n    },\r\n    \r\n    //CARD PRODUCTO\r\n    cardProducto:{\r\n        backgroundColor:theme.palette.primary.main,\r\n        width:'300px'\r\n    },\r\n    cardProductoChipAdeudado:{\r\n        backgroundColor:theme.palette.danger.main,\r\n        color:theme.palette.danger.contrastText\r\n    },\r\n    cardProductoChipAfavor:{\r\n        backgroundColor:theme.palette.success.main,\r\n        color:theme.palette.success.contrastText\r\n    },\r\n\r\n    //ENVIAR PEDIDO\r\n    paperTotalEnviarPedido:{\r\n        backgroundColor:theme.palette.success.main,\r\n        color:theme.palette.success.contrastText,\r\n        padding:'20px'\r\n    },\r\n\r\n    totalProductoNuevoPedido:{\r\n        backgroundColor:theme.palette.primary.main,\r\n        width:'100%'\r\n    },\r\n    //RECIBIR ENTREGA\r\n    paperTotalRecibirEntrega:{\r\n        backgroundColor:theme.palette.danger.main,\r\n        color:theme.palette.danger.contrastText,\r\n        padding:'20px'\r\n    },\r\n\r\n    //NUEVO CLIENTE \r\n    iconLabelSelected:{\r\n        backgroundColor:`${theme.palette.primary.main} !important`\r\n    },\r\n\r\n    // CARD CHEQUE\r\n    cardChequeHeader:{\r\n    },\r\n    cardChequeHeaderBaja:{\r\n        backgroundColor:theme.palette.danger.light\r\n    },\r\n    cardChequeEnviadoHeader:{\r\n        backgroundColor:theme.palette.success.dark,\r\n        color:'#000'\r\n    },\r\n    cardHeaderChequeIconDanger:{\r\n        color:'#000'\r\n    },\r\n    cardHeaderChequeIconSuccess:{\r\n        color:'#fff'\r\n    },\r\n\r\n    // CHEQUES\r\n    cardChequeChip:{\r\n        color:theme.palette.success.contrastText\r\n    },\r\n    alertCheque:{\r\n        width:'100%'\r\n    },\r\n    CardHeaderGrupoCheques:{\r\n        backgroundColor:theme.palette.primary.main,\r\n        padding:theme.spacing(2)\r\n    },\r\n    CardMonthCheques:{\r\n        width:'100%',\r\n        backgroundColor:theme.palette.primary.main\r\n    },\r\n\r\n    //CARD CADENA DE PRODUCCION\r\n    cardCadena:{\r\n        width:'100%'\r\n    },\r\n    cardHeaderCadena:{\r\n        backgroundColor:theme.palette.primary.main,\r\n    },\r\n    cardCadenaStep:{\r\n        width:'300px'\r\n    },\r\n    cardHeaderCadenaStepActive:{\r\n        backgroundColor:theme.palette.primary.main,\r\n    },\r\n    cardHeaderCadenaStepGreen:{\r\n        backgroundColor:theme.palette.success.main,\r\n    },\r\n\r\n    // DEUDAS\r\n    tabPanelDeuda:{\r\n        width:'100% !important'\r\n    },\r\n\r\n    // NUEVO PRODUCTO\r\n    cardHeaderStep:{\r\n        backgroundColor:theme.palette.primary.main\r\n    },\r\n\r\n    //CARD CUENTA BANCARIA\r\n    activeBankAccountCard:{\r\n        backgroundColor:theme.palette.success.main\r\n    },\r\n    disabledBankAccountCard:{\r\n\r\n    },\r\n\r\n\r\n    //CAROUSEL COTIZACIONES\r\n    CarouselCotizaciones:{\r\n        height:'100px'\r\n    },\r\n    PaperCarouselCotizaciones:{\r\n        height:'90px',\r\n        width:'250px'\r\n    }\r\n}))","import React, {useState} from 'react'\r\nimport {Grid,Card,CardContent,IconButton,Typography,Chip,Menu,MenuItem, CardHeader} from '@material-ui/core'\r\nimport {formatMoney} from '../../utilities'\r\nimport {AttachMoney,MoreVert} from '@material-ui/icons'\r\nimport {Link} from 'react-router-dom'\r\nimport {content} from '../../Pages/styles/styles'\r\n\r\n\r\nexport const CardCliente = ({datos,search}) =>{\r\n    const classes = content()\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    //Menu More\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return(\r\n        <Grid item xs={8} sm={6} md={4} lg={3} style={!search?null:datos.nombre.toLowerCase().search(search.toLowerCase()) == -1 ? {display:'none'}:{}}>\r\n            <Card className={classes.cardCliente}>\r\n                <CardHeader\r\n                    title={\r\n                        <Link \r\n                            style={{color:'#fff',textDecoration:'none'}}\r\n                            to={{\r\n                                pathname:'/Cliente',\r\n                                search:`${datos.nombre}`\r\n                            }}>\r\n                                <Typography variant=\"h5\" className={classes.titleCardCliente}>\r\n                                    {datos.nombre}\r\n                                </Typography>\r\n                        </Link>\r\n                    }\r\n                    action={\r\n                        <>\r\n                            <IconButton aria-label=\"settings\" onClick={handleClick}>\r\n                                    <MoreVert/>\r\n                            </IconButton>\r\n                            <Menu\r\n                                id=\"simple-menu\"\r\n                                anchorEl={anchorEl}\r\n                                keepMounted\r\n                                open={Boolean(anchorEl)}\r\n                                onClose={handleClose}\r\n                            >   \r\n                                <Link \r\n                                    style={{color:'#fff',textDecoration:'none'}}\r\n                                    to={{\r\n                                    pathname:'/Editar-Cliente',\r\n                                    search:datos.nombre\r\n                                }}>\r\n                                    <MenuItem>Editar</MenuItem>\r\n                                </Link>\r\n                                <MenuItem className={classes.deleteButton} onClick={()=>{\r\n\r\n                                }}>\r\n                                    Eliminar\r\n                                </MenuItem>\r\n                            </Menu>\r\n                        </>\r\n                    }\r\n                />\r\n                <CardContent>\r\n                    <Grid container item xs={12} justify=\"center\">\r\n                        <Link \r\n                            style={{color:'#fff',textDecoration:'none'}}\r\n                            to={{\r\n                                pathname:'/Historial-Cliente',\r\n                                search:datos.nombre\r\n                            }}>\r\n                            <Chip\r\n                                className={datos.deuda>0?classes.chipCardDangerCliente:classes.chipCardSuccessCliente}\r\n                                variant=\"outlined\"\r\n                                icon={<AttachMoney/>}\r\n                                label={datos.deuda?formatMoney(datos.deuda>=0?datos.deuda:-datos.deuda):formatMoney(0)}\r\n                            />\r\n                        </Link>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {makeStyles,Paper,ListItem,Card,CardContent,Typography,TextField,List,Grid,Chip,IconButton,Link as LinkComponent} from '@material-ui/core'\r\nimport {AttachMoney,PersonAdd} from '@material-ui/icons'\r\nimport {Link} from 'react-router-dom'\r\nimport {formatMoney} from '../utilities'\r\nimport {content} from './styles/styles'\r\nimport { CardCliente } from '../components/Clientes/CardCliente'\r\nimport Empty from '../images/Empty.png'\r\n// COMPONENT\r\nconst Clientes=(props)=>{\r\n    const classes = content()\r\n    const [search,setSearch]=useState('')\r\n    \r\n    return(\r\n        <Layout history={props.history} page=\"Clientes\" user={props.user.uid}>\r\n            {/* CONTENT */}\r\n            <Paper className={classes.content}>\r\n                <Grid container spacing={4}>\r\n                    {/* SEARCH BAR */}\r\n                    <Grid container item xs={12} justify='center' alignItems='center'>\r\n                        <Grid item>\r\n                            <Link \r\n                                to='/Nuevo-Cliente'>\r\n                                <IconButton>\r\n                                    <PersonAdd/>\r\n                                </IconButton>\r\n                            </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <TextField\r\n                                value={search}\r\n                                onChange={e=>{\r\n                                    setSearch(e.target.value)\r\n                                }}\r\n                                disabled={!props.clientes}\r\n                                label='Buscar Cliente'\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    {/* CLIENT LIST */}\r\n                    <Grid container item xs={12} justify='center' alignItems='center' spacing={2} >\r\n                        {props.clientes?\r\n                            Object.keys(props.clientes).map(key=>(\r\n                                <CardCliente datos={props.clientes[key].datos} search={search}/>\r\n                            ))\r\n                            :\r\n                            <>\r\n                                <Grid item>\r\n                                    <img src={Empty} alt=\"\" height='600px'/>\r\n                                </Grid>\r\n                                <Grid container item xs={12} justify='center'>\r\n                                    <Typography variant='h4'>No hay Clientes Ingresados</Typography>\r\n                                </Grid>\r\n                            </>\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </Layout>\r\n    )\r\n}\r\n\r\n// REDUX STATE TO PROPS\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        clientes:state.clientes\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Clientes)","import React from 'react'\r\nimport {Grid, Paper, Typography,Card,CardContent,CardTitle,CardActions,Button, IconButton,CardHeader} from '@material-ui/core'\r\nimport {History,Add} from '@material-ui/icons'\r\nimport {Link} from 'react-router-dom'\r\nimport {formatMoney} from '../../utilities'\r\nimport {content} from '../../Pages/styles/styles'\r\n\r\nexport const Deuda = ({deuda,id,generateChartDeudas}) =>{\r\n    const classes= content()\r\n    return(\r\n        <Card className={deuda>0?classes.cardDeudaRed:classes.cardDeudaGreen}>\r\n            <CardHeader\r\n                title={`$ ${formatMoney(deuda>=0?deuda:-deuda)}`}\r\n                subheader='Balance - Ultimos 6 Meses'\r\n                action={\r\n                    <>\r\n                        <Link to={{\r\n                            pathname:'/Historial-Cliente',\r\n                            search:id,\r\n                            props:{\r\n                                tipo:'clientes'\r\n                            }\r\n                        }}>\r\n                            <IconButton size='small'>\r\n                                <History/>\r\n                            </IconButton>\r\n                        </Link>\r\n                        <Link to={{\r\n                            pathname:'/Nuevo-Pago-Cliente',\r\n                            search:id,\r\n                        }}>\r\n                            <IconButton size='small'>\r\n                                <Add/>\r\n                            </IconButton>\r\n                        </Link>\r\n                    </>\r\n                }\r\n            />\r\n            <CardContent>\r\n                {generateChartDeudas()}\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport {Grid,Card,CardContent,Menu,CardHeader,Collapse, List,ListItem, ListItemText,MenuItem,Input, CardActions, Divider, IconButton} from '@material-ui/core'\r\nimport {ExpandLess,ExpandMore,MoreVert} from '@material-ui/icons'\r\nimport {formatMoney} from '../../utilities'\r\nimport {content} from '../../Pages/styles/styles'\r\n\r\nexport const ProductoCardPedido = ({producto,factura}) =>{\r\n    const classes = content()\r\n    const [expanded,setExpanded]=useState(false)\r\n    const [facturacion,setFacturacion] = useState(false)\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const getPrecioAnterior = () =>{\r\n        if(producto.discount){\r\n            if(facturacion){\r\n                let aux = producto.precio/1.21\r\n                console.log(aux/(1-(producto.discount/100)))\r\n                return (aux/(1-(producto.discount/100)))\r\n            }\r\n            else{\r\n                return (producto.precio/(1-(producto.discount/100)))\r\n            }\r\n        }\r\n        else{\r\n            if(facturacion){\r\n                let aux = producto.precio/1.21\r\n                console.log(aux/(1+(producto.increase/100)))\r\n                return (aux/(1+(producto.increase/100)))\r\n            }\r\n            else{\r\n                return (producto.precio/(1+(producto.increase/100)))\r\n            }\r\n        }\r\n    }\r\n    const getPriceDiference = () =>{\r\n            return formatMoney(getPrecioAnterior()*(producto.discount?producto.discount:producto.increase)/100)\r\n    }\r\n     //Menu More\r\n     const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    \r\n    return(\r\n        <Grid container item xs={12}>\r\n            <Card style={{width:'100%'}}>\r\n                <CardHeader \r\n                    className={classes.titleDetallesCard}\r\n                    title={`${producto.cantidad} - ${producto.producto}`}\r\n                    action={\r\n                        <>\r\n                        {producto.discount || producto.increase?\r\n                            <IconButton onClick={()=>{setExpanded(!expanded)}}>{expanded?<ExpandLess/>:<ExpandMore/>}</IconButton>\r\n                            :\r\n                            null\r\n                        }\r\n                        {factura?\r\n                            <>\r\n                                <IconButton aria-label=\"settings\" onClick={handleClick}>\r\n                                    <MoreVert/>\r\n                                </IconButton>\r\n                                <Menu\r\n                                    id=\"simple-menu\"\r\n                                    anchorEl={anchorEl}\r\n                                    keepMounted\r\n                                    open={Boolean(anchorEl)}\r\n                                    onClose={handleClose}\r\n                                >\r\n                                    <MenuItem onClick={()=>{setFacturacion(!facturacion)}}>{!facturacion?'Ver Sin IVA':'Ver Con IVA'}</MenuItem>\r\n                                </Menu>\r\n                            </>\r\n                            :\r\n                            null\r\n                        }\r\n                        </>\r\n                    }\r\n                    subheader={`$ ${formatMoney((producto.precio*producto.cantidad)/(factura?(facturacion?1.21:1):1))} ($${formatMoney((producto.precio)/(factura?(facturacion?1.21:1):1))} [${producto.cotizacion?`${((producto.precio)/(factura?(facturacion?1.21:1):1))/producto.cotizacion.valor}USD x ${formatMoney(producto.cotizacion.valor)}` : null}] c/u)`}\r\n                />\r\n                {producto.discount || producto.increase?\r\n                    <Collapse in={expanded} timeout='auto' unmountOnExit>\r\n                        <CardContent>\r\n                            <List>\r\n                                <ListItem>\r\n                                    <ListItemText primary={`$ ${(formatMoney(getPrecioAnterior()))}`} secondary={`Precio Anterior `}/>\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                    <ListItemText primary={`$ ${producto.discount?'-':'+'}${getPriceDiference()}`} secondary='$ Modificado'/>\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                    <ListItemText primary={producto.discount?`- ${producto.discount}%`:`+ ${producto.increase}%`} secondary='% modificado'/>\r\n                                </ListItem>\r\n                            </List>\r\n                        </CardContent>\r\n                    </Collapse>\r\n                    :\r\n                    null\r\n                }\r\n            </Card>\r\n        </Grid>\r\n    )\r\n}","import React, {useState,useEffect} from 'react'\r\nimport {Grid,Card,CardContent,IconButton,Typography,Chip,ListSubheader,CardHeader,Paper,Menu,MenuItem,Collapse, List,ListItem, ListItemText,Divider,ListItemSecondaryAction, CardActions} from '@material-ui/core'\r\nimport {MoreVert,AttachMoney,ExpandMore,ExpandLess} from '@material-ui/icons'\r\nimport {Link} from 'react-router-dom'\r\nimport {Alert} from '@material-ui/lab'\r\nimport {formatMoney} from '../../utilities'\r\nimport {content} from '../../Pages/styles/styles'\r\nimport { ProductoCardPedido } from './ProductoCardPedido'\r\n\r\nexport const CardPedido = ({pedido,id,searchPedido,searchRemito}) =>{\r\n    const classes = content()\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [facturacion,setFacturacion]=useState(false)\r\n    const [expanded, setExpanded] = useState(false);\r\n    const [expandedPago, setExpandedPago] = useState(false);\r\n    const [expandedCheques, setExpandedCheques] = useState(false);\r\n\r\n    //Menu More\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const getClassNameSearch = () =>{\r\n        if(searchRemito){\r\n            console.log(id.search(searchRemito))\r\n            return id.search(searchRemito) == -1 ? classes.displayNone:classes.display\r\n        }\r\n        else if(searchPedido){\r\n            return !searchPedido?null:id.search(searchPedido) == -1 ? classes.displayNone:classes.display \r\n        }\r\n    }\r\n\r\n    return(\r\n        <Grid item xs={11} sm={8} md={6} lg={4} className={getClassNameSearch()}>\r\n            <Card>\r\n                <Paper elevation={6} className={classes.cardPedidoHeader}>\r\n                    <CardHeader\r\n                        className={classes.header}\r\n                        action={\r\n                            <>\r\n                                <IconButton onClick={()=>{setExpanded(!expanded)}}>\r\n                                    {expanded?\r\n                                        <ExpandLess/>\r\n                                        :\r\n                                        <ExpandMore/>\r\n                                    }\r\n                                </IconButton>\r\n                                <IconButton aria-label=\"settings\" onClick={handleClick}>\r\n                                    <MoreVert/>\r\n                                </IconButton>\r\n                                <Menu\r\n                                    id=\"simple-menu\"\r\n                                    anchorEl={anchorEl}\r\n                                    keepMounted\r\n                                    open={Boolean(anchorEl)}\r\n                                    onClose={handleClose}\r\n                                >\r\n                                    <MenuItem>Editar</MenuItem>\r\n                                    <MenuItem className={classes.deleteButton} onClick={()=>{}}>Eliminar</MenuItem>\r\n                                </Menu>\r\n                            </>\r\n                        }\r\n                        title={pedido.fecha}\r\n                        subheader={`$ ${formatMoney(pedido.total)} ${pedido.cotizacion? `(USD${formatMoney(pedido.total/pedido.cotizacion.valor)} x ${formatMoney(pedido.cotizacion.valor)} c/u)` : null}`}\r\n                    />\r\n                </Paper>\r\n                <Collapse in={expanded} timeout='auto' unmountOnExit>\r\n                    <CardContent>\r\n                        <Grid container xs={12} spacing={2} >\r\n                            {pedido.metodoDeEnvio? \r\n                                (pedido.metodoDeEnvio=='Particular'?\r\n                                    null\r\n                                    :\r\n                                    <Grid container item xs={12}>\r\n                                        <Grid container item xs={12}>\r\n                                                <Alert variant=\"filled\" severity=\"success\" className={classes.alertCheque}>\r\n                                            <Link\r\n                                                style={{color:'#fff',textDecoration:'none',cursor:'pointer'}}\r\n                                                to={{\r\n                                                pathname:'/Expreso',\r\n                                                search:pedido.metodoDeEnvio.expreso,\r\n                                                props:{\r\n                                                    remito:pedido.metodoDeEnvio.remito\r\n                                                }\r\n                                            }}>\r\n                                                Enviado con {pedido.metodoDeEnvio.expreso} Remito Nº {pedido.metodoDeEnvio.remito}\r\n                                            </Link>\r\n                                                </Alert>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                )\r\n                                :\r\n                                null\r\n                            }\r\n                            {pedido.metodoDePago.facturacion?\r\n                                <Grid container item xs={12}>\r\n                                        <Alert variant=\"filled\" severity=\"info\" className={classes.alertPedidoFacturado}>\r\n                                            Pedido Facturado\r\n                                        </Alert>\r\n                                </Grid>\r\n                                :\r\n                                null\r\n                            }\r\n                                {pedido.articulos.map(producto=>(\r\n                                    <Grid container item xs={12} spacing={2}>\r\n                                        <ProductoCardPedido producto={producto} factura={pedido.metodoDePago.facturacion}/>\r\n                                    </Grid>\r\n                                ))}\r\n                        </Grid>\r\n                        <List>\r\n                            <Divider/>\r\n                            <ListItem>\r\n                                <ListItemText\r\n                                    primary={`$ ${formatMoney(pedido.metodoDePago.pagado)}`}\r\n                                    secondary='Pagado'\r\n                                />\r\n                                <ListItemText\r\n                                    primary={<Chip\r\n                                        className={pedido.metodoDePago.adeudado>0?classes.cardProductoChipAdeudado:classes.cardProductoChipAfavor}\r\n                                        label={`$ ${formatMoney(pedido.metodoDePago.adeudado>0?pedido.metodoDePago.adeudado:-pedido.metodoDePago.adeudado)}`}\r\n                                    />}\r\n                                    secondary={pedido.metodoDePago.adeudado>0?'Adeudado':'A favor'}\r\n                                />\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <ListItemText\r\n                                    primary={`$ ${formatMoney(pedido.metodoDePago.deudaPasada)}`}\r\n                                    secondary='Deuda Anterior'\r\n                                />\r\n                                <ListItemText\r\n                                    primary={`$ ${formatMoney(pedido.metodoDePago.deudaActualizada)}`}\r\n                                    secondary='Deuda Actualizada'\r\n                                />\r\n                            </ListItem>   \r\n                            <Divider/>\r\n                        </List>\r\n                        {pedido.metodoDePago.pagado > 0?\r\n                            <Card>\r\n                                <CardHeader className={classes.titleDetallesCard} title='Detalles de pago'/>\r\n                                <CardContent>\r\n                                    <List>\r\n                                        {pedido.metodoDePago.totalTransferencia?\r\n                                            <ListItem>\r\n                                                <ListItemText primary={`$ ${formatMoney(pedido.metodoDePago.totalTransferencia)}`} secondary={`Transferencia cuenta ${pedido.metodoDePago.cuentaTransferencia}`}/>\r\n                                            </ListItem>\r\n                                            :\r\n                                            null\r\n                                        }\r\n                                        {pedido.metodoDePago.efectivo?\r\n                                            <ListItem>\r\n                                                <ListItemText primary={`$ ${formatMoney(pedido.metodoDePago.efectivo)}`} secondary='Efectivo'/>\r\n                                            </ListItem>\r\n                                            :\r\n                                            null\r\n                                        }\r\n                                        {pedido.metodoDePago.chequesPersonales?\r\n                                        <>\r\n                                            {pedido.metodoDePago.efectivo?<Divider/>:null}\r\n                                            <ListItem>\r\n                                                <ListItemText\r\n                                                    primary={`$ ${formatMoney(pedido.metodoDePago.totalChequesPersonales)}`}\r\n                                                    secondary={`${pedido.metodoDePago.chequesPersonales.length} ${pedido.metodoDePago.chequesPersonales.length>1?'Cheques':'Cheque'}`}/>\r\n                                            </ListItem>\r\n                                            <ListItem>\r\n                                                {pedido.metodoDePago.chequesPersonales.map(cheque=>(\r\n                                                    <ListItemText\r\n                                                        primary={\r\n                                                        <Link\r\n                                                            style={{color:'#fff',textDecoration:'none',cursor:'pointer'}}\r\n                                                            to={{\r\n                                                            pathname:'/Cheques-Personales',\r\n                                                            search:cheque}}>\r\n                                                                N° {cheque}\r\n                                                        </Link>\r\n                                                        }\r\n                                                    />\r\n                                                ))}\r\n                                            </ListItem>\r\n                                        </>\r\n                                        :\r\n                                        null\r\n                                        }\r\n                                        {pedido.metodoDePago.cheques?\r\n                                        <>\r\n                                            {pedido.metodoDePago.efectivo?<Divider/>:null}\r\n                                            <ListItem>\r\n                                                <ListItemText\r\n                                                    primary={`$ ${formatMoney(pedido.metodoDePago.pagado-(pedido.metodoDePago.efectivo?pedido.metodoDePago.efectivo:0))}`}\r\n                                                    secondary={`${pedido.metodoDePago.cheques.length} ${pedido.metodoDePago.cheques.length>1?'Cheques':'Cheque'}`}/>\r\n                                            </ListItem>\r\n                                            <ListItem>\r\n                                                {pedido.metodoDePago.cheques.map(cheque=>(\r\n                                                    <ListItemText\r\n                                                        primary={\r\n                                                        <Link\r\n                                                            style={{color:'#fff',textDecoration:'none',cursor:'pointer'}}\r\n                                                            to={{\r\n                                                            pathname:'/Cheques',\r\n                                                            search:cheque}}>\r\n                                                                N° {cheque}\r\n                                                        </Link>\r\n                                                        }\r\n                                                    />\r\n                                                ))}\r\n                                            </ListItem>\r\n                                        </>\r\n                                        :\r\n                                        null\r\n                                        }\r\n                                    </List>\r\n                                </CardContent>\r\n                            </Card>\r\n                            :\r\n                            null\r\n                        }\r\n                    </CardContent>\r\n                </Collapse>\r\n            </Card>\r\n        </Grid>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\nimport {Grid,Card,CardHeader,TableRow,TableHead,TableCell,TableBody,List,ListItem,ListItemText,makeStyles,Paper,IconButton,Menu,MenuItem,Dialog,DialogTitle,DialogContent,DialogActions,Button,Typography} from '@material-ui/core'\r\nimport {MoreVert} from '@material-ui/icons'\r\nimport {Link} from 'react-router-dom'\r\nimport {CardPedido} from './CardPedido'\r\nimport {content} from '../../Pages/styles/styles'\r\nimport Empty from '../../images/Empty.png'\r\nimport { monthsList,formatMoney } from '../../utilities'\r\n{/* COMPONENT */}\r\nexport const ListaDePedidos = ({pedidos,searchPedido,searchRemito,tipo}) =>{\r\n    const classes = content()\r\n    const [articulos,setArticulos]=useState(undefined)\r\n    const [metodoDePago,setMetodoDePago]=useState(undefined)\r\n\r\n    // CONTENT\r\n    return(\r\n        <Grid container justify='center' alignItems='center' spacing={3}>\r\n            <Grid container item xs={12} justify='center'>\r\n                <Typography variant='h4'>\r\n                    Historial de Pedidos\r\n                </Typography>\r\n            </Grid>\r\n        {/* LIST */}\r\n        \r\n        {pedidos?\r\n            <Grid container xs={12} justify='center' spacing={3}>\r\n                {pedidos.map((indexYear)=>(\r\n                    <>  \r\n                        <Grid container item xs={12} justify='center'>\r\n                            <Card className={classes.CardMonthCheques}>\r\n                                <CardHeader\r\n                                    title={`$ ${formatMoney(indexYear[1].total)}`}\r\n                                    subheader={indexYear[0]}\r\n                                />\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid container item xs={12} justify='center' spacing={3}>\r\n                            {Object.keys(indexYear[1].months).reverse().map(month=>(\r\n                                <>\r\n                                    {indexYear[1].months[month].total!==0?\r\n                                        <Grid container item xs={12} justify='center'>\r\n                                            <Grid item>\r\n                                                <Paper>\r\n                                                    <Card>\r\n                                                        <CardHeader\r\n                                                            title={`$ ${formatMoney(indexYear[1].months[month].total)}`}\r\n                                                            subheader={monthsList[month-1]}\r\n                                                        />\r\n                                                    </Card>\r\n                                                </Paper>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                    \r\n                                    {tipo=='pedido'?\r\n                                        Object.keys(indexYear[1].months[month].pedidos).map((keyPedido)=>(\r\n                                            <CardPedido\r\n                                                searchRemito={searchRemito}\r\n                                                searchPedido={searchPedido}\r\n                                                pedido={indexYear[1].months[month].pedidos[keyPedido]}\r\n                                                id={indexYear[1].months[month].pedidos[keyPedido].idPedido}\r\n                                            />\r\n                                        ))\r\n                                        :\r\n                                        Object.keys(indexYear[1].months[month].entregas).map((keyEntrega)=>(\r\n                                            <CardPedido\r\n                                                searchRemito={searchRemito}\r\n                                                searchPedido={searchPedido}\r\n                                                pedido={indexYear[1].months[month].entregas[keyEntrega]}\r\n                                                id={indexYear[1].months[month].entregas[keyEntrega].idEntrega}\r\n                                            />\r\n                                        ))\r\n                                    }\r\n                                </>\r\n                            ))}\r\n                        </Grid>\r\n                    </>\r\n                ))}\r\n            </Grid>\r\n            :\r\n            <>\r\n                <Grid item>\r\n                    <img src={Empty} alt=\"\" height='600px'/>\r\n                </Grid>\r\n                <Grid container item xs={12} justify='center'>\r\n                <Typography variant='h5'>El Cliente No Hizo Ningun Pedido</Typography>\r\n                </Grid>\r\n            </>\r\n        }\r\n        </Grid>\r\n    )\r\n}","import React from 'react'\r\nimport {List,Paper,ListItem,ListItemText,Typography,Divider,Grid, ListItemIcon} from '@material-ui/core'\r\nimport {ContactMail, LocalShipping, Mail, PeopleAlt,Phone,Room,} from '@material-ui/icons'\r\nimport {Link} from 'react-router-dom'\r\nimport {content} from '../../Pages/styles/styles'\r\nimport noData from '../../images/noData.png'\r\n\r\n// CONTENT\r\nexport const Detalles = ({dni,cuit,direcciones,telefonos,mails,infoExtra,expresos}) =>{\r\n    const classes = content()\r\n    return(\r\n        <Grid container item xs={12} className={classes.containerDetallesCliente} spacing={3} alignItems='flex-start'>\r\n            <Grid item xs={10} md={4}>\r\n                <Paper elevation={6} className={classes.paperCliente}>\r\n                    <Grid container>\r\n                        <Grid item xs={12}>\r\n                            <List className={classes.titleDetallesCard}>\r\n                                <ListItem>\r\n                                    <ListItemIcon><PeopleAlt/></ListItemIcon>\r\n                                    <ListItemText primary=\"Datos Personales\"/>\r\n                                </ListItem>\r\n                            </List>\r\n                            <Divider/>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <List>\r\n                                {!dni && !cuit?\r\n                                    <>\r\n                                        <Grid container item xs={12} justify='center'>\r\n                                            <img src={noData} alt=\"\" height='150px'/>\r\n                                        </Grid>\r\n                                        <Grid container item xs={12} justify='center'>\r\n                                            <Typography variant='overline'>\r\n                                                No hay informacion\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </>\r\n                                    :\r\n                                    null\r\n                                }\r\n                                {dni&&\r\n                                    <>\r\n                                        <ListItem>\r\n                                            <ListItemText primary='DNI' secondary={dni?dni:'-'}/>\r\n                                        </ListItem>\r\n                                    </>\r\n                                }\r\n                                {cuit &&\r\n                                    <ListItem>\r\n                                        <ListItemText primary='CUIT' secondary={cuit?cuit:'-'}/>\r\n                                    </ListItem>\r\n                                }\r\n                            </List>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={10} md={4}>\r\n                <Paper elevation={6} className={classes.paperCliente}>\r\n                    <Grid container>\r\n                        <Grid item xs={12}>\r\n                            <List className={classes.titleDetallesCard}>\r\n                                <ListItem>\r\n                                    <ListItemIcon><Room/></ListItemIcon>\r\n                                    <ListItemText primary='Direcciones'/>\r\n                                </ListItem>\r\n                            </List>\r\n                            <Divider />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            {direcciones?\r\n                                <List>\r\n                                    {direcciones.map(direccion=>(\r\n                                        <ListItem>\r\n                                            <ListItemText primary={`${direccion.calleYnumero}, ${direccion.ciudad}, ${direccion.provincia}, ${direccion.cp}`}/>\r\n                                        </ListItem>\r\n                                    ))}\r\n                                </List>\r\n                                :\r\n                                <>\r\n                                    <Grid container item xs={12} justify='center'>\r\n                                        <img src={noData} alt=\"\" height='150px'/>\r\n                                    </Grid>\r\n                                    <Grid container item xs={12} justify='center'>\r\n                                        <Typography variant='overline'>\r\n                                            No hay informacion\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </>\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={10} md={4}>\r\n                <Paper elevation={6} className={classes.paperCliente}>\r\n                    <Grid container>\r\n                        <Grid item xs={12}>\r\n                            <List className={classes.titleDetallesCard}>\r\n                                <ListItem>\r\n                                    <ListItemIcon><Phone/></ListItemIcon>\r\n                                    <ListItemText primary='Telefonos'/>\r\n                                </ListItem>\r\n                            </List>\r\n                            <Divider />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            {telefonos?\r\n                                <List>\r\n                                    {telefonos.map(telefono=>(\r\n                                        <ListItem>\r\n                                            <ListItemText primary={telefono.numero} secondary={telefono.nombre?telefono.nombre:'-'}/>\r\n                                        </ListItem>\r\n                                    ))}\r\n                                </List>\r\n                                :\r\n                                <>\r\n                                    <Grid container item xs={12} justify='center'>\r\n                                        <img src={noData} alt=\"\" height='150px'/>\r\n                                    </Grid>\r\n                                    <Grid container item xs={12} justify='center'>\r\n                                        <Typography variant='overline'>\r\n                                            No hay informacion\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </>\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={10} md={4}>\r\n                <Paper elevation={6} className={classes.paperCliente}>\r\n                    <Grid container>\r\n                        <Grid item xs={12}>\r\n                            <List className={classes.titleDetallesCard}>\r\n                                <ListItem>\r\n                                    <ListItemIcon><Mail/></ListItemIcon>\r\n                                    <ListItemText primary={'Mails'}/>\r\n                                </ListItem>\r\n                            </List>\r\n                            <Divider />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            {mails?\r\n                                <List>\r\n                                    {mails.map(mail=>(\r\n                                        <ListItem>\r\n                                            <ListItemText primary={mail.mail} secondary={mail.nombre?mail.nombre:'-'}/>\r\n                                        </ListItem>\r\n                                    ))}\r\n                                </List>\r\n                                :\r\n                                <>\r\n                                    <Grid container item xs={12} justify='center'>\r\n                                        <img src={noData} alt=\"\" height='150px'/>\r\n                                    </Grid>\r\n                                    <Grid container item xs={12} justify='center'>\r\n                                        <Typography variant='overline'>\r\n                                            No hay informacion\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </>\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={10} md={4}>\r\n                <Paper elevation={6} className={classes.paperCliente}>\r\n                    <Grid container>\r\n                        <Grid item xs={12}>\r\n                            <List className={classes.titleDetallesCard}>\r\n                                <ListItem>\r\n                                    <ListItemIcon><LocalShipping/></ListItemIcon>\r\n                                    <ListItemText primary={'Expresos'}/>\r\n                                </ListItem>\r\n                            </List>\r\n                            <Divider />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            {expresos?\r\n                                <List>\r\n                                    {expresos.map(expreso=>(\r\n                                        <ListItem>\r\n                                            <Link\r\n                                                style={{color:'#fff',textDecoration:'none'}}\r\n                                                to={{\r\n                                                pathname:'/Expreso',\r\n                                                search:expreso\r\n                                            }}>\r\n                                                <ListItemText primary={expreso}/>\r\n                                            </Link>\r\n                                        </ListItem>\r\n                                    ))}\r\n                                </List>\r\n                                :\r\n                                <>\r\n                                    <Grid container item xs={12} justify='center'>\r\n                                        <img src={noData} alt=\"\" height='150px'/>\r\n                                    </Grid>\r\n                                    <Grid container item xs={12} justify='center'>\r\n                                        <Typography variant='overline'>\r\n                                            No hay informacion\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </>\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={10} md={4}>\r\n                <Paper elevation={6} className={classes.paperCliente}>\r\n                    <Grid container>\r\n                        <Grid xs={12}>\r\n                            <List className={classes.titleDetallesCard}>\r\n                                <ListItem>\r\n                                    <ListItemIcon><ContactMail/></ListItemIcon>\r\n                                    <ListItemText primary={'Info Extra'}/>\r\n                                </ListItem>\r\n                            </List>\r\n                            <Divider />\r\n                        </Grid>\r\n                        <Grid xs={12}>\r\n                            {infoExtra?\r\n                                <List>\r\n                                    {infoExtra.map((info,i)=>(\r\n                                        <ListItem>\r\n                                            <ListItemText primary={info}/>\r\n                                        </ListItem>\r\n                                    ))}\r\n                                </List>\r\n                                :\r\n                                <>\r\n                                    <Grid container item xs={12} justify='center'>\r\n                                        <img src={noData} alt=\"\" height='150px'/>\r\n                                    </Grid>\r\n                                    <Grid container item xs={12} justify='center'>\r\n                                        <Typography variant='overline'>\r\n                                            No hay informacion\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </>\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import React from 'react'\r\nimport {Dialog,DialogTitle,DialogActions,DialogContent,Button,Typography} from '@material-ui/core'\r\n\r\n\r\nexport const DialogConfirmDelete = ({open,setOpen,eliminarCliente}) =>{\r\n    return(\r\n        <Dialog open={open} maxWidth='md' fullWidth={true}>\r\n            <DialogTitle>\r\n                Desea eliminar el cliente?\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                <Typography gutterBottom>\r\n                    Se eliminara de forma permanente toda la informacion, listado de pedidos, deuda e historial de pago. \r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button \r\n                    autoFocus\r\n                    onClick={()=>{\r\n                        setOpen(false)\r\n                    }}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n                <Button\r\n                    color='error'\r\n                    onClick={()=>{\r\n                        setOpen(false)\r\n                        eliminarCliente()\r\n                    }}\r\n                >\r\n                    Eliminar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {Card,Paper,Grid,CardHeader,CardContent,IconButton,Backdrop,Snackbar,CircularProgress} from '@material-ui/core'\r\nimport {Alert} from '@material-ui/lab'\r\nimport {EditOutlined,DeleteOutline} from '@material-ui/icons'\r\nimport {Deuda} from '../components/Cliente/Deuda'\r\nimport {ListaDePedidos} from '../components/Cliente/ListaDePedidos'\r\nimport {Detalles} from '../components/Cliente/Detalles'\r\nimport {DialogConfirmDelete} from '../components/Cliente/DialogConfirmDelete'\r\nimport {database} from 'firebase'\r\nimport {Link} from 'react-router-dom'\r\nimport {content} from './styles/styles'\r\nimport {checkSearch} from '../utilities'\r\nimport ApexCharts from 'react-apexcharts';\r\nimport {formatMoney} from '../utilities'\r\n\r\n\r\n// COMPONENT\r\nconst Cliente=(props)=>{\r\n    const classes = content()\r\n    const [cliente,setCliente]= useState(props.clientes[checkSearch(props.history.location.search)])\r\n    const [showSnackbar, setshowSnackbar] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n    const [showDialogConfirmDelete, setshowDialogConfirmDelete] = useState(false);\r\n    const [searchPedido, setSearchPedido] = useState(props.location.props?props.location.props.searchPedido:'');\r\n    const [searchRemito, setSearchRemito] = useState(props.location.props?props.location.props.remito:'');\r\n\r\n    const [filteredPedidos,setFilteredPedidos] = useState(undefined)\r\n\r\n\r\n    const generateChartDeudas = () => {\r\n        // Asume que tienes los datos en dos variables: sortedCompras y sortedVentas\r\n        const keyCliente = checkSearch(props.location.search)\r\n        let deudas = []\r\n        let labels = []\r\n        const initialMonth = new Date(Date.now());\r\n        initialMonth.setMonth(initialMonth.getMonth() - 6);\r\n        if(props.clientes[keyCliente].pagos){\r\n            Object.keys(props.clientes[keyCliente].pagos).map(pago=>{\r\n                const [day,month,year] = (props.clientes[keyCliente].pagos[pago].fecha).split('/')\r\n                const auxFecha = new Date(0);\r\n                auxFecha.setFullYear(year, month - 1, day);\r\n                if(auxFecha>initialMonth){\r\n                    deudas.push(props.clientes[keyCliente].pagos[pago].deudaActualizada)\r\n                    labels.push(props.clientes[keyCliente].pagos[pago].fecha)\r\n                }\r\n            })\r\n            if(deudas.length==1){\r\n                let auxdeudas= [props.clientes[keyCliente].datos.deuda!=0?props.clientes[keyCliente].datos.deuda:0,...deudas]\r\n                deudas=auxdeudas\r\n            }\r\n        }\r\n    \r\n        // Define la configuración del gráfico\r\n        const options = {\r\n            labels:labels,\r\n            chart:{\r\n                sparkline: {\r\n                    enabled: true\r\n                },\r\n            },\r\n            stroke: {\r\n                curve: 'smooth'\r\n            },\r\n            tooltip:{\r\n                y:{\r\n                    formatter: val=> `$ ${formatMoney(val)}`\r\n                },\r\n                theme:'dark'\r\n            },\r\n        };\r\n    \r\n        // Define los datos a visualizar\r\n        const series = [\r\n            {\r\n            name: 'Deuda',\r\n            data: deudas,\r\n            },\r\n        ];\r\n    \r\n        // Renderiza el gráfico\r\n        return <ApexCharts options={options} series={series} type='area' height={150}/>;\r\n    }\r\n    const generateChartProductos = () => {\r\n        // Asume que tienes los datos en dos variables: sortedCompras y sortedVentas\r\n        const keyCliente = checkSearch(props.location.search)\r\n        let series = []\r\n        let labels = []\r\n        if(props.clientes[keyCliente].pedidos){\r\n            Object.keys(props.clientes[keyCliente].pedidos).reverse().forEach((pedido) => {\r\n                props.clientes[keyCliente].pedidos[pedido].articulos.map(articulo=>{\r\n                    const pos = labels.indexOf(articulo.producto);\r\n                    if (pos !== -1) {\r\n                    series[pos] += parseInt(articulo.cantidad);\r\n                    } else {\r\n                    series.push(parseInt(articulo.cantidad));\r\n                    labels.push(articulo.producto);\r\n                    }\r\n                })\r\n            });\r\n        }\r\n        // Define la configuración del gráfico\r\n        const options = {\r\n            labels:labels,\r\n            chart:{\r\n                sparkline:{\r\n                    enabled:true\r\n                }\r\n            },\r\n            theme:{\r\n                mode:'dark'\r\n            },\r\n            tooltip:{\r\n                fillSeriesColor:false\r\n            }\r\n        };\r\n    \r\n    \r\n        // Renderiza el gráfico\r\n        return (\r\n            <Card>\r\n                <CardHeader\r\n                    subheader='Historico De Productos'\r\n                />\r\n                <CardContent>\r\n                    <ApexCharts options={options} series={series} type='donut' width={350} />\r\n                </CardContent>\r\n            </Card>)\r\n    }\r\n    const generateChartProductosValue = () => {\r\n        // Asume que tienes los datos en dos variables: sortedCompras y sortedVentas\r\n        const keyCliente = checkSearch(props.location.search)\r\n        let series = []\r\n        let labels = []\r\n        if(props.clientes[keyCliente].pedidos){\r\n            Object.keys(props.clientes[keyCliente].pedidos).reverse().forEach((pedido) => {\r\n                props.clientes[keyCliente].pedidos[pedido].articulos.map(articulo=>{\r\n                    const pos = labels.indexOf(articulo.producto);\r\n                    if (pos !== -1) {\r\n                        if(props.clientes[keyCliente].pedidos[pedido].metodoDePago.facturacion){\r\n                            series[pos] += parseInt(articulo.total/1.21);\r\n                        }\r\n                        else{\r\n                            series[pos] += parseInt(articulo.total);\r\n                        }\r\n                    } \r\n                    else {\r\n                        if(props.clientes[keyCliente].pedidos[pedido].metodoDePago.facturacion){\r\n                            series.push(parseInt(articulo.total/1.21));\r\n                            labels.push(articulo.producto);\r\n                        }\r\n                        else{\r\n                            series.push(parseInt(articulo.total));\r\n                            labels.push(articulo.producto);\r\n                        }\r\n                    }\r\n                })\r\n            });\r\n        }\r\n        // Define la configuración del gráfico\r\n        const options = {\r\n            labels:labels,\r\n            chart:{\r\n                sparkline:{\r\n                    enabled:true\r\n                }\r\n            },\r\n            theme:{\r\n                mode:'dark'\r\n            },\r\n            tooltip:{\r\n                fillSeriesColor:false\r\n            },\r\n            tooltip:{\r\n                fillSeriesColor:false,\r\n                y:{\r\n                    formatter: val=> `$ ${formatMoney(val)}`\r\n                }\r\n            },\r\n        };\r\n    \r\n    \r\n        // Renderiza el gráfico\r\n        return (\r\n            <Card>\r\n                <CardHeader\r\n                    subheader='Ingreso Historico por Producto'\r\n                />\r\n                <CardContent>\r\n                    <ApexCharts options={options} series={series} type='donut' width={350} />\r\n                </CardContent>\r\n            </Card>)\r\n    }\r\n    const generateChartAnualSales = () => {\r\n        // Asume que tienes los datos en dos variables: sortedCompras y sortedVentas\r\n        const actualYear = new Date().getFullYear()\r\n\r\n        let sales = []\r\n        let labelsUltimoAnio =  []\r\n\r\n        if(filteredPedidos){\r\n            const fechaActual = new Date();\r\n            const mesActual = fechaActual.getMonth();\r\n            const anioActual = fechaActual.getFullYear();\r\n            let auxSales = []\r\n\r\n            const mesesDesdeUltimoAnio = 12;\r\n            let mesInicio = mesActual - mesesDesdeUltimoAnio;\r\n            let anioInicio = anioActual;\r\n            if (mesInicio < 0) {\r\n                mesInicio += 12;\r\n                anioInicio -= 1;\r\n            }\r\n            const initialDate = new Date(0)\r\n            initialDate.setFullYear(anioInicio,mesInicio,1)\r\n            console.log(filteredPedidos)\r\n            for (const [year, data] of filteredPedidos) {\r\n                // Itera sobre cada mes en el año\r\n                for (const [month, dataMonth] of Object.entries(data.months)) {\r\n                        const auxFecha = new Date(0);\r\n                        auxFecha.setFullYear(year, month - 1, 1);\r\n                        if(auxFecha>initialDate && auxFecha<fechaActual){\r\n                            auxSales.push(dataMonth.total)\r\n                        }\r\n                }\r\n            }\r\n            if(auxSales.length<12){\r\n                console.log(auxSales)\r\n                const padding = new Array(12 - auxSales.length).fill(0);\r\n                padding.map(i=>{\r\n                    auxSales.push(i)\r\n                })\r\n            }\r\n            const auxMeses = ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic']\r\n            const arr1Meses = auxMeses.slice(mesInicio+1);\r\n            const arr2Meses = auxMeses.slice(0,mesInicio+1);\r\n\r\n            \r\n            const arr1Sales = auxSales.slice(mesInicio+1);\r\n            const arr2Sales = auxSales.slice(0,mesInicio+1);\r\n            \r\n            \r\n            arr1Meses.map(i=>{\r\n                labelsUltimoAnio.push(i)\r\n            })\r\n            arr2Meses.map(i=>{\r\n                labelsUltimoAnio.push(i)\r\n            })\r\n            \r\n            console.log(sales)\r\n            arr1Sales.map(i=>{\r\n                sales.push(i)\r\n            })\r\n            arr2Sales.map(i=>{\r\n                sales.push(i)\r\n            })\r\n            console.log(sales)\r\n            console.log(labelsUltimoAnio)\r\n\r\n        }\r\n        // Define la configuración del gráfico\r\n        const options = {\r\n            labels:labelsUltimoAnio,\r\n            theme:{\r\n                mode:'dark',\r\n                palette:'palette2'\r\n            },\r\n            stroke: {\r\n                curve: 'smooth'\r\n            },\r\n            grid: {\r\n                row: {\r\n                  colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\r\n                  opacity: 0.5\r\n                },\r\n            },\r\n            tooltip:{\r\n                y:{\r\n                    formatter: val=> `$ ${formatMoney(val)}`\r\n                }\r\n            },\r\n            dataLabels:{\r\n                dropShadow: {\r\n                    enabled: true,\r\n                    left: 2,\r\n                    top: 2,\r\n                    opacity: 0.5\r\n                },\r\n                formatter: val=> `$ ${formatMoney(val)}`\r\n            },\r\n            yaxis:{\r\n                labels:{\r\n                    show:false\r\n                }\r\n            }\r\n        };\r\n        const series=[{\r\n            name:'Compras',\r\n            data:sales\r\n        }\r\n        ]\r\n    \r\n        return (\r\n            <Card>\r\n                <CardHeader\r\n                    subheader='Ventas - Ultimos 12 Meses'\r\n                />\r\n                <CardContent>\r\n                    <ApexCharts options={options} type='area' series={series} width={850} height={275}/>\r\n                </CardContent>\r\n            </Card>)\r\n    }\r\n    // FILTRADO DE INFORMACION \r\n    useEffect(()=>{\r\n        const years = {};\r\n        const keyCliente = checkSearch(props.location.search)\r\n        if(props.clientes[keyCliente].pedidos){\r\n            Object.keys(props.clientes[keyCliente].pedidos).reverse().forEach((pedido) => {\r\n                const year = props.clientes[keyCliente].pedidos[pedido].fecha.split('/')[2];\r\n                const month = props.clientes[keyCliente].pedidos[pedido].fecha.split('/')[1];\r\n            \r\n                if (!years[year]) {\r\n                    years[year] = { total: 0, months: {\r\n                        1:{ total: 0, pedidos: [] },\r\n                        2:{ total: 0, pedidos: [] },\r\n                        3:{ total: 0, pedidos: [] },\r\n                        4:{ total: 0, pedidos: [] },\r\n                        5:{ total: 0, pedidos: [] },\r\n                        6:{ total: 0, pedidos: [] },\r\n                        7:{ total: 0, pedidos: [] },\r\n                        8:{ total: 0, pedidos: [] },\r\n                        9:{ total: 0, pedidos: [] },\r\n                        10:{ total: 0, pedidos: [] },\r\n                        11:{ total: 0, pedidos: [] },\r\n                        12:{ total: 0, pedidos: [] }\r\n                    }}\r\n                }\r\n            \r\n                // Agregamos la compra al objeto \"compras\" del mes correspondiente\r\n                years[year].months[month].pedidos.push(props.clientes[keyCliente].pedidos[pedido]);\r\n            \r\n                // Actualizamos el total del mes y del año\r\n                years[year].months[month].total += parseInt((props.clientes[keyCliente].pedidos[pedido].total?props.clientes[keyCliente].pedidos[pedido].total:0), 10);\r\n                years[year].total += parseInt((props.clientes[keyCliente].pedidos[pedido].total?props.clientes[keyCliente].pedidos[pedido].total:0), 10);\r\n            }); \r\n    \r\n            const sortedPedidos = Object.entries(years).sort(([year1], [year2]) => year2 - year1);\r\n            \r\n            console.log(sortedPedidos)\r\n            setFilteredPedidos(sortedPedidos)\r\n        }\r\n        setTimeout(() => {\r\n            setLoading(false)\r\n        }, 500);\r\n    },[props.clientes])\r\n\r\n    // FUNCTIONS\r\n    const eliminarCliente = () =>{\r\n        setLoading(true)\r\n        const ref = database().ref().child(props.user.uid).child('clientes').child(cliente.datos.nombre).remove()\r\n        .then(()=>{\r\n            setshowSnackbar('El cliente ha sido eliminado!')\r\n            setTimeout(() => {\r\n                setLoading(false)\r\n            }, 2000);\r\n        })\r\n        .catch(()=>{\r\n            setLoading(false)\r\n        })\r\n        props.history.replace('/Clientes')\r\n    }\r\n    const eliminarPedido = (id) =>{\r\n        setLoading(true)\r\n        database().ref().child(props.user.uid).child('clientes').child(cliente.datos.nombre).child('pedidos').child(id).remove()\r\n        .then(()=>{\r\n            setshowSnackbar('El Pedido ha sido eliminado!')\r\n            setTimeout(() => {\r\n                setLoading(false)\r\n                props.history.replace(`/Cliente?${props.history.location.search}`)\r\n            }, 2000);\r\n        })\r\n        .catch(()=>{\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    return(\r\n        cliente?\r\n            <Layout history={props.history} page={`${cliente.datos.nombre}`} user={props.user.uid}>\r\n                {/* CONTENT */}\r\n                <Paper className={classes.content}>\r\n                    <Grid container justify='center' spacing={4}>\r\n                        <Detalles {...cliente.datos}/>\r\n                        {!loading && filteredPedidos?\r\n                            <Grid container item xs={12} justify='center' spacing={4}>\r\n                                <Grid container item xs={12}>\r\n                                    <Deuda deuda={cliente.datos.deuda} id={cliente.datos.nombre} generateChartDeudas={generateChartDeudas}/>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                        {generateChartProductos()}\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Paper>\r\n                                        {generateChartAnualSales()}\r\n                                    </Paper>\r\n                                </Grid>\r\n                            </Grid>\r\n                            :\r\n                            null\r\n                        }\r\n                        <ListaDePedidos pedidos={filteredPedidos} eliminarPedido={eliminarPedido} searchPedido={searchPedido} searchRemito={searchRemito} tipo='pedido'/>\r\n                        <Grid item xs={12} sm={8}>\r\n                            <Grid container item xs={12} justify='space-around' alignItems='flex-end'>\r\n                                <Link to={{\r\n                                    pathname: '/Editar-Cliente',\r\n                                    search:cliente.datos.nombre\r\n                                }}>\r\n                                    <IconButton>\r\n                                        <EditOutlined/>\r\n                                    </IconButton>\r\n                                </Link>\r\n                                <IconButton onClick={()=>{setshowDialogConfirmDelete(true)}}>\r\n                                    <DeleteOutline color='error'/>\r\n                                </IconButton>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n                \r\n                {/* BACKDROP & SNACKBAR */}\r\n                <Backdrop className={classes.backdrop} open={loading}>\r\n                    <CircularProgress color=\"inherit\" />\r\n                    <Snackbar open={showSnackbar} autoHideDuration={2000} onClose={()=>{setshowSnackbar('')}}>\r\n                        <Alert severity=\"success\" variant='filled'>\r\n                            {showSnackbar}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </Backdrop>\r\n\r\n                {/* DIALOGS */}\r\n                <DialogConfirmDelete open={showDialogConfirmDelete} setOpen={setshowDialogConfirmDelete} eliminarCliente={eliminarCliente}/>\r\n            </Layout>\r\n            :\r\n            <>\r\n                {props.history.replace('/Clientes')}\r\n            </>\r\n    )\r\n}\r\n\r\n// REDUX STATE TO PROPS\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        clientes:state.clientes,\r\n        photosList:state.photosList\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Cliente)","import React from 'react'\r\nimport {Grid,Paper,List,ListItem,ListItemText,ListItemSecondaryAction,IconButton,makeStyles} from '@material-ui/core'\r\nimport {EditOutlined,DeleteOutlineOutlined} from '@material-ui/icons'\r\n\r\nexport const Telefonos = ({telefonos,seteditIndex,showDialog,openDialogDelete}) =>{\r\n\r\n    const openDialog = index =>{\r\n        seteditIndex(index)\r\n        showDialog()\r\n    }\r\n    return (\r\n        <Paper elevation={3}>\r\n            <List>\r\n                {telefonos.map((telefono,i)=>(\r\n                    <ListItem>\r\n                        <ListItemText primary={telefono.numero} secondary={telefono.nombre?telefono.nombre:'-'}/>\r\n                        <IconButton edge=\"end\" aria-label=\"edit\" onClick={()=>{openDialog(i)}}>\r\n                            <EditOutlined />\r\n                        </IconButton>\r\n                        <ListItemSecondaryAction>\r\n                            <IconButton edge=\"end\" aria-label=\"delete\" onClick={()=>{openDialogDelete(i)}}>\r\n                                <DeleteOutlineOutlined color='error'/>\r\n                            </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </Paper>\r\n    )\r\n}","import React from 'react'\r\nimport {Grid,Paper,List,ListItem,ListItemText,ListItemSecondaryAction,Listaction,IconButton,makeStyles} from '@material-ui/core'\r\nimport {EditOutlined,DeleteOutlineOutlined} from '@material-ui/icons'\r\n\r\n\r\nexport const Direccion = ({direcciones,seteditIndex,showDialog,openDialogDelete}) =>{\r\n\r\n    const openDialog = index =>{\r\n        seteditIndex(index)\r\n        showDialog()\r\n    }\r\n    return (\r\n        <Paper elevation={3}>\r\n            <List>\r\n                {direcciones.map((direccion,i)=>(\r\n                    <ListItem>\r\n                        <ListItemText primary={`${direccion.calleYnumero} , ${direccion.ciudad} , ${direccion.provincia} , CP:${direccion.cp}`}/>\r\n                            <IconButton edge=\"end\" aria-label=\"delete\" onClick={()=>{openDialog(i)}}>\r\n                                <EditOutlined />\r\n                            </IconButton>\r\n                        <ListItemSecondaryAction>\r\n                            <IconButton edge=\"end\" aria-label=\"delete\" onClick={()=>{openDialogDelete(i)}}>\r\n                                <DeleteOutlineOutlined color='error'/>\r\n                            </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n\r\n                ))}\r\n            </List>\r\n        </Paper>\r\n    )\r\n}","import React from 'react'\r\nimport {Grid,Paper,List,ListItem,ListItemText,ListItemSecondaryAction,IconButton,makeStyles} from '@material-ui/core'\r\nimport {EditOutlined,DeleteOutlineOutlined} from '@material-ui/icons'\r\n\r\nexport const InfoExtra = ({infoExtra,seteditIndex,showDialog,openDialogDelete}) =>{\r\n\r\n    const openDialog = index =>{\r\n        console.log(index)\r\n        seteditIndex(index)\r\n        showDialog()\r\n    }\r\n    return (\r\n        <Paper elevation={3} >\r\n            <List>\r\n                {infoExtra.map((info,i)=>(\r\n                    <ListItem>\r\n                        <ListItemText primary={info?info:'-'}/>\r\n                        <IconButton edge=\"end\" aria-label=\"delete\" onClick={()=>{openDialog(i)}}>\r\n                            <EditOutlined />\r\n                        </IconButton>\r\n                        <ListItemSecondaryAction>\r\n                            <IconButton edge=\"end\" aria-label=\"delete\" onClick={()=>{openDialogDelete(i)}}>\r\n                                <DeleteOutlineOutlined color='error'/>\r\n                            </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </Paper>\r\n    )\r\n}","import React from 'react'\r\nimport {Grid,Paper,List,ListItem,ListItemText,ListItemSecondaryAction,IconButton,makeStyles} from '@material-ui/core'\r\nimport {EditOutlined,DeleteOutlineOutlined} from '@material-ui/icons'\r\n\r\nexport const Mails = ({mails,seteditIndex,showDialog,openDialogDelete}) =>{\r\n\r\n    const openDialog = index =>{\r\n        seteditIndex(index)\r\n        showDialog()\r\n    }\r\n    return (\r\n        <Paper elevation={3}>\r\n            <List>\r\n                {mails.map((mail,i)=>(\r\n                    <ListItem>\r\n                        <ListItemText primary={mail.mail} secondary={mail.nombre?mail.nombre:'-'}/>\r\n                        <IconButton edge=\"end\" aria-label=\"delete\" onClick={()=>{openDialog(i)}}>\r\n                            <EditOutlined />\r\n                        </IconButton>\r\n                        <ListItemSecondaryAction>\r\n                            <IconButton edge=\"end\" aria-label=\"delete\" onClick={()=>{openDialogDelete(i)}}>\r\n                                <DeleteOutlineOutlined color='error'/>\r\n                            </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </Paper>\r\n    )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport {Dialog,DialogTitle,DialogContent,DialogActions,TextField,Button,Grid,makeStyles} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    input:{\r\n        marginBottom:theme.spacing(1),\r\n        textAlign:'center'\r\n    }\r\n}))\r\nexport const DialogNuevaDireccion = ({open,setOpen,direcciones,setdirecciones,edit,editIndex,seteditIndex}) =>{\r\n    const classes = useStyles()\r\n    const [calleYnumero,setcalleYnumero]=useState(undefined)\r\n    const [ciudad,setciudad]=useState(undefined)\r\n    const [provincia,setprovincia]=useState(undefined)\r\n    const [cp,setcp]=useState(undefined)\r\n    \r\n\r\n    const resetTextFields = () =>{\r\n        setcalleYnumero('')\r\n        setciudad('')\r\n        setprovincia('')\r\n        setcp('')\r\n    }\r\n    const agregarDireccion = () =>{\r\n        let aux = direcciones\r\n        aux.push({\r\n            calleYnumero:calleYnumero?calleYnumero:null,\r\n            ciudad:ciudad?ciudad:null,\r\n            provincia:provincia?provincia:null,\r\n            cp:cp?cp:null\r\n        })\r\n        setdirecciones(aux)\r\n    }\r\n    const editarDireccion = () =>{\r\n        let aux = direcciones\r\n        aux[editIndex]={\r\n            calleYnumero:calleYnumero,\r\n            ciudad:ciudad,\r\n            provincia:provincia,\r\n            cp:cp\r\n        }\r\n        setdirecciones(aux)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(edit){\r\n            setcalleYnumero(direcciones[editIndex].calleYnumero)\r\n            setciudad(direcciones[editIndex].ciudad)\r\n            setprovincia(direcciones[editIndex].provincia)\r\n            setcp(direcciones[editIndex].cp)\r\n        }\r\n    },[edit])\r\n\r\n    return(\r\n        <Dialog open={open}>\r\n            <DialogTitle>\r\n                {edit?\r\n                    'Editar Direccion'\r\n                    :\r\n                    'Agregar Nueva Direccion'\r\n                }\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <Grid container direction='column'>\r\n                    <Grid item className={classes.input}>\r\n                        <TextField\r\n                            autoFocus\r\n                            label='Calle y Nro'\r\n                            value={calleYnumero}\r\n                            onChange={e=>{\r\n                                setcalleYnumero(e.target.value)\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item className={classes.input}>\r\n                        <TextField\r\n                            label='Ciudad'\r\n                            value={ciudad}\r\n                            onChange={e=>{\r\n                                setciudad(e.target.value)\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item className={classes.input}>\r\n                        <TextField\r\n                            label='C.P.'\r\n                            value={cp}\r\n                            onChange={e=>{\r\n                                setcp(e.target.value)\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item className={classes.input}>\r\n                        <TextField\r\n                            label='Provincia'\r\n                            value={provincia}\r\n                            onChange={e=>{\r\n                                setprovincia(e.target.value)\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button \r\n                    onClick={()=>{\r\n                        if(edit){\r\n                            seteditIndex(-1)\r\n                        }\r\n                        resetTextFields()\r\n                        setOpen(false)\r\n                    }}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n                <Button\r\n                    onClick={()=>{\r\n                        if(edit){\r\n                            editarDireccion()\r\n                            seteditIndex(-1)\r\n                        }\r\n                        else{\r\n                            agregarDireccion()\r\n                        }\r\n                        resetTextFields()\r\n                        setOpen(false)\r\n                    }}\r\n                >\r\n                    {edit?\r\n                        'Editar'\r\n                        :\r\n                        'Agregar'\r\n                    }\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport {Dialog,DialogTitle,DialogContent,DialogActions,TextField,Button,Grid,makeStyles} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    input:{\r\n        marginBottom:theme.spacing(1),\r\n        textAlign:'center'\r\n    }\r\n}))\r\n\r\nexport const DialogNuevoTelefono = ({open,setOpen,telefonos,settelefonos,edit,editIndex,seteditIndex}) =>{\r\n    const classes = useStyles()\r\n    const [nombre,setnombre]=useState(undefined)\r\n    const [numero,setnumero]=useState(undefined)\r\n    \r\n    const resetTextFields = () =>{\r\n        setnombre('')\r\n        setnumero('')\r\n    }\r\n    const agregarTelefono = () =>{\r\n        let aux = telefonos\r\n        aux.push({\r\n            nombre:nombre?nombre:null,\r\n            numero:numero?numero:null,\r\n        })\r\n        settelefonos(aux)\r\n    }\r\n\r\n    const editarTelefono = () =>{\r\n        let aux = telefonos\r\n        aux[editIndex]={nombre:nombre,numero:numero}\r\n        settelefonos(aux)\r\n    }\r\n    useEffect(()=>{\r\n        if(edit){\r\n            setnombre(telefonos[editIndex].nombre)\r\n            setnumero(telefonos[editIndex].numero)\r\n        }\r\n    },[edit])\r\n    return(\r\n        <Dialog open={open}>\r\n            <DialogTitle>\r\n                {edit?\r\n                    'Editar Telefono'\r\n                    :\r\n                    'Agregar Nuevo Telefono'\r\n                }\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <Grid container direction='column'>\r\n                    <Grid item className={classes.input}>\r\n                        <TextField\r\n                            autoFocus\r\n                            color='primary'\r\n                            label='Nombre'\r\n                            value={nombre}\r\n                            onChange={e=>{setnombre(e.target.value)}}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item className={classes.input}>\r\n                        <TextField\r\n                            color='primary'\r\n                            label='Numero'\r\n                            value={numero}\r\n                            onChange={e=>{setnumero(e.target.value)}}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button \r\n                    onClick={()=>{\r\n                        if(edit){\r\n                            seteditIndex(-1)\r\n                        }\r\n                        resetTextFields()\r\n                        setOpen(false)\r\n                    }}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n                <Button\r\n                    disabled={ numero && nombre ?false:true}\r\n                    onClick={()=>{\r\n                        if(edit){\r\n                            editarTelefono()\r\n                            seteditIndex(-1)\r\n                        }\r\n                        else{\r\n                            agregarTelefono()\r\n                        }\r\n                        resetTextFields()\r\n                        setOpen(false)\r\n                    }}\r\n                >\r\n                    {edit?\r\n                        'Editar'\r\n                        :\r\n                        'Agregar'\r\n                    }\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport {Dialog,DialogTitle,DialogContent,DialogActions,TextField,Button,Grid,makeStyles} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    input:{\r\n        marginBottom:theme.spacing(1),\r\n        textAlign:'center'\r\n    }\r\n}))\r\n\r\nexport const DialogNuevaInfoExtra = ({open,setOpen,infoExtra,setinfoExtra,edit,editIndex,seteditIndex}) =>{\r\n    const classes = useStyles()\r\n    const [nuevaInfo,setnuevaInfo]=useState(undefined)\r\n    \r\n    const resetTextFields = () =>{\r\n        setnuevaInfo('')\r\n    }\r\n    const agregarInfoExtra = () =>{\r\n        let aux = infoExtra\r\n        aux.push(nuevaInfo)\r\n        setinfoExtra(aux)\r\n    }\r\n\r\n    const editarInfoExtra = () =>{\r\n        let aux = infoExtra\r\n        aux[editIndex]=nuevaInfo\r\n        setinfoExtra(aux)\r\n    }\r\n    useEffect(()=>{\r\n        if(edit){\r\n            setnuevaInfo(infoExtra[editIndex])\r\n        }\r\n    },[edit])\r\n    return(\r\n        <Dialog open={open}>\r\n            <DialogTitle>\r\n                {edit?\r\n                    'Editar Info Extra'\r\n                    :\r\n                    'Agregar Info Extra'\r\n                }\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <Grid container direction='column'>\r\n                    <Grid item className={classes.input}>\r\n                        <TextField\r\n                            autoFocus\r\n                            color='primary'\r\n                            label='Nueva Info'\r\n                            value={nuevaInfo}\r\n                            onChange={e=>{setnuevaInfo(e.target.value)}}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button \r\n                    onClick={()=>{\r\n                        if(edit){\r\n                            seteditIndex(-1)\r\n                        }\r\n                        resetTextFields()\r\n                        setOpen(false)\r\n                    }}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n                <Button\r\n                    disabled={ nuevaInfo ?false:true}\r\n                    onClick={()=>{\r\n                        if(edit){\r\n                            editarInfoExtra()\r\n                            seteditIndex(-1)\r\n                        }\r\n                        else{\r\n                            agregarInfoExtra()\r\n                        }\r\n                        resetTextFields()\r\n                        setOpen(false)\r\n                    }}\r\n                >\r\n                    {edit?\r\n                        'Editar'\r\n                        :\r\n                        'Agregar'\r\n                    }\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport {Dialog,DialogTitle,DialogContent,DialogActions,TextField,Button,Grid,makeStyles} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    input:{\r\n        marginBottom:theme.spacing(1),\r\n        textAlign:'center'\r\n    }\r\n}))\r\n\r\nexport const DialogNuevoMail = ({open,setOpen,mails,setmails,edit,editIndex,seteditIndex}) =>{\r\n    const classes = useStyles()\r\n    const [nombre,setnombre]=useState(undefined)\r\n    const [mail,setmail]=useState(undefined)\r\n    \r\n    const resetTextFields = () =>{\r\n        setnombre('')\r\n        setmail('')\r\n    }\r\n    const agregarMail = () =>{\r\n        let aux = mails\r\n        aux.push({\r\n            nombre:nombre?nombre:null,\r\n            mail:mail?mail:null,\r\n        })\r\n        setmails(aux)\r\n    }\r\n\r\n    const editarMail = () =>{\r\n        let aux = mails\r\n        aux[editIndex]={nombre:nombre,mail:mail}\r\n        setmails(aux)\r\n    }\r\n    useEffect(()=>{\r\n        if(edit){\r\n            setnombre(mails[editIndex].nombre)\r\n            setmail(mails[editIndex].mail)\r\n        }\r\n    },[edit])\r\n    return(\r\n        <Dialog open={open}>\r\n            <DialogTitle>\r\n                {edit?\r\n                    'Editar Mail'\r\n                    :\r\n                    'Agregar Nuevo Mail'\r\n                }\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <Grid container direction='column'>\r\n                    <Grid item className={classes.input}>\r\n                        <TextField\r\n                            autoFocus\r\n                            color='primary'\r\n                            label='Nombre'\r\n                            value={nombre}\r\n                            onChange={e=>{setnombre(e.target.value)}}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item className={classes.input}>\r\n                        <TextField\r\n                            color='primary'\r\n                            label='Mail'\r\n                            value={mail}\r\n                            onChange={e=>{setmail(e.target.value)}}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button \r\n                    onClick={()=>{\r\n                        if(edit){\r\n                            seteditIndex(-1)\r\n                        }\r\n                        resetTextFields()\r\n                        setOpen(false)\r\n                    }}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n                <Button\r\n                    disabled={ mail && nombre ?false:true}\r\n                    onClick={()=>{\r\n                        if(edit){\r\n                            editarMail()\r\n                            seteditIndex(-1)\r\n                        }\r\n                        else{\r\n                            agregarMail()\r\n                        }\r\n                        resetTextFields()\r\n                        setOpen(false)\r\n                    }}\r\n                >\r\n                    {edit?\r\n                        'Editar'\r\n                        :\r\n                        'Agregar'\r\n                    }\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport {Dialog,DialogTitle,DialogContent,DialogActions,TextField,Button,Grid,makeStyles} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    input:{\r\n        marginBottom:theme.spacing(1),\r\n        textAlign:'center'\r\n    }\r\n}))\r\n\r\nexport const DialogEliminarElemento = ({open,setopen,datos,setDatos,index,setdeleteIndex,tipoDeElemento}) =>{\r\n    const classes = useStyles()\r\n    \r\n    const eliminarElemento = () =>{\r\n        let aux = datos\r\n        aux.splice(index,1)\r\n        setDatos(aux)\r\n    }\r\n    return(\r\n        <Dialog open={open}>\r\n            <DialogTitle>\r\n                Desea Eliminar {tipoDeElemento}?\r\n            </DialogTitle>\r\n            <DialogActions>\r\n                <Button \r\n                    onClick={()=>{\r\n                        setopen(false)\r\n                        setdeleteIndex(undefined)\r\n                    }}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n                <Button\r\n                    color='error'\r\n                    onClick={()=>{\r\n                        eliminarElemento()\r\n                        setopen(false)\r\n                        setdeleteIndex(undefined)\r\n                    }}\r\n                >\r\n                    Eliminar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport {Grid, Button,makeStyles,Select,Input,Typography,MenuItem,InputLabel,FormControl} from '@material-ui/core'\r\nimport { Autocomplete } from '@material-ui/lab'\r\nimport {Telefonos} from './Telefonos'\r\nimport {Direccion} from './Direccion'\r\nimport {InfoExtra} from './InfoExtra'\r\nimport { Mails } from './Mails'\r\nimport {AddOutlined} from '@material-ui/icons'\r\nimport { DialogNuevaDireccion } from './Dialogs/DialogNuevaDireccion'\r\nimport { DialogNuevoTelefono } from './Dialogs/DialogNuevoTelefono'\r\nimport { DialogNuevaInfoExtra } from './Dialogs/DialogNuevaInfoExtra'\r\nimport { DialogNuevoMail } from './Dialogs/DialogNuevoMail'\r\nimport { DialogEliminarElemento } from './Dialogs/DialogEliminarElemento'\r\nimport Empty from '../../images/Empty.png'\r\n\r\nexport const Step = ({datos,setDatos,tipoDeDato,Expresos}) =>{\r\n    const [showDialog,setshowDialog]=useState(false)\r\n    const [editIndex,seteditIndex]=useState(-1)\r\n    const [showDialogDelete,setshowDialogDelete]=useState(false)\r\n    const [deleteIndex,setdeleteIndex]=useState(undefined)\r\n\r\n    const openDialogDelete = (index) =>{\r\n        setdeleteIndex(index)\r\n        setshowDialogDelete(true)\r\n    }\r\n    const handleChange = e =>{\r\n        console.log(e.target.value)\r\n        setDatos(e.target.value)\r\n    }\r\n    \r\n    const renderStep = () =>{\r\n        switch (tipoDeDato) {\r\n            case 'Direcciones':\r\n                return(\r\n                    <Grid container item xs={12} justify='center' spacing={3}>\r\n                        <Grid container item xs={12} justify='center'>\r\n                            <Button variant='contained' color='primary' startIcon={<AddOutlined/>} onClick={()=>{setshowDialog(true)}}>\r\n                                Agregar Direccion\r\n                            </Button>\r\n                        </Grid>\r\n                        {datos.length?\r\n                            <Grid container item xs={12} justify='center' >\r\n                                <Direccion direcciones={datos} seteditIndex={seteditIndex} showDialog={()=>{setshowDialog(true)}} openDialogDelete={i=>{openDialogDelete(i)}}/>\r\n                            </Grid>\r\n                            :\r\n                            <Grid container xs={12} justify='center' spacing={2}>\r\n                                <Grid container item xs={12} justify='center'>\r\n                                    <Typography variant='h5'>No Hay Direcciones Guardadas</Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <img src={Empty} alt=\"\" height='200px'/>\r\n                                </Grid>\r\n                            </Grid>\r\n                        }\r\n\r\n                        {/* DIALOGS */}\r\n                        <DialogNuevaDireccion open={showDialog} setOpen={setshowDialog} direcciones={datos} setdirecciones={setDatos} edit={editIndex!=-1} editIndex={editIndex} seteditIndex={seteditIndex}/>\r\n                        <DialogEliminarElemento open={showDialogDelete} setopen={setshowDialogDelete} datos={datos} setDatos={setDatos} index={deleteIndex} setdeleteIndex={setdeleteIndex} tipoDeElemento='Direccion'/>\r\n                    </Grid>\r\n                )\r\n                break;\r\n            case 'Telefonos':\r\n                return(\r\n                    <Grid container item xs={12} justify='center' spacing={3}>\r\n                        <Grid container item xs={12} justify='center' >\r\n                            <Button variant='contained' color='primary' startIcon={<AddOutlined/>} onClick={()=>{setshowDialog(true)}}>\r\n                                Agregar Telefono\r\n                            </Button>\r\n                        </Grid>\r\n                        {datos.length?\r\n                            <Grid container item xs={12} justify='center' >\r\n                                <Telefonos telefonos={datos} seteditIndex={seteditIndex} showDialog={()=>{setshowDialog(true)}} openDialogDelete={i=>{openDialogDelete(i)}}/>\r\n                            </Grid>\r\n                            :\r\n                            <Grid container xs={12} justify='center' spacing={2}>\r\n                                <Grid container item xs={12} justify='center'>\r\n                                    <Typography variant='h5'>No Hay Telefonos Guardadas</Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <img src={Empty} alt=\"\" height='200px'/>\r\n                                </Grid>\r\n                            </Grid>\r\n                        }\r\n                        <DialogNuevoTelefono open={showDialog} setOpen={setshowDialog} telefonos={datos} settelefonos={setDatos} edit={editIndex!=-1} editIndex={editIndex} seteditIndex={seteditIndex}/>\r\n                        <DialogEliminarElemento open={showDialogDelete} setopen={setshowDialogDelete} datos={datos} setDatos={setDatos} index={deleteIndex} setdeleteIndex={setdeleteIndex} tipoDeElemento='Telefono'/>\r\n                    </Grid>\r\n                )\r\n                break;\r\n            case 'Info Extra':\r\n                return(\r\n                    <Grid container item xs={12} justify='center' spacing={3}>\r\n                        <Grid container item xs={12} justify='center' >\r\n                            <Button variant='contained' color='primary' startIcon={<AddOutlined/>} onClick={()=>{setshowDialog(true)}}>\r\n                                Agregar Informacion Extra\r\n                            </Button>\r\n                        </Grid>\r\n                        {datos.length?\r\n                            <Grid container item xs={12} justify='center' >\r\n                                <InfoExtra infoExtra={datos} seteditIndex={seteditIndex} showDialog={()=>{setshowDialog(true)}} openDialogDelete={i=>{openDialogDelete(i)}}/>\r\n                            </Grid>\r\n                            :\r\n                            <Grid container xs={12} justify='center' spacing={2}>\r\n                                <Grid container item xs={12} justify='center'>\r\n                                    <Typography variant='h5'>No Hay Informacion Extra Guardadas</Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <img src={Empty} alt=\"\" height='200px'/>\r\n                                </Grid>\r\n                            </Grid>\r\n                        }\r\n                        <DialogNuevaInfoExtra open={showDialog} setOpen={setshowDialog} infoExtra={datos} setinfoExtra={setDatos} edit={editIndex!=-1} editIndex={editIndex} seteditIndex={seteditIndex}/>\r\n                        <DialogEliminarElemento open={showDialogDelete} setopen={setshowDialogDelete} datos={datos} setDatos={setDatos} index={deleteIndex} setdeleteIndex={setdeleteIndex} tipoDeElemento='Info Extra'/>\r\n                    </Grid>\r\n                )\r\n            break;\r\n            case 'Mails':\r\n                return(\r\n                    <Grid container item xs={12} justify='center' spacing={3}>\r\n                        <Grid container item xs={12} justify='center' >\r\n                            <Button variant='contained' color='primary' startIcon={<AddOutlined/>} onClick={()=>{setshowDialog(true)}}>\r\n                                Agregar Mail\r\n                            </Button>\r\n                        </Grid>\r\n                        {datos.length?\r\n                            <Grid container item xs={12} justify='center' >\r\n                                <Mails mails={datos} seteditIndex={seteditIndex} showDialog={()=>{setshowDialog(true)}} openDialogDelete={i=>{openDialogDelete(i)}}/>\r\n                            </Grid>\r\n                            :\r\n                            <Grid container xs={12} justify='center' spacing={2}>\r\n                                <Grid container item xs={12} justify='center'>\r\n                                    <Typography variant='h5'>No Hay E-Mails Guardadas</Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <img src={Empty} alt=\"\" height='200px'/>\r\n                                </Grid>\r\n                            </Grid>\r\n                        }\r\n                        <DialogNuevoMail open={showDialog} setOpen={setshowDialog} mails={datos} setmails={setDatos} edit={editIndex!=-1} editIndex={editIndex} seteditIndex={seteditIndex}/>\r\n                        <DialogEliminarElemento open={showDialogDelete} setopen={setshowDialogDelete} datos={datos} setDatos={setDatos} index={deleteIndex} setdeleteIndex={setdeleteIndex} tipoDeElemento='Mail'/>\r\n                    </Grid>\r\n                )\r\n            break;\r\n            case 'Expresos':\r\n                return(\r\n                    <Grid container item xs={12} sm={10} md={8} justify='center'>     \r\n                        <FormControl fullWidth>\r\n                        <InputLabel id=\"demo-mutiple-name-label\">Expresos</InputLabel>\r\n                            <Select\r\n                            multiple\r\n                            value={datos}\r\n                            onChange={handleChange}\r\n                            input={<Input />}\r\n                            >\r\n                            {Expresos?\r\n                                Object.keys(Expresos).map(expreso => (\r\n                                    <MenuItem key={Expresos[expreso].datos.nombre} value={Expresos[expreso].datos.nombre}>\r\n                                        {Expresos[expreso].datos.nombre}\r\n                                    </MenuItem>\r\n                                ))\r\n                                :\r\n                                null\r\n                            }\r\n                            </Select>\r\n                            {console.log(datos)}\r\n                        </FormControl>\r\n                    </Grid>\r\n                )\r\n            break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return( renderStep() )\r\n}","import React from 'react'\r\nimport {Grid,Paper,TextField,makeStyles} from '@material-ui/core'\r\nimport {DialogNuevaDireccion} from './Dialogs/DialogNuevaDireccion'\r\nimport {AddOutlined} from '@material-ui/icons'\r\nimport {content} from '../../Pages/styles/styles'\r\n\r\nexport const FormDetalles = ({nombre,setnombre,dni,setdni,cuit,setcuit})=>{\r\n    const classes = content()\r\n    return(\r\n        <Grid container item xs={12} justify='center'>\r\n            <Grid item direction='column' spacing={3}>\r\n                <Grid item>\r\n                    <TextField\r\n                        autoFocus\r\n                        label='Nombre'\r\n                        value={nombre}\r\n                        onChange={e=>{\r\n                            setnombre(e.target.value)\r\n                        }}\r\n                        />\r\n                </Grid>\r\n                <Grid item>\r\n                    <TextField\r\n                        value={dni}\r\n                        onChange={e=>{\r\n                            setdni(e.target.value)\r\n                        }}\r\n                        label='DNI'\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <TextField\r\n                        value={cuit}\r\n                        onChange={e=>{\r\n                            setcuit(e.target.value)\r\n                        }}\r\n                        label='CUIT'\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </Grid>\r\n    )\r\n}","import React,{useState, useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {Chip,Paper,ListItem,Card,Button,StepContent,Backdrop,StepLabel,Grid,Step,Stepper,Link as LinkComponent,Snackbar,CircularProgress, Avatar} from '@material-ui/core'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {Step as StepComponent} from '../components/Nuevo-Cliente/Step'\r\nimport {FormDetalles} from '../components/Nuevo-Cliente/FormDetalles'\r\nimport {Direccion} from '../components/Nuevo-Cliente/Direccion'\r\nimport {database} from 'firebase'\r\nimport {content} from './styles/styles'\r\nimport {checkSearch} from '../utilities'\r\nimport { ContactMail, LocalShipping, Mail, PeopleAlt, Phone, Room } from '@material-ui/icons';\r\n\r\nconst NuevoCliente=(props)=>{\r\n    const classes = content()\r\n    const [nombre,setnombre]=useState(undefined)\r\n    const [dni,setdni]=useState(undefined)\r\n    const [cuit,setcuit]=useState(undefined)\r\n    const [expresos,setexpresos]=useState([])\r\n    const [mails,setmails]=useState([])\r\n    const [direcciones,setdirecciones]=useState([])  \r\n    const [telefonos,settelefonos]=useState([])\r\n    const [infoExtra,setinfoExtra]=useState([])\r\n    const [deuda,setdeuda]=useState(0)\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [showSnackbar, setshowSnackbar] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const steps = getSteps();\r\n\r\n    // STEPPER NAVIGATION\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n    //STEPS\r\n    function getStepContent(step) {\r\n      switch (step) {\r\n        case 0:\r\n          return (\r\n            <FormDetalles\r\n                nombre={nombre} \r\n                setnombre={setnombre}\r\n                dni={dni} \r\n                setdni={setdni}\r\n                cuit={cuit} \r\n                setcuit={setcuit}\r\n            />\r\n          );\r\n        case 1:\r\n          return (\r\n            <StepComponent \r\n                datos={direcciones} \r\n                setDatos={setdirecciones}\r\n                tipoDeDato='Direcciones'\r\n            /> \r\n          );\r\n        case 2:\r\n          return (\r\n            <StepComponent\r\n                datos={telefonos} \r\n                setDatos={settelefonos}\r\n                tipoDeDato='Telefonos'\r\n            />\r\n          );\r\n          case 3:\r\n              return (\r\n                <StepComponent\r\n                  datos={mails} \r\n                  setDatos={setmails}\r\n                  tipoDeDato='Mails'\r\n                />\r\n            );\r\n            case 4:\r\n              return (\r\n                <StepComponent\r\n                  datos={expresos} \r\n                  setDatos={setexpresos}\r\n                  Expresos={props.expresos}\r\n                  tipoDeDato='Expresos'\r\n                />\r\n            );\r\n            case 5:\r\n                return (\r\n                <StepComponent\r\n                    datos={infoExtra} \r\n                    setDatos={setinfoExtra}\r\n                    tipoDeDato='Info Extra'\r\n                />\r\n            );\r\n      }\r\n    }\r\n    function getStepLabel(label,index) {\r\n        switch (index) {\r\n            case 0:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<PeopleAlt/>} \r\n                            label={label}  \r\n                            onClick={()=>{if(nombre){setActiveStep(index)}}}\r\n                            variant='default'\r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n            case 1:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<Room/>} \r\n                            label={label}  \r\n                            onClick={()=>{if(nombre){setActiveStep(index)}}}\r\n                            variant='default'\r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n            case 2:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<Phone/>} \r\n                            label={label}  \r\n                            onClick={()=>{if(nombre){setActiveStep(index)}}}\r\n                            variant='default'\r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n            case 3:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<Mail/>} \r\n                            label={label}  \r\n                            onClick={()=>{if(nombre){setActiveStep(index)}}}\r\n                            variant='default'\r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n            case 4:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<LocalShipping/>} \r\n                            label={label}  \r\n                            onClick={()=>{if(nombre){setActiveStep(index)}}}\r\n                            variant='default'\r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n            case 5:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<ContactMail/>} \r\n                            label={label}  \r\n                            onClick={()=>{if(nombre){setActiveStep(index)}}}\r\n                            variant='default'\r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n        }\r\n    }\r\n    function getSteps() {\r\n        return ['Datos Personales', 'Direcciones', 'Telefonos','Mails','Expresos','Informacion Extra'];\r\n    }\r\n    \r\n    // FUNCTIONS\r\n    const guardarDatos = () =>{\r\n        setLoading(true)\r\n        let aux={[nombre]:{\r\n            datos:{\r\n                deuda:deuda,\r\n                nombre:nombre,\r\n                dni:dni?dni:null,\r\n                cuit:cuit?cuit:null,\r\n                direcciones:direcciones?direcciones:null,\r\n                telefonos:telefonos?telefonos:null,\r\n                mails:mails?mails:null,\r\n                expresos:expresos?expresos:null,\r\n                infoExtra:infoExtra?infoExtra:null,\r\n            },\r\n        }}\r\n        if(props.history.location.search){\r\n            let newAux = props.clientes[checkSearch(props.history.location.search)]\r\n            newAux['datos']=aux[nombre].datos\r\n            \r\n            // COPIA PEDIDOS E HISTORIAL\r\n            database().ref().child(props.user.uid).child('clientes').child(props.history.location.search.slice(1)).remove()\r\n            .then(()=>{\r\n                database().ref().child(props.user.uid).child('clientes').child(nombre).update(newAux)\r\n                .then(()=>{\r\n                    setshowSnackbar(props.history.location.search?'El Cliente Se Edito Correctamente!':'El Cliente Se Agrego Correctamente!')\r\n                        setTimeout(() => {\r\n                            setLoading(false)\r\n                            props.history.replace(`/Cliente?${nombre}`)\r\n                        }, 2000);\r\n                })\r\n                .catch(()=>{\r\n                    setLoading(false)\r\n                })\r\n            })\r\n            .catch(()=>{\r\n                setLoading(false)\r\n            })\r\n        }\r\n        else{\r\n            database().ref().child(props.user.uid).child('clientes').update(aux)\r\n                .then(()=>{\r\n                    setshowSnackbar(props.history.location.search?'El Cliente Se Edito Correctamente!':'El Cliente Se Agrego Correctamente!')\r\n                    setTimeout(() => {\r\n                        props.history.replace(`/Cliente?${nombre}`)\r\n                    }, 2000);\r\n                })\r\n                .catch(()=>{\r\n                    setLoading(false)\r\n                })\r\n        }\r\n    }\r\n\r\n    // FILL FOR EDIT\r\n    useEffect(()=>{\r\n        if(props.history.location.search){\r\n            const {nombre,dni,cuit,expresos,mails,direcciones,telefonos,infoExtra,deuda} = props.clientes[checkSearch(props.history.location.search)].datos\r\n            nombre&&setnombre(nombre)\r\n            dni&&setdni(dni)\r\n            cuit&&setcuit(cuit)\r\n            expresos&&setexpresos(expresos)\r\n            mails&&setmails(mails)\r\n            direcciones&&setdirecciones(direcciones)\r\n            telefonos&&settelefonos(telefonos)\r\n            infoExtra&&setinfoExtra(infoExtra)\r\n            deuda&&setdeuda(deuda)\r\n        }\r\n    },[])\r\n    return( \r\n        <Layout history={props.history} page={props.history.location.search?'Editar Cliente':'Nuevo Cliente'} user={props.user.uid} blockGoBack={true}>\r\n            {/* CONTENT */}\r\n            <Paper className={classes.content}>\r\n                {/* STEPPER */}\r\n                <Stepper orientation='vertical' activeStep={activeStep} className={classes.stepper}>\r\n                    {steps.map((label,index)=>(\r\n                        <Step>\r\n                            {getStepLabel(label,index)}\r\n                            <StepContent>\r\n                            <Grid container xs={12} justify='center' spacing={3}>\r\n                                {getStepContent(index)}\r\n                                <Grid container item xs={12} justify='center' spacing={3}>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            disabled={activeStep===0}\r\n                                            onClick={handleBack}\r\n                                        >\r\n                                            Volver\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            disabled={!nombre}\r\n                                            onClick={activeStep === steps.length - 1 ? guardarDatos : handleNext}\r\n                                        >\r\n                                            {activeStep === steps.length - 1 ? `${props.history.location.search?'Guardar Edicion':'Guardar Cliente'}` : 'Siguiente'}\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    {activeStep !== steps.length -1?\r\n                                        <Grid item>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"light\"\r\n                                                disabled={!nombre}\r\n                                                onClick={()=>{setActiveStep(steps.length-1)}}\r\n                                                className={classes.button}\r\n                                            >\r\n                                                Finalizar\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </Grid>\r\n                            </Grid>\r\n                            </StepContent>\r\n                        </Step>\r\n                    ))}\r\n                </Stepper>\r\n\r\n                {/* PREVIEW */}\r\n                {activeStep === steps.length && (\r\n                    <Grid container justify='center'>\r\n                        <Paper elevation={6}>\r\n                            <Button  onClick={handleBack}>\r\n                                Atras     \r\n                            </Button>\r\n                            <Button variant='contained'  onClick={guardarDatos} className={classes.button}>\r\n                                {props.history.location.search?'Guardar Edicion':'Guardar Cliente'}     \r\n                            </Button>\r\n                        </Paper>\r\n                    </Grid>\r\n                )}\r\n\r\n            </Paper>\r\n            {/* BACKDROP & SNACKBAR */}\r\n            <Backdrop className={classes.backdrop} open={loading}>\r\n                    <CircularProgress color=\"inherit\" />\r\n                    <Snackbar open={showSnackbar} autoHideDuration={2000} onClose={()=>{setshowSnackbar('')}}>\r\n                        <Alert severity=\"success\" variant='filled'>\r\n                            {props.history.location.search?\r\n                                'El cliente se edito correctamente!'\r\n                                :\r\n                                'El nuevo cliente ha sido agregado!'\r\n                            }\r\n                        </Alert>\r\n                    </Snackbar>\r\n            </Backdrop>\r\n        </Layout>\r\n    )\r\n}\r\n\r\n// REDUX STATE TO PROPS\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        expresos:state.expresos,\r\n        clientes:state.clientes,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(NuevoCliente)","import React,{useState, useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {Avatar,Paper,Chip,Card,Button,StepContent,Backdrop,StepLabel,Grid,Step,Stepper,Link as LinkComponent,Snackbar,CircularProgress} from '@material-ui/core'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {Step as StepComponent} from '../components/Nuevo-Cliente/Step'\r\nimport {FormDetalles} from '../components/Nuevo-Cliente/FormDetalles'\r\nimport {database} from 'firebase'\r\nimport {content} from './styles/styles'\r\nimport { ContactMail, LocalShipping, Mail, PeopleAlt, Phone, Room } from '@material-ui/icons';\r\nimport { checkSearch } from '../utilities';\r\n\r\n// COMPONENT\r\nconst NuevoProveedor=(props)=>{\r\n    const classes = content()\r\n    const [nombre,setnombre]=useState(undefined)\r\n    const [dni,setdni]=useState(undefined)\r\n    const [cuit,setcuit]=useState(undefined)\r\n    const [expresos,setexpresos]=useState([])\r\n    const [mails,setmails]=useState([])\r\n    const [direcciones,setdirecciones]=useState([])  \r\n    const [telefonos,settelefonos]=useState([])\r\n    const [infoExtra,setinfoExtra]=useState([])\r\n    const [deuda,setdeuda]=useState(0)\r\n\r\n    //STEPPER STATE\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [showSnackbar, setshowSnackbar] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const steps = getSteps();\r\n\r\n    // STEPPER NAVIGATION\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n    function getStepContent(step) {\r\n      switch (step) {\r\n        case 0:\r\n          return (\r\n                <FormDetalles\r\n                    nombre={nombre} \r\n                    setnombre={setnombre}\r\n                    dni={dni} \r\n                    setdni={setdni}\r\n                    cuit={cuit} \r\n                    setcuit={setcuit}\r\n                />\r\n          );\r\n        case 1:\r\n          return (\r\n            <StepComponent \r\n                datos={direcciones} \r\n                setDatos={setdirecciones}\r\n                tipoDeDato='Direcciones'\r\n            /> \r\n          );\r\n        case 2:\r\n          return (\r\n            <StepComponent\r\n                datos={telefonos} \r\n                setDatos={settelefonos}\r\n                tipoDeDato='Telefonos'\r\n            />\r\n          );\r\n          case 3:\r\n              return (\r\n                <StepComponent\r\n                  datos={mails} \r\n                  setDatos={setmails}\r\n                  tipoDeDato='Mails'\r\n                />\r\n            );\r\n            case 4:\r\n              return (\r\n                <StepComponent\r\n                  datos={expresos} \r\n                  setDatos={setexpresos}\r\n                  Expresos={props.expresos}\r\n                  tipoDeDato='Expresos'\r\n                />\r\n            );\r\n            case 5:\r\n                return (\r\n                <StepComponent\r\n                    datos={infoExtra} \r\n                    setDatos={setinfoExtra}\r\n                    tipoDeDato='Info Extra'\r\n                />\r\n            );\r\n      }\r\n    }\r\n    function getStepLabel(label,index) {\r\n        switch (index) {\r\n            case 0:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<PeopleAlt/>} \r\n                            label={label}  \r\n                            onClick={()=>{if(nombre){setActiveStep(index)}}}\r\n                            variant='default'\r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n            case 1:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<Room/>} \r\n                            label={label}  \r\n                            onClick={()=>{if(nombre){setActiveStep(index)}}}\r\n                            variant='default'\r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n            case 2:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<Phone/>} \r\n                            label={label}  \r\n                            onClick={()=>{if(nombre){setActiveStep(index)}}}\r\n                            variant='default'\r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n            case 3:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<Mail/>} \r\n                            label={label}  \r\n                            onClick={()=>{if(nombre){setActiveStep(index)}}}\r\n                            variant='default'\r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n            case 4:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<LocalShipping/>} \r\n                            label={label}  \r\n                            onClick={()=>{if(nombre){setActiveStep(index)}}}\r\n                            variant='default'\r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n            case 5:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<ContactMail/>} \r\n                            label={label}  \r\n                            onClick={()=>{if(nombre){setActiveStep(index)}}}\r\n                            variant='default'\r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n        }\r\n    }\r\n    function getSteps() {\r\n        return ['Datos personales', 'Direcciones', 'Telefonos','Mails','Expresos','Informacion Extra'];\r\n    }\r\n\r\n    // FUNCTIONS\r\n    const guardarDatos = () =>{\r\n        setLoading(true)\r\n        let aux={[nombre]:{\r\n            datos:{\r\n                deuda:deuda,\r\n                nombre:nombre,\r\n                dni:dni?dni:null,\r\n                cuit:cuit?cuit:null,\r\n                direcciones:direcciones?direcciones:null,\r\n                telefonos:telefonos?telefonos:null,\r\n                mails:mails?mails:null,\r\n                expresos:expresos?expresos:null,\r\n                infoExtra:infoExtra?infoExtra:null,\r\n            },\r\n        }}\r\n        if(props.history.location.search){\r\n            let newAux = props.proveedores[checkSearch(props.history.location.search)]\r\n            newAux['datos']=aux[nombre].datos\r\n            \r\n            // COPIA PEDIDOS E HISTORIAL\r\n            database().ref().child(props.user.uid).child('proveedores').child(props.history.location.search.slice(1)).remove()\r\n            .then(()=>{\r\n                database().ref().child(props.user.uid).child('proveedores').child(nombre).update(newAux)\r\n                .then(()=>{\r\n                    setshowSnackbar(props.history.location.search?'El Proveedor Se Edito Correctamente!':'El Proveedor Se Agrego Correctamente!')\r\n                        setTimeout(() => {\r\n                            setLoading(false)\r\n                            props.history.replace(`/Proveedor?${nombre}`)\r\n                        }, 2000);\r\n                })\r\n                .catch(()=>{\r\n                    setLoading(false)\r\n                })\r\n            })\r\n            .catch(()=>{\r\n                setLoading(false)\r\n            })\r\n        }\r\n        else{\r\n            database().ref().child(props.user.uid).child('proveedores').update(aux)\r\n                .then(()=>{\r\n                    setshowSnackbar(props.history.location.search?'El Proveedor Se Edito Correctamente!':'El Proveedor Se Agrego Correctamente!')\r\n                    setTimeout(() => {\r\n                        props.history.replace(`/Proveedor?${nombre}`)\r\n                    }, 2000);\r\n                })\r\n                .catch(()=>{\r\n                    setLoading(false)\r\n                })\r\n        }\r\n    }\r\n\r\n    // FILL FOR EDIT\r\n    useEffect(()=>{\r\n        if(props.history.location.search){\r\n            const {nombre,dni,cuit,expresos,mails,direcciones,telefonos,infoExtra,deuda} = props.proveedores[checkSearch(props.history.location.search)].datos\r\n            nombre&&setnombre(nombre)\r\n            dni&&setdni(dni)\r\n            cuit&&setcuit(cuit)\r\n            expresos&&setexpresos(expresos)\r\n            mails&&setmails(mails)\r\n            direcciones&&setdirecciones(direcciones)\r\n            telefonos&&settelefonos(telefonos)\r\n            infoExtra&&setinfoExtra(infoExtra)\r\n            deuda&&setdeuda(deuda)\r\n        }\r\n    },[])\r\n    return(\r\n        <Layout history={props.history} page={props.history.location.search?'Editar Proveedor':'Nuevo Proveedor'} user={props.user.uid} blockGoBack={true}>\r\n            {/* CONTENT */}\r\n            <Paper className={classes.content}>\r\n                {/* STEPPER */}\r\n                <Stepper orientation='vertical' activeStep={activeStep} className={classes.stepper}>\r\n                    {steps.map((label,index)=>(\r\n                        <Step>\r\n                            {getStepLabel(label,index)}\r\n                            <StepContent>\r\n                                <Grid container xs={12} justify='center' spacing={3}>\r\n                                    {getStepContent(index)}\r\n                                    <Grid container item xs={12} justify='center' spacing={3}>\r\n                                        <Grid item>\r\n                                            <Button\r\n                                                disabled={activeStep===0}\r\n                                                onClick={handleBack}\r\n                                            >\r\n                                                Volver\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                disabled={!nombre}\r\n                                                onClick={activeStep === steps.length - 1 ? guardarDatos : handleNext}\r\n                                            >\r\n                                                {activeStep === steps.length - 1 ? `${props.history.location.search?'Guardar Edicion':'Guardar Proveedor'}` : 'Siguiente'}\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        {activeStep !== steps.length -1?\r\n                                            <Grid item>\r\n                                                <Button\r\n                                                    variant=\"contained\"\r\n                                                    color=\"light\"\r\n                                                    disabled={!nombre}\r\n                                                    onClick={()=>{setActiveStep(steps.length-1)}}\r\n                                                    className={classes.button}\r\n                                                >\r\n                                                    Finalizar\r\n                                                </Button>\r\n                                            </Grid>\r\n                                            :\r\n                                            null\r\n                                        }\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </StepContent>\r\n                        </Step>\r\n                    ))}\r\n                </Stepper>\r\n            </Paper>\r\n            {/* BACKDROP & SNACKBAR */}\r\n            <Backdrop className={classes.backdrop} open={loading}>\r\n                <CircularProgress color=\"inherit\" />\r\n                <Snackbar open={showSnackbar} autoHideDuration={2000} onClose={()=>{setshowSnackbar(false)}}>\r\n                    <Alert severity=\"success\" variant='filled'>\r\n                        {showSnackbar}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </Backdrop>\r\n        </Layout>\r\n    )\r\n}\r\n\r\n// REDUX STATE TO PROPS\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        expresos:state.expresos,\r\n        proveedores:state.proveedores,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(NuevoProveedor)","import React,{useState} from 'react'\r\nimport {Grid,Card,CardContent,CardActions,Button,Typography,Chip,CardHeader,IconButton,Menu,MenuItem} from '@material-ui/core'\r\nimport {formatMoney} from '../../utilities'\r\nimport {AttachMoney,MoreVert} from '@material-ui/icons'\r\nimport {Link} from 'react-router-dom'\r\nimport {content} from '../../Pages/styles/styles'\r\n\r\n\r\nexport const CardProveedor = ({datos,search}) =>{\r\n    const classes = content()\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    //Menu More\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return(\r\n        <Grid item xs={8} sm={6} md={4} lg={3} style={!search?null:datos.nombre.toLowerCase().search(search.toLowerCase()) == -1 ? {display:'none'}:{}}>\r\n            <Card className={classes.cardCliente}>\r\n                <CardHeader\r\n                    title={\r\n                        <Link \r\n                            style={{color:'#fff',textDecoration:'none'}}\r\n                            to={{\r\n                                pathname:'/Proveedor',\r\n                                search:`${datos.nombre}`\r\n                            }}>\r\n                                <Typography variant=\"h5\" className={classes.titleCardCliente}>\r\n                                    {datos.nombre}\r\n                                </Typography>\r\n                            </Link>\r\n                    }\r\n                    action={\r\n                        <>\r\n                            <IconButton aria-label=\"settings\" onClick={handleClick}>\r\n                                    <MoreVert/>\r\n                            </IconButton>\r\n                            <Menu\r\n                                id=\"simple-menu\"\r\n                                anchorEl={anchorEl}\r\n                                keepMounted\r\n                                open={Boolean(anchorEl)}\r\n                                onClose={handleClose}\r\n                            >   \r\n                                <Link \r\n                                    style={{color:'#fff',textDecoration:'none'}}\r\n                                    to={{\r\n                                    pathname:'/Editar-Proveedor',\r\n                                    search:datos.nombre\r\n                                }}>\r\n                                    <MenuItem>Editar</MenuItem>\r\n                                </Link>\r\n                                <MenuItem className={classes.deleteButton} onClick={()=>{\r\n\r\n                                }}>\r\n                                    Eliminar\r\n                                </MenuItem>\r\n                            </Menu>\r\n                        </>\r\n                    }\r\n                />\r\n                <CardContent>\r\n                        <Grid container item xs={12} justify='center'>\r\n                            <Link \r\n                                style={{color:'#fff',textDecoration:'none'}}\r\n                                to={{\r\n                                    pathname:'/Historial-Proveedor',\r\n                                    search:datos.nombre\r\n                                }}>\r\n                                <Chip\r\n                                    className={datos.deuda>0?classes.chipCardDangerCliente:classes.chipCardSuccessCliente}\r\n                                    variant=\"outlined\"\r\n                                    icon={<AttachMoney/>}\r\n                                    label={datos.deuda?formatMoney(datos.deuda>=0?datos.deuda:-datos.deuda):formatMoney(0)}\r\n                                />\r\n                            </Link>\r\n                        </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {makeStyles,Paper,ListItem,Card,CardContent,Typography,TextField,IconButton,Grid,Chip,Button,Link as LinkComponent} from '@material-ui/core'\r\nimport {AttachMoney,PersonAdd} from '@material-ui/icons'\r\nimport {Link} from 'react-router-dom'\r\nimport {content} from './styles/styles'\r\nimport {CardProveedor} from '../components/Proveedores/CardProveedor'\r\nimport Empty from '../images/Empty.png'\r\n// COMPONENT\r\nconst Proveedores=(props)=>{\r\n    const classes = content()\r\n    let [search,setSearch]=useState('')\r\n            \r\n    return(\r\n        <Layout history={props.history} page=\"Proveedores\" user={props.user.uid}>\r\n            <Paper className={classes.content}>\r\n                <Grid container spacing={4}>\r\n                    {/* SEARCH BAR */}\r\n                    <Grid container item xs={12} justify='center' alignItems='center'>\r\n                        <Grid item>\r\n                            <Link \r\n                                to='/Nuevo-Proveedor'>\r\n                                <IconButton>\r\n                                    <PersonAdd/>\r\n                                </IconButton>\r\n                            </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <TextField\r\n                                value={search}\r\n                                onChange={e=>{\r\n                                    setSearch(e.target.value)\r\n                                }}\r\n                                label='Buscar Proveedor'\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    {/* PROVEEDOR LIST */}\r\n                    <Grid container item xs={12} justify='center' alignItems='center' spacing={2}> \r\n                        {props.proveedores?\r\n                            Object.keys(props.proveedores).map(key=>(\r\n                                <CardProveedor datos={props.proveedores[key].datos} search={search}/>\r\n                            ))\r\n                            :\r\n                            <>\r\n                            <Grid item>\r\n                                <img src={Empty} alt=\"\" height='500px'/>\r\n                            </Grid>\r\n                            <Grid container item xs={12} justify='center'>\r\n                                <Typography variant='h4'>No hay Proveedores Ingresados</Typography>\r\n                            </Grid>\r\n                            </>\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </Layout>\r\n    )\r\n}\r\n\r\n// REDUX STATE TO PROPS\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        proveedores:state.proveedores\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Proveedores)","import React from 'react'\r\nimport {Grid, CardContent, Typography, CardHeader,Card,IconButton,CardTitle,CardActions,Button} from '@material-ui/core'\r\nimport {History,Add} from '@material-ui/icons'\r\nimport {Link} from 'react-router-dom'\r\nimport {formatMoney} from '../../utilities'\r\nimport {content} from '../../Pages/styles/styles'\r\n\r\nexport const Deuda = ({deuda,id,generateChartDeudas}) =>{\r\n    const classes= content()\r\n    return(\r\n        <Card className={deuda>0?classes.cardDeudaRed:classes.cardDeudaGreen}>\r\n            <CardHeader\r\n                title={`$ ${formatMoney(deuda>=0?deuda:-deuda)}`}\r\n                subheader='Balance - Ultimos 6 Meses'\r\n                action={\r\n                    <>\r\n                        <Link to={{\r\n                            pathname:'/Historial-Proveedor',\r\n                            search:id,\r\n                            props:{\r\n                                tipo:'proveedor'\r\n                            }\r\n                        }}>\r\n                            <IconButton size='small'>\r\n                                <History/>\r\n                            </IconButton>\r\n                        </Link>\r\n                        <Link to={{\r\n                            pathname:'/Nuevo-Pago-Proveedor',\r\n                            search:id,\r\n                        }}>\r\n                            <IconButton size='small'>\r\n                                <Add/>\r\n                            </IconButton>\r\n                        </Link>\r\n                    </>\r\n                }\r\n            />\r\n            <CardContent>\r\n                {generateChartDeudas()}\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {Card,Paper,Grid,CardHeader,CardContent,IconButton,Backdrop,Snackbar,CircularProgress} from '@material-ui/core'\r\nimport {Alert} from '@material-ui/lab'\r\nimport {EditOutlined,DeleteOutline} from '@material-ui/icons'\r\nimport {Deuda} from '../components/Proveedor/Deuda'\r\nimport {ListaDePedidos} from '../components/Cliente/ListaDePedidos'\r\nimport {Detalles} from '../components/Cliente/Detalles'\r\nimport {DialogConfirmDelete} from '../components/Cliente/DialogConfirmDelete'\r\nimport {database} from 'firebase'\r\nimport {Link} from 'react-router-dom'\r\nimport {content} from './styles/styles'\r\nimport { checkSearch } from '../utilities'\r\nimport ApexCharts from 'react-apexcharts';\r\nimport {formatMoney} from '../utilities'\r\n\r\n\r\n// COMPONENT\r\nconst Proveedor=(props)=>{\r\n    const classes = content()\r\n    const [proveedor,setProveedor]= useState(props.proveedores[checkSearch(props.history.location.search)])\r\n    const [showSnackbar, setshowSnackbar] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [searchEntrega, setSearchEntrega] = useState(props.location.props?props.location.props.searchEntrega:'');\r\n    const [showDialogConfirmDelete, setshowDialogConfirmDelete] = useState(false);\r\n\r\n    const dark = 'dark'\r\n\r\n\r\n    const [filteredEntregas,setFilteredEntregas] = useState(undefined)\r\n\r\n    const generateChartDeudas = () => {\r\n        // Asume que tienes los datos en dos variables: sortedCompras y sortedVentas\r\n        const keyProveedor = checkSearch(props.location.search)\r\n        const initialMonth = new Date(Date.now());\r\n        initialMonth.setMonth(initialMonth.getMonth() - 6);\r\n        let deudas = []\r\n        let labels = []\r\n        if(props.proveedores[keyProveedor].pagos){\r\n            Object.keys(props.proveedores[keyProveedor].pagos).map(pago=>{\r\n                const [day,month,year] = (props.proveedores[keyProveedor].pagos[pago].fecha).split('/')\r\n                const auxFecha = new Date(0);\r\n                auxFecha.setFullYear(year, month - 1, day);\r\n                if(auxFecha>initialMonth){\r\n                    deudas.push(props.proveedores[keyProveedor].pagos[pago].deudaActualizada)\r\n                    labels.push(props.proveedores[keyProveedor].pagos[pago].fecha)\r\n                }\r\n            })\r\n            if(deudas.length==1){\r\n                let auxdeudas= [props.proveedores[keyProveedor].datos.deuda!=0?props.proveedores[keyProveedor].datos.deuda:0,...deudas]\r\n                deudas=auxdeudas\r\n            }\r\n        }\r\n        // Define la configuración del gráfico\r\n        const options = {\r\n            labels:labels,\r\n            chart:{\r\n                sparkline: {\r\n                    enabled: true\r\n                },\r\n            },\r\n            theme:{\r\n                palette:'palette3'\r\n            },\r\n            stroke: {\r\n                curve: 'smooth'\r\n            },\r\n            tooltip:{\r\n                y:{\r\n                    formatter: val=> `$ ${formatMoney(val)}`\r\n                },\r\n                theme:'dark'\r\n            }\r\n        };\r\n    \r\n        // Define los datos a visualizar\r\n        const series = [\r\n            {\r\n            name: 'Deuda',\r\n            data: deudas,\r\n            },\r\n        ];\r\n    \r\n        // Renderiza el gráfico\r\n        return <ApexCharts options={options} series={series} type='area' height={150}/>;\r\n    }\r\n    const generateChartProductos = () => {\r\n        // Asume que tienes los datos en dos variables: sortedCompras y sortedVentas\r\n        const keyProveedor = checkSearch(props.location.search)\r\n        let series = []\r\n        let labels = []\r\n        if(props.proveedores[keyProveedor].entregas){\r\n            Object.keys(props.proveedores[keyProveedor].entregas).reverse().forEach((pedido) => {\r\n                props.proveedores[keyProveedor].entregas[pedido].articulos.map(articulo=>{\r\n                    const pos = labels.indexOf(articulo.producto);\r\n                    if (pos !== -1) {\r\n                    series[pos] += parseInt(articulo.cantidad);\r\n                    } else {\r\n                    series.push(parseInt(articulo.cantidad));\r\n                    labels.push(articulo.producto);\r\n                    }\r\n                })\r\n            });\r\n        }\r\n        // Define la configuración del gráfico\r\n        const options = {\r\n            labels:labels,\r\n            chart:{\r\n                sparkline:{\r\n                    enabled:true\r\n                }\r\n            },\r\n            theme:{\r\n                mode:'dark'\r\n            },\r\n            tooltip:{\r\n                fillSeriesColor:false\r\n            }\r\n        };\r\n    \r\n    \r\n        // Renderiza el gráfico\r\n        return (\r\n            <Card>\r\n                <CardHeader\r\n                    subheader='Historico de Productos'\r\n                />\r\n                <CardContent>\r\n                    <ApexCharts options={options} series={series} type='donut' width={350}/>\r\n                </CardContent>\r\n            </Card>)\r\n    }\r\n    const generateChartAnualSales = () => {\r\n        // Asume que tienes los datos en dos variables: sortedCompras y sortedVentas\r\n        const actualYear = new Date().getFullYear()\r\n\r\n        let sales = []\r\n        let salesUltimoAnio\r\n        let labelsUltimoAnio =  []\r\n\r\n        if(filteredEntregas){\r\n            const fechaActual = new Date();\r\n            const mesActual = fechaActual.getMonth();\r\n            const anioActual = fechaActual.getFullYear();\r\n            let auxSales = []\r\n\r\n            const mesesDesdeUltimoAnio = 12;\r\n            let mesInicio = mesActual - mesesDesdeUltimoAnio;\r\n            let anioInicio = anioActual;\r\n            if (mesInicio < 0) {\r\n                mesInicio += 12;\r\n                anioInicio -= 1;\r\n            }\r\n            const initialDate = new Date(0)\r\n            initialDate.setFullYear(anioInicio,mesInicio,1)\r\n            console.log(filteredEntregas)\r\n            for (const [year, data] of filteredEntregas) {\r\n                // Itera sobre cada mes en el año\r\n                for (const [month, dataMonth] of Object.entries(data.months)) {\r\n                        const auxFecha = new Date(0);\r\n                        auxFecha.setFullYear(year, month - 1, 1);\r\n                        if(auxFecha>initialDate && auxFecha<fechaActual){\r\n                            auxSales.push(dataMonth.total)\r\n                        }\r\n                }\r\n            }\r\n            if(auxSales.length<12){\r\n                const padding = new Array(12 - auxSales.length).fill(0);\r\n                padding.map(i=>{\r\n                    auxSales.push(i)\r\n                })\r\n            }\r\n            const auxMeses = ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic']\r\n            const arr1Meses = auxMeses.slice(mesInicio+1);\r\n            const arr2Meses = auxMeses.slice(0,mesInicio+1);\r\n            const arr1Sales = auxSales.slice(mesInicio+1);\r\n            const arr2Sales = auxSales.slice(0,mesInicio+1);\r\n            \r\n            arr1Meses.map(i=>{\r\n                labelsUltimoAnio.push(i)\r\n            })\r\n            arr2Meses.map(i=>{\r\n                labelsUltimoAnio.push(i)\r\n            })\r\n            arr1Sales.map(i=>{\r\n                sales.push(i)\r\n            })\r\n            arr2Sales.map(i=>{\r\n                sales.push(i)\r\n            })\r\n\r\n        }\r\n        // Define la configuración del gráfico\r\n        \r\n        const options = {\r\n            labels:labelsUltimoAnio,\r\n            theme:{\r\n                mode:'dark',\r\n                palette:'palette2'\r\n            },\r\n            stroke: {\r\n                curve: 'smooth'\r\n            },\r\n            grid: {\r\n                row: {\r\n                colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\r\n                opacity: 0.5\r\n                },\r\n            },\r\n            tooltip:{\r\n                y:{\r\n                    formatter: val=> `$ ${formatMoney(val)}`\r\n                }\r\n            },\r\n            dataLabels:{\r\n                dropShadow: {\r\n                    enabled: true,\r\n                    left: 2,\r\n                    top: 2,\r\n                    opacity: 0.5\r\n                },\r\n                formatter: val=> `$ ${formatMoney(val)}`\r\n            },\r\n            yaxis:{\r\n                labels:{\r\n                    show:false\r\n                }\r\n            }\r\n        };\r\n        const series=[{\r\n            name:'Compras',\r\n            data:sales\r\n        }\r\n        ]\r\n    \r\n        // Renderiza el gráfico\r\n        return (\r\n            <Card>\r\n                <CardHeader\r\n                    subheader='Ventas - Ultimos 12 Meses'\r\n                />\r\n                <CardContent>\r\n                    <ApexCharts options={options} type='area' series={series} width={850} height={275}/>\r\n                </CardContent>\r\n            </Card>)\r\n    }\r\n    // FILTRADO DE INFORMACION \r\n    useEffect(()=>{\r\n        setLoading(true)\r\n        const years = {};\r\n        const keyProveedor = checkSearch(props.location.search)\r\n        if(props.proveedores[keyProveedor].entregas){\r\n            Object.keys(props.proveedores[keyProveedor].entregas).reverse().forEach((entrega) => {\r\n                const year = props.proveedores[keyProveedor].entregas[entrega].fecha.split('/')[2];\r\n                const month = props.proveedores[keyProveedor].entregas[entrega].fecha.split('/')[1];\r\n            \r\n                // Si aún no tenemos el año en el objeto \"years\", lo agregamos\r\n                if (!years[year]) {\r\n                    years[year] = { total: 0, months: {\r\n                        1:{ total: 0, entregas: [] },\r\n                        2:{ total: 0, entregas: [] },\r\n                        3:{ total: 0, entregas: [] },\r\n                        4:{ total: 0, entregas: [] },\r\n                        5:{ total: 0, entregas: [] },\r\n                        6:{ total: 0, entregas: [] },\r\n                        7:{ total: 0, entregas: [] },\r\n                        8:{ total: 0, entregas: [] },\r\n                        9:{ total: 0, entregas: [] },\r\n                        10:{ total: 0, entregas: [] },\r\n                        11:{ total: 0, entregas: [] },\r\n                        12:{ total: 0, entregas: [] }\r\n                    }}\r\n                }\r\n            \r\n                // Agregamos la compra al objeto \"compras\" del mes correspondiente\r\n                years[year].months[month].entregas.push(props.proveedores[keyProveedor].entregas[entrega]);\r\n            \r\n                // Actualizamos el total del mes y del año\r\n                years[year].months[month].total += parseInt(props.proveedores[keyProveedor].entregas[entrega].total?props.proveedores[keyProveedor].entregas[entrega].total:0);\r\n                years[year].total += parseInt(props.proveedores[keyProveedor].entregas[entrega].total?props.proveedores[keyProveedor].entregas[entrega].total:0);\r\n            });\r\n    \r\n            const sortedEntregas = Object.entries(years).sort(([year1], [year2]) => year2 - year1);\r\n            setFilteredEntregas(sortedEntregas)\r\n        }\r\n        setTimeout(() => {\r\n            setLoading(false)\r\n        }, 500);\r\n    },[props.proveedores])\r\n\r\n    // FUNCTIONS\r\n    const eliminarProveedor = () =>{\r\n        setLoading(true)\r\n        database().ref().child(props.user.uid).child('proveedores').child(proveedor.datos.nombre).remove()\r\n        .then(()=>{\r\n            setshowSnackbar('El Proveedor Se Elimino Correctamente')\r\n            setTimeout(() => {\r\n                setLoading(false)\r\n            }, 2000);\r\n        })\r\n        .catch(()=>{\r\n            setLoading(false)\r\n        })\r\n        props.history.replace('/Proveedores')\r\n    }\r\n    const eliminarPedido = (id) =>{\r\n        setLoading(true)\r\n        database().ref(`${props.user.uid}/proveedores/${proveedor.datos.nombre}/pedidos/${id}`).remove()\r\n        .then(()=>{\r\n            setshowSnackbar(true)\r\n            setTimeout(() => {\r\n                setshowSnackbar(false)\r\n                setLoading(false)\r\n            }, 2000);\r\n        })\r\n        .catch(()=>{\r\n            setLoading(false)\r\n        })\r\n    }\r\n    return(\r\n        proveedor?\r\n            <Layout history={props.history} page={`${proveedor.datos.nombre}`} user={props.user.uid}>\r\n                {/* CONTENT */}\r\n                <Paper className={classes.content}>\r\n                    <Grid container justify='center' spacing={4}>\r\n                        <Detalles {...proveedor.datos}/>\r\n                        {!loading && filteredEntregas?\r\n                            <Grid container item xs={12} justify='center' spacing={4}>\r\n                                <Grid container item xs={12}>\r\n                                    <Deuda deuda={proveedor.datos.deuda} id={proveedor.datos.nombre} generateChartDeudas={generateChartDeudas}/>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Paper>\r\n                                        {generateChartProductos()}\r\n                                    </Paper>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Paper>\r\n                                        {generateChartAnualSales()}\r\n                                    </Paper>\r\n                                </Grid>\r\n                            </Grid>\r\n                            :\r\n                            null\r\n                        }\r\n                        <ListaDePedidos pedidos={filteredEntregas} eliminarPedido={eliminarPedido} searchPedido={searchEntrega} tipo='entrega'/>\r\n                        <Grid item xs={12} sm={8}>\r\n                            <Grid container item xs={12} justify='space-around' alignItems='flex-end'>\r\n                                <Link to={{\r\n                                    pathname: '/Editar-Proveedor',\r\n                                    search:proveedor.datos.nombre\r\n                                }}>\r\n                                    <IconButton>\r\n                                        <EditOutlined/>\r\n                                    </IconButton>\r\n                                </Link>\r\n                                <IconButton onClick={()=>{setshowDialogConfirmDelete(true)}}>\r\n                                    <DeleteOutline color='error'/>\r\n                                </IconButton>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n                {/* BACKDROP */}\r\n                <Backdrop className={classes.backdrop} open={loading}>\r\n                    {showSnackbar?\r\n                        <Snackbar open={showSnackbar} autoHideDuration={2000} onClose={()=>{setshowSnackbar(false)}}>\r\n                            <Alert onClose={()=>{setshowSnackbar(false)}} severity=\"error\" variant='filled'>\r\n                                El Proveedor ha sido eliminado!\r\n                            </Alert>\r\n                        </Snackbar>\r\n                        :\r\n                        <CircularProgress color=\"inherit\" />\r\n                    }\r\n                </Backdrop>\r\n                <DialogConfirmDelete open={showDialogConfirmDelete} setOpen={setshowDialogConfirmDelete} eliminarCliente={eliminarProveedor}/>\r\n            </Layout>\r\n            :\r\n            <>\r\n                {props.history.replace('/Proveedores')}\r\n            </>\r\n    )\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        proveedores:state.proveedores\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Proveedor)","import React, {useState} from 'react'\r\nimport {Grid,Card,IconButton,Menu,Typography,MenuItem,CardHeader} from '@material-ui/core'\r\nimport { MoreVert } from '@material-ui/icons'\r\nimport {Link} from 'react-router-dom'\r\nimport {content} from '../../Pages/styles/styles'\r\n\r\n\r\nexport const CardExpreso = ({datos,search}) =>{\r\n    const classes = content()\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    //Menu More\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\nreturn(\r\n        <Grid item xs={8} sm={6} md={4} lg={3} className={!search?null:datos.nombre.toLowerCase().search(search.toLowerCase()) == -1 ? classes.displayNone:classes.display}>\r\n            <Link \r\n                style={{color:'#fff',textDecoration:'none'}}\r\n                to={{\r\n                pathname:'/Expreso',\r\n                search:`${datos.nombre}`\r\n            }}>\r\n                <Card className={classes.cardCliente}>\r\n                    <CardHeader\r\n                        title={\r\n                            <Typography variant=\"h5\" className={classes.titleCardCliente}>\r\n                                {datos.nombre}\r\n                            </Typography>\r\n                        }/>\r\n                </Card>\r\n        </Link>\r\n    </Grid>\r\n    )\r\n}\r\n            ","import React,{useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {makeStyles,Paper,ListItem,Card,CardContent,Typography,TextField,List,Grid,Chip,IconButton,Link as LinkComponent} from '@material-ui/core'\r\nimport {AttachMoney,PersonAdd} from '@material-ui/icons'\r\nimport {Link} from 'react-router-dom'\r\nimport {content} from './styles/styles'\r\nimport {CardExpreso} from '../components/Expresos/CardExpreso'\r\nimport Empty from '../images/Empty.png'\r\n// COMPONENT\r\nconst Expresos=(props)=>{\r\n    const classes = content()\r\n    let [search,setSearch]=useState('')\r\n\r\n    return(\r\n        <Layout history={props.history} page=\"Expresos\" user={props.user.uid}>\r\n            <Paper className={classes.content}>\r\n                <Grid container spacing={4} >\r\n\r\n                    {/* SEARCH BAR */}\r\n                    <Grid container item xs={12} justify='center' alignItems='center'>\r\n                        <Grid item>\r\n                            <Link \r\n                                to='/Nuevo-Expreso'>\r\n                                <IconButton>\r\n                                    <PersonAdd/>\r\n                                </IconButton>\r\n                            </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <TextField\r\n                                value={search}\r\n                                onChange={e=>{\r\n                                    setSearch(e.target.value)\r\n                                }}\r\n                                disabled={!props.expresos}\r\n                                label='Buscar Expreso'\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                    {/* EXPRESOS LIST */}\r\n                    <Grid container item xs={12} justify='center' alignItems='center' spacing={2} >\r\n                        {props.expresos?\r\n                            Object.keys(props.expresos).map(key=>(\r\n                                <CardExpreso datos={props.expresos[key].datos} search={search}/>\r\n                            ))\r\n                            :\r\n                            <>\r\n                                <Grid item>\r\n                                    <img src={Empty} alt=\"\" height='500px'/>\r\n                                </Grid>\r\n                                <Grid container item xs={12} justify='center'>\r\n                                    <Typography variant='h4'>No hay Expresos Ingresados</Typography>\r\n                                </Grid>\r\n                            </>\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </Layout>\r\n    )\r\n}\r\n//REDUX STATE TO PROPS\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        expresos:state.expresos\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Expresos)","import React,{useState} from 'react'\r\nimport {Dialog,DialogTitle,DialogActions,DialogContent,Button,TextField} from '@material-ui/core'\r\nimport { obtenerFecha } from '../../../utilities'\r\n\r\n\r\nexport const DialogAsentarInconveniente = ({open,setOpen,asentarInconveniente}) =>{\r\n    const [descripcion,setDescripcion] = useState(undefined)\r\n\r\n    return(\r\n        <Dialog open={open} maxWidth='md' fullWidth={true}>\r\n            <DialogTitle>\r\n                Ingresar Inconveniente\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Descripcion\"\r\n                    style={{ margin: 8 }}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    value={descripcion}\r\n                    onChange={(e)=>{setDescripcion(e.target.value)}}\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button \r\n                    autoFocus\r\n                    onClick={()=>{\r\n                        setOpen(false)\r\n                    }}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n                <Button\r\n                    color='error'\r\n                    disabled={!descripcion}\r\n                    onClick={()=>{\r\n                        setOpen(false)\r\n                        asentarInconveniente({descripcion:descripcion,fecha:obtenerFecha()})\r\n                    }}\r\n                >\r\n                    Asentar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React, {useState,useEffect} from 'react'\r\nimport {Grid,Card,CardContent,IconButton,Typography,Chip,Button,CardHeader,Paper,Menu,MenuItem,Collapse, List,ListItem, ListItemText,Switch,FormControlLabel, CardActions} from '@material-ui/core'\r\nimport {MoreVert,AttachMoney,ExpandMore,ExpandLess} from '@material-ui/icons'\r\nimport {Link} from 'react-router-dom'\r\nimport {Alert} from '@material-ui/lab'\r\nimport {formatMoney, obtenerFecha} from '../../utilities'\r\nimport {content} from '../../Pages/styles/styles'\r\nimport {DialogAsentarInconveniente} from './Dialogs/DialogAsentarInconveniente'\r\n\r\nexport const CardEnvio = ({envio,search,asentarLlegada,asentarResolucionInconveniente,asentarInconveniente}) =>{\r\n    const classes = content()\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [expanded, setExpanded] = useState(false);\r\n    const [showDialogAsentarInconveniente, setshowDialogAsentarInconveniente] = useState(false);\r\n\r\n    //Menu More\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    return(\r\n        <Grid item xs={11} sm={8} md={6} lg={4} className={!search?null:envio.remito.search(search) == -1 ? classes.displayNone:classes.display} >\r\n            <Card>\r\n                <Paper elevation={3} className={envio.fechaDeLlegada?classes.cardEnvioHeaderSuccess:(envio.inconveniente?classes.cardEnvioHeaderWarning:classes.cardEnvioHeader)}>\r\n                    <CardHeader\r\n                        className={classes.header}\r\n                        action={\r\n                            <>\r\n                                <IconButton onClick={()=>{setExpanded(!expanded)}}>\r\n                                    {expanded?\r\n                                        <ExpandLess className={envio.fechaDeLlegada?classes.cardEnvioHeaderIconSuccess:(envio.inconveniente?classes.cardEnvioHeaderIconWarning:null)}/>\r\n                                        :\r\n                                        <ExpandMore className={envio.fechaDeLlegada?classes.cardEnvioHeaderIconSuccess:(envio.inconveniente?classes.cardEnvioHeaderIconWarning:null)}/>\r\n                                    }\r\n                                </IconButton>\r\n                                {!envio.fechaDeLlegada?\r\n                                    <>\r\n                                        <IconButton aria-label=\"settings\" onClick={handleClick} className={envio.fechaDeLlegada?classes.cardEnvioHeaderIconSuccess:(envio.inconveniente?classes.cardEnvioHeaderIconWarning:null)}>\r\n                                            <MoreVert/>\r\n                                        </IconButton>\r\n                                        <Menu\r\n                                            id=\"simple-menu\"\r\n                                            anchorEl={anchorEl}\r\n                                            keepMounted\r\n                                            open={Boolean(anchorEl)}\r\n                                            onClose={handleClose}\r\n                                        >\r\n                                            {!envio.fechaDeLlegada?\r\n                                                <MenuItem onClick={()=>{\r\n                                                    handleClose()\r\n                                                    asentarLlegada()\r\n                                                }}>Asentar llegada</MenuItem>\r\n                                                :\r\n                                                null\r\n                                            }\r\n                                            {!envio.inconveniente && !envio.fechaDeLlegada ?\r\n                                                <MenuItem \r\n                                                    className={classes.deleteButton}\r\n                                                    onClick={()=>{\r\n                                                        handleClose()\r\n                                                        setshowDialogAsentarInconveniente(true)\r\n                                                        //asentarInconveniente({descripcion:'Se pedieron 10 Tapas',fecha:obtenerFecha()})\r\n                                                    }}>\r\n                                                    Asentar Inconveniente\r\n                                                </MenuItem>\r\n                                                :\r\n                                                null\r\n                                            }\r\n                                            {envio.inconveniente && !envio.resolucionInconveniente ?\r\n                                                <MenuItem \r\n                                                    className={classes.deleteButton}\r\n                                                    onClick={()=>{\r\n                                                        handleClose()\r\n                                                        asentarResolucionInconveniente({fecha:obtenerFecha()})\r\n                                                    }}>\r\n                                                    Inconveniente Resuelto\r\n                                                </MenuItem>\r\n                                                :\r\n                                                null\r\n                                            }\r\n                                        </Menu>\r\n                                    </>\r\n                                    :\r\n                                    null\r\n                                }\r\n                            </>\r\n                        }\r\n                        title={\r\n                            <Grid container xs={12} justify='flex-start' spacing={3}>\r\n                                <Grid item>\r\n                                    <Link \r\n                                        style={{color:'#fff',textDecoration:'none'}}\r\n                                        className={envio.fechaDeLlegada?classes.cardEnvioHeaderTextSuccess:(envio.inconveniente?classes.cardEnvioHeaderTextWarning:null)}\r\n                                        to={{pathname:'/Cliente',search:`${envio.cliente}`}\r\n                                    }>\r\n                                        {envio.cliente}\r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                        }\r\n                        subheader={\r\n                            <Link \r\n                                style={{color:'#fff',textDecoration:'none'}}\r\n                                className={envio.fechaDeLlegada?classes.cardEnvioHeaderTextSuccess:(envio.inconveniente?classes.cardEnvioHeaderTextWarning:null)}\r\n                                to={{pathname:'/Cliente',search:`${envio.cliente}`,props:{remito:envio.id}}}>\r\n                                Remito Nº {envio.remito}\r\n                            </Link>\r\n                        }\r\n                    />\r\n                </Paper>\r\n                <Collapse in={expanded} timeout='auto' unmountOnExit>\r\n                    <CardContent>\r\n                        <Grid container xs={12} justify='center' spacing={3}>\r\n                            {envio.fechaDeLlegada?\r\n                                <Grid container item xs={12}>\r\n                                    <Alert variant=\"filled\" severity=\"success\" className={classes.alertCheque}>\r\n                                        El paquete llego a destino el {envio.fechaDeLlegada}\r\n                                    </Alert>\r\n                                </Grid>\r\n                                :\r\n                                null\r\n                            }\r\n                            {envio.resolucionInconveniente?\r\n                                <Grid container item xs={12}>\r\n                                    <Alert variant=\"filled\" severity=\"success\" className={classes.alertCheque}>\r\n                                        El {envio.resolucionInconveniente.fecha} se resolvio el inconveniente\r\n                                    </Alert>\r\n                                </Grid>\r\n                                :\r\n                                null\r\n                            }\r\n                            {envio.inconveniente?\r\n                                <Grid container item xs={12}>\r\n                                    <Alert variant=\"filled\" severity=\"warning\" className={classes.alertEnvioInconveniente}>\r\n                                        El {envio.inconveniente.fecha} {envio.inconveniente.descripcion}\r\n                                    </Alert>\r\n                                </Grid>\r\n                                :\r\n                                null\r\n                            }\r\n                        </Grid>\r\n                        <List>\r\n                            <ListItem>\r\n                                <ListItemText primary={envio.fecha} secondary='Fecha de Salida'/>\r\n                            </ListItem>\r\n                        </List>\r\n                    </CardContent>\r\n                </Collapse>\r\n            </Card>\r\n            <DialogAsentarInconveniente open={showDialogAsentarInconveniente} setOpen={setshowDialogAsentarInconveniente} asentarInconveniente={asentarInconveniente}/>\r\n        </Grid>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\nimport {Grid,Card,TextField,TableRow,TableHead,TableCell,TableBody,List,ListItem,ListItemText,makeStyles,Paper,IconButton,Menu,MenuItem,Dialog,DialogTitle,DialogContent,DialogActions,Button,Typography} from '@material-ui/core'\r\nimport {Clear, MoreVert} from '@material-ui/icons'\r\nimport {Link} from 'react-router-dom'\r\nimport {CardEnvio} from './CardEnvio'\r\nimport {content} from '../../Pages/styles/styles'\r\nimport Empty from '../../images/Empty.png'\r\n\r\n{/* COMPONENT */}\r\nexport const ListaDeEnvios = ({envios,search,setSearch,asentarLlegada,asentarInconveniente,asentarResolucionInconveniente}) =>{\r\n    const classes = content()\r\n\r\n    // CONTENT\r\n    return(\r\n        <Grid container justify='center' alignItems='center' spacing={3}>\r\n        {envios?\r\n                <>\r\n                    <Grid container item xs={12} justify='center'>\r\n                        <Typography variant='h4'>\r\n                            Lista de Envios\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid container item xs={12} justify='center' alignItems='center'>\r\n                        <Grid item>\r\n                            <TextField\r\n                                value={search}\r\n                                onChange={e=>{\r\n                                    setSearch(e.target.value)\r\n                                }}\r\n                                label='Remito'\r\n                                />\r\n                        </Grid>\r\n                        {search?\r\n                            <Grid item>\r\n                                <IconButton onClick={()=>{setSearch('')}}>\r\n                                    <Clear/>\r\n                                </IconButton>\r\n                            </Grid>\r\n                            :\r\n                            null\r\n                        }\r\n                    </Grid>\r\n\r\n                    {/* LIST */}\r\n                    <Grid container item xs={12} justify='center' spacing= {3}>\r\n                        {Object.keys(envios).reverse().map(envio=>(\r\n                            <>\r\n                                <CardEnvio\r\n                                    search={search}\r\n                                    envio={envios[envio]}\r\n                                    asentarInconveniente={(inconveniente)=>{asentarInconveniente(envio,inconveniente)}}\r\n                                    asentarResolucionInconveniente={(inconveniente)=>{asentarResolucionInconveniente(envio,inconveniente)}}\r\n                                    asentarLlegada={()=>{asentarLlegada(envio)}}\r\n                                    success={Boolean(envios[envio].fechaDeLlegada)}\r\n                                />\r\n                            </>\r\n                        ))}\r\n                    </Grid>\r\n                </>\r\n                :\r\n                <Grid container xs={12} justify='center' spacing={2}>\r\n                    <Grid item>\r\n                        <img src={Empty} alt=\"\" height='600px'/>\r\n                    </Grid>\r\n                    <Grid container item xs={12} justify='center'>\r\n                        <Typography variant='h5'>El Expreso No Hizo Ningun Envio</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            }\r\n        </Grid>\r\n    )\r\n}","import React,{useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {makeStyles,Paper,Grid,List,Typography,IconButton,Backdrop,Snackbar,CircularProgress} from '@material-ui/core'\r\nimport {Alert} from '@material-ui/lab'\r\nimport {EditOutlined,DeleteOutline} from '@material-ui/icons'\r\nimport {Deuda} from '../components/Cliente/Deuda'\r\nimport {ListaDeEnvios} from '../components/Expreso/ListaDeEnvios'\r\nimport {Detalles} from '../components/Cliente/Detalles'\r\nimport {DialogConfirmDelete} from '../components/Cliente/DialogConfirmDelete'\r\nimport {database} from 'firebase'\r\nimport {Link} from 'react-router-dom'\r\nimport {content} from './styles/styles'\r\nimport {checkSearch, obtenerFecha} from '../utilities'\r\nimport { useEffect } from 'react'\r\n\r\n// COMPONENT\r\nconst Expreso=(props)=>{\r\n    const classes = content()\r\n    const [expreso,setExpreso]= useState(props.expresos[checkSearch(props.history.location.search)])\r\n    const [search, setSearch] = useState(props.location.props?props.location.props.remito:'');\r\n    const [showSnackbar, setshowSnackbar] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [showDialogConfirmDelete, setshowDialogConfirmDelete] = useState(false);\r\n    \r\n\r\n    // FUNCTIONS\r\n    const eliminarExpreso = () =>{\r\n        setLoading(true)\r\n        database().ref().child(props.user.uid).child('expresos').child(expreso.datos.nombre).remove()\r\n        .then(()=>{\r\n            setshowSnackbar('El Expreso Se Elimino Correctamente')\r\n            setTimeout(() => {\r\n            }, 2000);\r\n        })\r\n        .catch(()=>{\r\n            setLoading(false)\r\n        })\r\n        props.history.replace('/Expresos')\r\n    }\r\n    const asentarLlegada = (key) =>{\r\n        setLoading(true)\r\n        console.log(key)\r\n        database().ref().child(props.user.uid).child('expresos').child(expreso.datos.nombre).child('envios').child(key).update({fechaDeLlegada:obtenerFecha()}).then(()=>{\r\n            setshowSnackbar('El Pedido llego a Destino!')\r\n            setTimeout(() => {\r\n                setLoading(false)\r\n            }, 2000);\r\n        })\r\n        .catch(()=>{\r\n            setLoading(false)\r\n        })\r\n    }\r\n    const asentarInconveniente = (key,inconveniente) =>{\r\n        setLoading(true)\r\n        console.log(key)\r\n        console.log(inconveniente)\r\n        database().ref().child(props.user.uid).child('expresos').child(expreso.datos.nombre).child('envios').child(key).update({inconveniente:inconveniente}).then(()=>{\r\n            setshowSnackbar('Se Asento el Inconveniente!')\r\n            setTimeout(() => {\r\n                setLoading(false)\r\n            }, 2000);\r\n        })\r\n        .catch(()=>{\r\n            setLoading(false)\r\n        })\r\n    }\r\n    const asentarResolucionInconveniente = (key,inconveniente) =>{\r\n        setLoading(true)\r\n        database().ref().child(props.user.uid).child('expresos').child(expreso.datos.nombre).child('envios').child(key).update({resolucionInconveniente:inconveniente}).then(()=>{\r\n            setshowSnackbar('Se Asento La Resolucion del Inconveniente!')\r\n            setTimeout(() => {\r\n                setLoading(false)\r\n            }, 2000);\r\n        })\r\n        .catch(()=>{\r\n            setLoading(false)\r\n        })\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        setExpreso(props.expresos[checkSearch(props.history.location.search)])\r\n    },[props.expresos])\r\n    return(\r\n        expreso?\r\n            <Layout history={props.history} page={`${expreso.datos.nombre}`} user={props.user.uid}>\r\n                {/* CONTENT */}\r\n                <Paper className={classes.content}>\r\n                    <Grid container justify='center' spacing={4}>\r\n                        <Detalles {...expreso.datos}/>\r\n                        <ListaDeEnvios envios={expreso.envios} search={search} setSearch={setSearch} asentarLlegada={asentarLlegada} asentarInconveniente={asentarInconveniente} asentarResolucionInconveniente={asentarResolucionInconveniente}/>\r\n                        <Grid item xs={12} sm={8} >\r\n                            <Link to={{\r\n                                pathname: '/Editar-Expreso',\r\n                                search:expreso.datos.nombre\r\n                            }}>\r\n                                <IconButton>\r\n                                    <EditOutlined/>\r\n                                </IconButton>\r\n                            </Link>\r\n                            <IconButton onClick={()=>{setshowDialogConfirmDelete(true)}}>\r\n                                <DeleteOutline color='error'/>\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </Paper>\r\n                \r\n                {/* BACKDROP - SNACKBAR - DIALOGS */}\r\n                <Backdrop className={classes.backdrop} open={loading}>\r\n                    <Snackbar open={showSnackbar} autoHideDuration={2000} onClose={()=>{setshowSnackbar('')}}>\r\n                        <Alert onClose={()=>{setshowSnackbar('')}} severity=\"success\" variant='filled'>\r\n                            {showSnackbar}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </Backdrop>\r\n                <DialogConfirmDelete open={showDialogConfirmDelete} setOpen={setshowDialogConfirmDelete} eliminarCliente={eliminarExpreso}/>\r\n            </Layout>\r\n            :\r\n            <>\r\n            {props.history.replace('/Expresos')}\r\n            </>\r\n            )\r\n        }\r\n\r\n        //REDUX STATE TO PROPS\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        expresos:state.expresos\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Expreso)","import React,{useState, useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {Chip,Paper,ListItem,Card,Button,StepContent,Backdrop,StepLabel,Grid,Step,Stepper,Link as LinkComponent,Snackbar,CircularProgress} from '@material-ui/core'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {Step as StepComponent} from '../components/Nuevo-Cliente/Step'\r\nimport {FormDetalles} from '../components/Nuevo-Cliente/FormDetalles'\r\nimport { ContactMail, LocalShipping, Mail, PeopleAlt, Phone, Room } from '@material-ui/icons';\r\nimport {checkSearch} from '../utilities'\r\nimport {database} from 'firebase'\r\nimport {content} from './styles/styles'\r\n\r\nconst NuevoExpreso=(props)=>{\r\n    const classes = content()\r\n    const [nombre,setnombre]=useState(undefined)\r\n    const [dni,setdni]=useState(undefined)\r\n    const [cuit,setcuit]=useState(undefined)\r\n    const [mails,setmails]=useState([])\r\n    const [direcciones,setdirecciones]=useState([])  \r\n    const [telefonos,settelefonos]=useState([])\r\n    const [infoExtra,setinfoExtra]=useState([])\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [showSnackbar, setshowSnackbar] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const steps = getSteps();\r\n\r\n    // STEPPER NAVIGATION\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    }\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    }\r\n    function getSteps() {\r\n        return ['Detalles', 'Direcciones', 'Telefonos','Mails','Informacion Extra'];\r\n    }\r\n    function getStepContent(step) {\r\n      switch (step) {\r\n        case 0:\r\n          return (\r\n                <FormDetalles\r\n                    nombre={nombre} \r\n                    setnombre={setnombre}\r\n                    dni={dni} \r\n                    setdni={setdni}\r\n                    cuit={cuit} \r\n                    setcuit={setcuit}\r\n                />\r\n          );\r\n        case 1:\r\n          return (\r\n            <StepComponent \r\n                datos={direcciones} \r\n                setDatos={setdirecciones}\r\n                tipoDeDato='Direcciones'\r\n            /> \r\n          );\r\n        case 2:\r\n          return (\r\n            <StepComponent\r\n                datos={telefonos} \r\n                setDatos={settelefonos}\r\n                tipoDeDato='Telefonos'\r\n            />\r\n          );\r\n          case 3:\r\n              return (\r\n                <StepComponent\r\n                  datos={mails} \r\n                  setDatos={setmails}\r\n                  tipoDeDato='Mails'\r\n                />\r\n            );\r\n            case 4:\r\n                return (\r\n                <StepComponent\r\n                    datos={infoExtra} \r\n                    setDatos={setinfoExtra}\r\n                    tipoDeDato='Info Extra'\r\n                />\r\n            );\r\n      }\r\n    }\r\n    function getStepLabel(label,index) {\r\n        switch (index) {\r\n            case 0:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<PeopleAlt/>} \r\n                            label={label}  \r\n                            onClick={()=>{if(nombre){setActiveStep(index)}}}\r\n                            variant='default'\r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n            case 1:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<Room/>} \r\n                            label={label}  \r\n                            onClick={()=>{if(nombre){setActiveStep(index)}}}\r\n                            variant='default'\r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n            case 2:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<Phone/>} \r\n                            label={label}  \r\n                            onClick={()=>{if(nombre){setActiveStep(index)}}}\r\n                            variant='default'\r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n            case 3:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<Mail/>} \r\n                            label={label}  \r\n                            onClick={()=>{if(nombre){setActiveStep(index)}}}\r\n                            variant='default'\r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n            case 4:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<LocalShipping/>} \r\n                            label={label}  \r\n                            onClick={()=>{if(nombre){setActiveStep(index)}}}\r\n                            variant='default'\r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n            case 5:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<ContactMail/>} \r\n                            label={label}  \r\n                            onClick={()=>{if(nombre){setActiveStep(index)}}}\r\n                            variant='default'\r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n        }\r\n    }\r\n\r\n    //FUNCTIONS\r\n    const guardarDatos = () =>{\r\n        setLoading(true)\r\n        let aux={[nombre]:{\r\n            datos:{\r\n                nombre:nombre,\r\n                dni:dni?dni:null,\r\n                cuit:cuit?cuit:null,\r\n                direcciones:direcciones?direcciones:null,\r\n                telefonos:telefonos?telefonos:null,\r\n                mails:mails?mails:null,\r\n                infoExtra:infoExtra?infoExtra:null,\r\n            },\r\n        }}\r\n        if(props.history.location.search){\r\n            let newAux = props.expresos[checkSearch(props.history.location.search)]\r\n            newAux['datos']=aux[nombre].datos\r\n            console.log(newAux)\r\n            // COPIA PEDIDOS E HISTORIAL\r\n            database().ref().child(props.user.uid).child('expresos').child(props.history.location.search.slice(1)).remove()\r\n            .then(()=>{\r\n                database().ref().child(props.user.uid).child('expresos').child(nombre).update(newAux)\r\n                .then(()=>{\r\n                    setshowSnackbar(props.history.location.search?'El Expreso Se Edito Correctamente!':'El Expreso Se Agrego Correctamente!')\r\n                        setTimeout(() => {\r\n                            setLoading(false)\r\n                            props.history.replace(`/Expreso?${nombre}`)\r\n                        }, 2000);\r\n                })\r\n                .catch(()=>{\r\n                    setLoading(false)\r\n                })\r\n            })\r\n            .catch(()=>{\r\n                setLoading(false)\r\n            })\r\n        }\r\n        else{\r\n            database().ref().child(props.user.uid).child('expresos').update(aux)\r\n                .then(()=>{\r\n                    setshowSnackbar(props.history.location.search?'El Expreso Se Edito Correctamente!':'El Expreso Se Agrego Correctamente!')\r\n                    setTimeout(() => {\r\n                        props.history.replace(`/Expreso?${nombre}`)\r\n                    }, 2000);\r\n                })\r\n                .catch(()=>{\r\n                    setLoading(false)\r\n                })\r\n        }\r\n        }\r\n\r\n    // VALIDACION EDITAR EXPRESO\r\n    useEffect(()=>{\r\n        if(props.history.location.search){\r\n            const {nombre,dni,cuit,mails,direcciones,telefonos,infoExtra} = props.expresos[checkSearch(props.history.location.search)].datos\r\n            nombre&&setnombre(nombre)\r\n            dni&&setdni(dni)\r\n            cuit&&setcuit(cuit)\r\n            mails&&setmails(mails)\r\n            direcciones&&setdirecciones(direcciones)\r\n            telefonos&&settelefonos(telefonos)\r\n            infoExtra&&setinfoExtra(infoExtra)\r\n        }\r\n    },[])\r\n    return(\r\n        <Layout history={props.history} page={props.history.location.search?'Editar Expreso':'Nuevo Expreso'} user={props.user.uid} blockGoBack={true}>\r\n            {/* CONTENT */}\r\n            <Paper className={classes.content}>\r\n                {/* STEPPER */}\r\n                <Stepper orientation='vertical' activeStep={activeStep} className={classes.stepper}>\r\n                    {steps.map((label,index)=>(\r\n                        <Step>\r\n                            {getStepLabel(label,index)}\r\n                            <StepContent>\r\n                                <Grid container xs={12} justify='center' spacing={3}>\r\n                                    {getStepContent(index)}\r\n                                    <Grid container item xs={12} justify='center' spacing={3}>\r\n                                        <Grid item>\r\n                                            <Button\r\n                                                disabled={activeStep===0}\r\n                                                onClick={handleBack}\r\n                                            >\r\n                                                Volver\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                disabled={!nombre}\r\n                                                onClick={activeStep === steps.length - 1 ? guardarDatos : handleNext}\r\n                                            >\r\n                                                {activeStep === steps.length - 1 ? `${props.history.location.search?'Guardar Edicion':'Guardar Expreso'}` : 'Siguiente'}\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        {activeStep !== steps.length -1?\r\n                                            <Grid item>\r\n                                                <Button\r\n                                                    variant=\"outlined\"\r\n                                                    color=\"light\"\r\n                                                    disabled={!nombre}\r\n                                                    onClick={()=>{setActiveStep(steps.length)}}\r\n                                                    className={classes.button}\r\n                                                >\r\n                                                    Finalizar\r\n                                                </Button>\r\n                                            </Grid>\r\n                                            :\r\n                                            null\r\n                                        }\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </StepContent>\r\n                        </Step>\r\n                    ))}\r\n                </Stepper>\r\n\r\n                {/* PREVIEW */}\r\n                {activeStep === steps.length && (\r\n                    <Grid container justify='center'>\r\n                        <Paper elevation={6}>\r\n                            <Button  onClick={handleBack}>\r\n                                Atras     \r\n                            </Button>\r\n                            <Button variant='contained'  onClick={guardarDatos} className={classes.button}>\r\n                                {props.history.location.search?'Guardar Edicion':'Guardar Expreso'}     \r\n                            </Button>\r\n                        </Paper>\r\n                    </Grid>\r\n                )}\r\n\r\n            </Paper>\r\n            {/* BACKDROP & SNACKBAR */}\r\n            <Backdrop className={classes.backdrop} open={loading}>\r\n                <CircularProgress color=\"inherit\" />\r\n                <Snackbar open={showSnackbar} autoHideDuration={2000} onClose={()=>{setshowSnackbar('')}}>\r\n                    <Alert severity=\"success\" variant='filled'>\r\n                        {showSnackbar}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </Backdrop>\r\n        </Layout>\r\n    )\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        expresos:state.expresos,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(NuevoExpreso)","import React from 'react'\r\nimport {Grid,Paper,Typography,ListItem,ListItemText,ListItemSecondaryAction,IconButton,makeStyles,TableContainer,Table,TableCell,TableRow,TableHead,TableBody} from '@material-ui/core'\r\nimport {EditOutlined,DeleteOutlineOutlined} from '@material-ui/icons'\r\nimport {formatMoney} from '../../utilities'\r\nimport {content} from '../../Pages/styles/styles'\r\nimport Empty from '../../images/Empty.png'\r\n\r\nexport const Productos = ({productos,seteditIndex,showDialog,openDialogDelete}) =>{\r\n    const classes = content()\r\n    const openDialog = index =>{\r\n        seteditIndex(index)\r\n        showDialog()\r\n    }\r\n    return (\r\n        productos.length?\r\n            <Grid container item xs={12} md={8} alignItems='center' justify='center'>\r\n                <TableContainer component={Paper}>\r\n                    <Table aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell className={classes.titleDetallesCard}>Producto</TableCell>\r\n                                <TableCell className={classes.titleDetallesCard} align=\"right\">Cantidad</TableCell>\r\n                                <TableCell className={classes.titleDetallesCard} align=\"right\">Precio Unitario</TableCell>\r\n                                <TableCell className={classes.titleDetallesCard} align=\"right\">Precio Total</TableCell>\r\n                                <TableCell className={classes.titleDetallesCard} align=\"right\">Descuento/Aumento</TableCell>\r\n                                <TableCell className={classes.titleDetallesCard} align=\"right\" padding='checkbox'></TableCell>\r\n                                <TableCell className={classes.titleDetallesCard} align=\"right\" padding='checkbox'></TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {productos.map((producto,i)=>(\r\n                                <TableRow key={producto.producto}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {producto.producto}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">{producto.cantidad}</TableCell>\r\n                                    <TableCell align=\"right\">$ {formatMoney(producto.precio)}</TableCell>\r\n                                    <TableCell align=\"right\">$ {formatMoney(producto.total)}</TableCell>\r\n                                    <TableCell align=\"right\">{producto.discount?`-${producto.discount}%`:(producto.increase?`+${producto.increase}%`: '-%')}</TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        <IconButton edge=\"end\" aria-label=\"delete\" onClick={()=>{openDialog(i)}}>\r\n                                            <EditOutlined />\r\n                                        </IconButton>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        <IconButton edge=\"end\" aria-label=\"delete\" onClick={()=>{openDialogDelete(i)}}>\r\n                                            <DeleteOutlineOutlined color='error'/>\r\n                                        </IconButton>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Grid>\r\n            :\r\n            <Grid container xs={12} justify='center' spacing={2}>\r\n                <Grid container item xs={12} justify='center'>\r\n                    <Typography variant='h5'>No Hay Productos Seleccionados</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <img src={Empty} alt=\"\" height='300px'/>\r\n                </Grid>\r\n            </Grid>\r\n        \r\n    )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport {Dialog,DialogTitle,DialogContent,DialogActions,TextField,Button,Grid,Paper,ListItemSecondaryAction,Select,Input,MenuItem,List,ListItem,ListItemText, Typography,IconButton} from '@material-ui/core'\r\nimport {CancelRounded, CheckCircle, EditOutlined} from '@material-ui/icons'\r\nimport {formatMoney} from '../../../utilities'\r\nimport {content} from '../../../Pages/styles/styles'\r\nimport { Autocomplete } from '@material-ui/lab'\r\n\r\nexport const DialogNuevoProducto = ({open,setOpen,productos,setproductos,edit,editIndex,seteditIndex,productosList,total,settotal,cotizacion}) =>{\r\n    const classes = content()\r\n    const [producto,setproducto]=useState(undefined)\r\n    const [cantidad,setcantidad]=useState(undefined)\r\n    const [discount,setDiscount]=useState(undefined)\r\n    const [increase,setIncrease]=useState(undefined)\r\n    const [redondeo,setRedondeo]=useState(false)\r\n    const [showPriceModifier,setShowPriceModifier]=useState(false)\r\n    const [precio,setprecio]=useState('')\r\n    const [editarPrecio,seteditarPrecio]=useState(false)\r\n    \r\n    // FUNCTIONS\r\n    const resetTextFields = () =>{\r\n        setproducto(undefined)\r\n        setcantidad(undefined)\r\n        setprecio(undefined)\r\n        setRedondeo(false)\r\n        seteditarPrecio(false)\r\n    }\r\n    const agregarProducto = () =>{\r\n        let aux = [...productos]\r\n        aux.push({\r\n            producto:producto,\r\n            cantidad:cantidad,\r\n            precio:precio*(cotizacion.valor),\r\n            total:precio*(cotizacion.valor)*cantidad,\r\n            cotizacion:cotizacion,\r\n            discount:discount?discount:null,\r\n            increase:increase?increase:null\r\n        })\r\n        setproductos(aux)\r\n        settotal(total+(cantidad*precio*(cotizacion.valor)))\r\n    }\r\n    const actualizarTotal=()=>{\r\n        let nuevoTotal = total\r\n        if(productos[editIndex].precio!=precio){\r\n            nuevoTotal-=productos[editIndex].cantidad*productos[editIndex].precio\r\n            nuevoTotal+=productos[editIndex].cantidad*precio\r\n        }\r\n        if(productos[editIndex].cantidad>cantidad){\r\n            nuevoTotal-=(productos[editIndex].cantidad-cantidad)*precio\r\n        }\r\n        else if(productos[editIndex].cantidad<cantidad){\r\n            nuevoTotal+=(cantidad-productos[editIndex].cantidad)*precio\r\n        }\r\n        settotal(nuevoTotal)\r\n    }\r\n    const editarProducto = () =>{\r\n        let aux = productos\r\n        actualizarTotal()\r\n        aux[editIndex]={\r\n            producto:producto,\r\n            cantidad:cantidad,\r\n            precio:precio,\r\n            cotizacion:cotizacion,\r\n            total:precio*cantidad,\r\n            discount:discount?discount:null,\r\n            increase:increase?increase:null\r\n\r\n        }\r\n        setproductos(aux)\r\n    }\r\n    const obtenerPrecio =producto=>{\r\n        let precio \r\n        productosList.map(i=>{\r\n            if(i.nombre==producto){\r\n                console.log(i.precio)\r\n                precio = i.precio\r\n            }\r\n        })\r\n        return precio\r\n    }\r\n    const getDiscountPrice = (precio,porcentaje) =>{\r\n        return precio - (porcentaje*precio/100)\r\n    }\r\n    const getDiscount = (precio,porcentaje) =>{\r\n        return (porcentaje*precio/100)\r\n    }\r\n    const getIncreasedPrice = (precio,porcentaje) =>{\r\n        return precio + (porcentaje*precio/100)\r\n    }\r\n    const getIncrease = (precio,porcentaje) =>{\r\n        return (porcentaje*precio/100)\r\n    }\r\n\r\n    // FILL FOR EDIT\r\n    useEffect(()=>{\r\n        if(edit){\r\n            setproducto(productos[editIndex].producto)\r\n            setcantidad(productos[editIndex].cantidad)\r\n            setprecio(productos[editIndex].precio)\r\n            if(productos[editIndex].discount){\r\n                setDiscount(productos[editIndex].discount)\r\n            }\r\n            if(productos[editIndex].increase){\r\n                setIncrease(productos[editIndex].increase)\r\n            }\r\n        }\r\n    },[edit])\r\n\r\n    // CONTENT\r\n    return(\r\n        <Dialog open={open} maxWidth='md'>\r\n            <DialogTitle>\r\n                {edit?\r\n                    'Editar Producto Elegido'\r\n                    :\r\n                    'Elige un producto'\r\n                }\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <Grid container direction='column' alignItems='center' spacing={3}>\r\n                    <Grid item>\r\n                        <Autocomplete\r\n                            freeSolo\r\n                            value={producto}\r\n                            options={productosList}\r\n                            getOptionLabel={(option) => option.nombre}\r\n                            onChange={(e)=>{\r\n                                setproducto(e.target.value) \r\n                                setprecio(obtenerPrecio(e.target.value))\r\n                            }}\r\n                            onSelect={(e)=>{\r\n                                setShowPriceModifier(true)\r\n                                setproducto(e.target.value) \r\n                                setprecio(obtenerPrecio(e.target.value))\r\n                            }}\r\n                            style={{ width: 300 }}\r\n                            renderInput={(params) => <TextField {...params} label=\"Producto\" variant=\"outlined\" />}\r\n                        />\r\n                    </Grid>\r\n                    {showPriceModifier?\r\n                        <Grid container item xs={12} justify='flex-start' spacing={3} >\r\n                            <List style={{width:'100%'}}>\r\n                                <ListItem>\r\n                                    <ListItemText \r\n                                        primary={`$ ${formatMoney(precio*(cotizacion.valor))} c/u - ($${formatMoney(precio)}usd x $${formatMoney(cotizacion.valor)}) `} \r\n                                        secondary={editarPrecio&&(discount||increase)?`$ ${editarPrecio=='discount'?'-':'+'}${formatMoney(editarPrecio=='discount'?getDiscount(precio*(cotizacion.valor),discount):getIncrease(precio*(cotizacion.valor),increase))}`:null}/>\r\n                                </ListItem>\r\n                                {editarPrecio && (discount||increase)?\r\n                                    <ListItem>\r\n                                        <ListItemText \r\n                                            primary={`$ ${formatMoney(editarPrecio=='discount'?getDiscountPrice(precio*(cotizacion.valor),discount):getIncreasedPrice(precio*(cotizacion.valor),increase))} c/u - ($${formatMoney(editarPrecio=='discount'?getDiscountPrice(precio,discount):getIncreasedPrice(precio,increase))}usd x $${formatMoney(cotizacion.valor)})`} \r\n                                            secondary='Nuevo Precio'\r\n                                            />\r\n                                    </ListItem>\r\n                                    :\r\n                                    null\r\n                                }\r\n                            </List>\r\n                            <Grid container item xs={12}>\r\n                                {redondeo?\r\n                                    <Grid container item xs={12} justify='center' spacing={3}>\r\n                                        <Grid item>\r\n                                            <TextField\r\n                                                label='Redondeo'\r\n                                                type='number'\r\n                                                value={(precio*cotizacion.valor)}\r\n                                                onChange={e=>{\r\n                                                    setprecio(e.target.value/cotizacion.valor)\r\n                                                }}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <IconButton\r\n                                                onClick={e=>{\r\n                                                    setRedondeo(false)\r\n                                                }}\r\n                                            >\r\n                                                <CheckCircle/>\r\n                                            </IconButton>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    :\r\n                                    null\r\n                                }\r\n                                {editarPrecio?\r\n                                    <Grid container item xs={12} justify='center' spacing={3}>\r\n                                        <Grid item>\r\n                                            <TextField\r\n                                                label={discount?'% Descuento':'% Incremento'}\r\n                                                type='number'\r\n                                                value={discount?discount:increase}\r\n                                                onChange={e=>{\r\n                                                    if(editarPrecio=='discount'){\r\n                                                        setDiscount(e.target.value)\r\n                                                    }\r\n                                                    else{\r\n                                                        setIncrease(e.target.value)\r\n                                                    }\r\n                                                }}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <IconButton\r\n                                                onClick={e=>{\r\n                                                    seteditarPrecio(false)\r\n                                                    setIncrease(undefined)\r\n                                                    setDiscount(undefined)\r\n                                                    setRedondeo(false)\r\n                                                }}\r\n                                            >\r\n                                                <CancelRounded/>\r\n                                            </IconButton>\r\n                                            <IconButton\r\n                                                disabled={!discount&&!increase}\r\n                                                onClick={e=>{\r\n                                                    if(editarPrecio=='discount'){\r\n                                                        setprecio(getDiscountPrice(precio,discount))\r\n                                                    }\r\n                                                    else{\r\n                                                        setprecio(getIncreasedPrice(precio,increase))\r\n                                                    }\r\n                                                    seteditarPrecio(false)\r\n                                                    setRedondeo(false)\r\n                                                }}\r\n                                            >\r\n                                                <CheckCircle/>\r\n                                            </IconButton>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    :\r\n                                    !discount && !increase && !redondeo?\r\n                                        <Grid container item xs={12} justify='center' spacing={3}>\r\n                                            <Grid item>\r\n                                                <Button\r\n                                                    color='primary'\r\n                                                    variant='contained'\r\n                                                    onClick={e=>{\r\n                                                        seteditarPrecio('discount')\r\n                                                    }}\r\n                                                >\r\n                                                    Descuento de precio\r\n                                                </Button>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Button\r\n                                                    color='primary'\r\n                                                    variant='contained'\r\n                                                    onClick={e=>{\r\n                                                        seteditarPrecio('increase')\r\n                                                    }}\r\n                                                >\r\n                                                    Aumento de precio\r\n                                                </Button>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Button\r\n                                                    color='primary'\r\n                                                    variant='contained'\r\n                                                    onClick={e=>{\r\n                                                        setRedondeo(true)\r\n                                                    }}\r\n                                                >\r\n                                                    Redondeo\r\n                                                </Button>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        :\r\n                                        null\r\n                                }\r\n                            </Grid>\r\n                        </Grid>\r\n                        :\r\n                        null\r\n                    }\r\n                    \r\n                    <Grid container item xs={12} justify='center' >\r\n                        <Grid item>\r\n                            <TextField\r\n                                label='Cantidad'\r\n                                type='number'\r\n                                disabled={!producto}\r\n                                value={cantidad}\r\n                                onChange={e=>{\r\n                                    setcantidad(e.target.value)\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container item xs={12} justify='center'>\r\n                        <Paper className={classes.totalProductoNuevoPedido} elevation={3}>\r\n                            <List>\r\n                                <ListItem>\r\n                                        <ListItemText secondary={'Total'} primary={`$ ${cantidad*precio?formatMoney(cantidad*precio*(cotizacion.valor)):'-'}`}/>\r\n                                </ListItem>\r\n                            </List>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button \r\n                    onClick={()=>{\r\n                        if(edit){\r\n                            seteditIndex(-1)\r\n                        }\r\n                        resetTextFields()\r\n                        setDiscount(undefined)\r\n                        setIncrease(undefined)\r\n                        seteditarPrecio(false)\r\n                        setShowPriceModifier(false)\r\n                        setOpen(false)\r\n                    }}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n                <Button\r\n                    disabled={(!producto||!cantidad)||editarPrecio}\r\n                    onClick={()=>{\r\n                        if(edit){\r\n                            editarProducto()\r\n                            seteditIndex(-1)\r\n                        }\r\n                        else{\r\n                            agregarProducto()\r\n                        }\r\n                        resetTextFields()\r\n                        setDiscount(undefined)\r\n                        setIncrease(undefined)\r\n                        seteditarPrecio(false)\r\n                        setOpen(false)\r\n                    }}\r\n                >\r\n                    {edit?\r\n                        'Editar'\r\n                        :\r\n                        'Agregar'\r\n                    }\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport {Dialog,DialogTitle,DialogContent,DialogActions,TextField,Button,Grid,makeStyles} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    input:{\r\n        marginBottom:theme.spacing(1),\r\n        textAlign:'center'\r\n    }\r\n}))\r\n\r\nexport const DialogEliminarElemento = ({open,setopen,datos,setDatos,index,setdeleteIndex,tipoDeElemento,total,settotal}) =>{\r\n    const classes = useStyles()\r\n    \r\n    const eliminarElemento = () =>{\r\n        settotal(total-(datos[index].cantidad*datos[index].precio))\r\n        let aux = datos\r\n        aux.splice(index,1)\r\n        setDatos(aux)\r\n    }\r\n    return(\r\n        <Dialog open={open}>\r\n            <DialogTitle>\r\n                Desea Eliminar {tipoDeElemento}?\r\n            </DialogTitle>\r\n            <DialogActions>\r\n                <Button \r\n                    onClick={()=>{\r\n                        setopen(false)\r\n                        setdeleteIndex(undefined)\r\n                    }}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n                <Button\r\n                    color='error'\r\n                    onClick={()=>{\r\n                        eliminarElemento()\r\n                        setopen(false)\r\n                        setdeleteIndex(undefined)\r\n                    }}\r\n                >\r\n                    Eliminar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport {Grid, Button,makeStyles,Select,Input,TextField,Paper,FormControl, Typography,List,ListItem,ListItemText} from '@material-ui/core'\r\nimport {Productos} from './Productos'\r\nimport {DialogNuevoProducto} from './Dialogs/DialogNuevoProducto'\r\nimport {DialogEliminarElemento} from './Dialogs/DialogEliminarElemento'\r\nimport {AddOutlined} from '@material-ui/icons'\r\nimport {formatMoney} from '../../utilities'\r\nimport {content} from '../../Pages/styles/styles'\r\n\r\nexport const Step = ({datos,setDatos,tipoDeDato,productosList,total,settotal,fecha,cotizaciones,cotizacion}) =>{\r\n    const classes = content()\r\n    const [showDialog,setshowDialog]=useState(false)\r\n    const [editIndex,seteditIndex]=useState(-1)\r\n    const [showDialogDelete,setshowDialogDelete]=useState(false)\r\n    const [deleteIndex,setdeleteIndex]=useState(undefined)\r\n\r\n    const openDialogDelete = (index) =>{\r\n        setdeleteIndex(index)\r\n        setshowDialogDelete(true)\r\n    }\r\n    const renderStep = () =>{\r\n        switch (tipoDeDato) {\r\n            case 'Productos':\r\n                return(\r\n                    <Grid container item xs={12} justify='center' spacing={3}>\r\n                        <Grid container item xs={12} justify='center' >\r\n                            <Grid container spacing={3} >\r\n                                <Grid container item xs={12} justify='center' >\r\n                                    <Paper elevation={3}>\r\n                                        <List>\r\n                                            <ListItem>\r\n                                                <ListItemText primary={cotizacion.valor} secondary={cotizacion.nombre} />\r\n                                            </ListItem>\r\n                                        </List>\r\n                                    </Paper>\r\n                                </Grid>\r\n                                <Grid container item xs={12} justify='center' >\r\n                                    <Button variant='contained' color='primary' startIcon={<AddOutlined/>} onClick={()=>{setshowDialog(true)}}>\r\n                                        Agregar Producto\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Productos productos={datos} seteditIndex={seteditIndex} showDialog={()=>{setshowDialog(true)}} openDialogDelete={i=>{openDialogDelete(i)}}/>\r\n                        {datos.length?\r\n                            <Grid container item xs={12} justify='center'>\r\n                                <Grid item justify='center'>\r\n                                    <Paper elevation={3} className={classes.cardTotalPedidoSuccess}>\r\n                                        <Typography variant='h5'>\r\n                                            Total $ {formatMoney(total)}\r\n                                        </Typography>\r\n                                    </Paper>\r\n                                </Grid>\r\n                            </Grid>\r\n                            :\r\n                            null\r\n                        }\r\n\r\n                        {/* DIALOGS */}\r\n                        {console.log(cotizacion)}\r\n                        <DialogNuevoProducto \r\n                            open={showDialog} \r\n                            setOpen={setshowDialog} \r\n                            productos={datos} \r\n                            setproductos={setDatos} \r\n                            edit={editIndex!=-1} \r\n                            editIndex={editIndex} \r\n                            seteditIndex={seteditIndex} \r\n                            productosList={productosList}\r\n                            total={total}\r\n                            settotal={settotal}\r\n                            cotizacion={cotizacion}\r\n                        />\r\n                        <DialogEliminarElemento \r\n                            open={showDialogDelete} \r\n                            setopen={setshowDialogDelete} \r\n                            datos={datos} \r\n                            setDatos={setDatos} \r\n                            index={deleteIndex} \r\n                            setdeleteIndex={setdeleteIndex} \r\n                            tipoDeElemento='Producto'\r\n                            total={total}\r\n                            settotal={settotal}\r\n                        />\r\n                    </Grid>\r\n                )\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return( renderStep() )\r\n}","import React,{useState, useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {Paper,Chip,Button,StepContent,Backdrop,StepLabel,Grid,Step,Stepper,Link as LinkComponent,Snackbar,CircularProgress,TextField} from '@material-ui/core'\r\nimport { Autocomplete } from '@material-ui/lab'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {Step as StepComponent} from '../components/Nuevo-Pedido/Step'\r\nimport {database} from 'firebase'\r\nimport {content} from './styles/styles'\r\nimport { fechaDetallada, filtrarCotizaciones, getClientList, getProductosListWithPrice } from '../utilities';\r\nimport { PeopleAlt, MoveToInbox } from '@material-ui/icons';\r\n\r\n// COMPONENT\r\nconst NuevoPedido=(props)=>{\r\n    const classes = content()\r\n    const [nombre,setnombre]=useState(undefined)\r\n    const [productos,setproductos]=useState([])\r\n    const [total,settotal]=useState(0)\r\n    const [fecha,setfecha]=useState(undefined)\r\n    console.log(props.dolares)\r\n    //STEPPER STATE\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [showSnackbar, setshowSnackbar] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const steps = getSteps();\r\n\r\n\r\n    //STEPPER NAVIGATION\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n    const getStepContent =(step)=> {\r\n      switch (step) {\r\n        case 0:\r\n          return (\r\n            <Grid container item xs={12} justify='center'>\r\n                <Paper elevation={3}>\r\n                    <Grid item xs={12} justify='center'>\r\n                        <Autocomplete\r\n                            freeSolo\r\n                            value={nombre}\r\n                            options={Object.keys(props.clientes)}\r\n                            getOptionLabel={(option) => option}\r\n                            onChange={(e)=>{setnombre(e.target.value)}}\r\n                            onSelect={(e)=>{setnombre(e.target.value)}}\r\n                            style={{ width: 300 }}\r\n                            renderInput={(params) => <TextField {...params} label=\"Destinatario\" variant=\"outlined\" />}\r\n                        />\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n            );\r\n        case 1:\r\n            return (\r\n                <StepComponent \r\n                tipoDeDato='Productos'\r\n                datos={productos}\r\n                setDatos={setproductos}\r\n                productosList={getProductosListWithPrice(props.productos)}\r\n                total={total}\r\n                settotal={settotal}\r\n                cotizacion={{nombre:props.dolares[1].casa.nombre,valor:parseFloat(props.dolares[1].casa.venta)}}\r\n            /> \r\n          );\r\n      }\r\n    }\r\n    const setDisabled=(step)=>{\r\n    switch (step) {\r\n        case 0:\r\n                return !nombre\r\n            break;\r\n        case 1:\r\n                return productos.length? false : true\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    }\r\n    function getSteps() {\r\n        return ['Elegir el Destinatario', 'Elegir Los productos'];\r\n    }\r\n    function getStepLabel(label,index) {\r\n        switch (index) {\r\n            case 0:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<PeopleAlt/>} \r\n                            label={label}  \r\n                            onClick={()=>{if(nombre){setActiveStep(index)}}}\r\n                            variant='default'\r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n            case 1:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<MoveToInbox/>} \r\n                            label={label}  \r\n                            onClick={()=>{if(nombre){setActiveStep(index)}}}\r\n                            variant='default'\r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n        }\r\n    }\r\n\r\n    //FUNCTIONS\r\n    const guardarPedido = () =>{\r\n        setLoading(true)\r\n        let aux={\r\n            cliente:nombre,\r\n            productos:productos,\r\n            cotizacion:{nombre:props.dolares[1].casa.nombre,valor:parseFloat(props.dolares[1].casa.venta)},\r\n            total:total,\r\n            fecha:!fecha?fechaDetallada():fecha\r\n        }\r\n        //Editar Pedido\r\n        if(props.history.location.search){\r\n            database().ref().child(props.user.uid).child('pedidos').child(props.history.location.search.slice(1)).update(aux)\r\n            .then(()=>{\r\n                    setshowSnackbar('El pedido se editó correctamente!')\r\n                setTimeout(() => {\r\n                    props.history.replace(`/Pedidos`)\r\n                }, 2000);\r\n            })\r\n            .catch(()=>{\r\n                setLoading(false)\r\n            })\r\n        }\r\n        //Guardar Pedido Nuevo\r\n        else{\r\n            database().ref().child(props.user.uid).child('pedidos').push(aux)\r\n            .then(()=>{\r\n                setshowSnackbar('El pedido se agregó correctamente!')\r\n                setTimeout(() => {\r\n                    props.history.replace(`/Pedidos`)\r\n                }, 2000);\r\n            })\r\n            .catch(()=>{\r\n                setLoading(false)\r\n            })\r\n        }\r\n    }\r\n\r\n    //FILL FOR EDIT\r\n    useEffect(()=>{\r\n        if(props.history.location.search){\r\n            const {cliente,productos,total,fecha} = props.pedidos[props.history.location.search.slice(1)]\r\n            cliente&&setnombre(cliente)\r\n            productos&&setproductos(productos)\r\n            total&&settotal(total)\r\n            fecha&&setfecha(fecha)\r\n            setActiveStep(1)\r\n        }\r\n    },[])\r\n\r\n    return(\r\n        <Layout history={props.history} page={props.history.location.search?'Editar Pedido':'Nuevo Pedido'} user={props.user.uid} blockGoBack={true}>\r\n            <Paper className={classes.content}>\r\n                {/* STEPPER */}\r\n                <Stepper orientation='vertical' activeStep={activeStep} className={classes.stepper}>\r\n                    {steps.map((label,index)=>(\r\n                        <Step>\r\n                            {getStepLabel(label,index)}\r\n                            <StepContent>\r\n                                <Grid container xs={12} justify='center' spacing={3}>\r\n                                    {getStepContent(index)}\r\n                                    <Grid container item xs={12} justify='center'>\r\n                                        <Grid item>\r\n                                            <Button\r\n                                                disabled={activeStep===0}\r\n                                                onClick={handleBack}\r\n                                            >\r\n                                                Volver\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                disabled={setDisabled(activeStep)}\r\n                                                onClick={activeStep==steps.length-1? guardarPedido:handleNext}\r\n                                            >\r\n                                                {activeStep==steps.length-1?`${props.history.location.search?'Guardar Edicion':'Guardar Pedido'}`:'Siguiente'}\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </StepContent>\r\n                        </Step>\r\n                    ))}\r\n                </Stepper>\r\n                {/* BACKDROP & SNACKBAR */}\r\n                <Backdrop className={classes.backdrop} open={loading}>\r\n                    <CircularProgress color=\"inherit\" />\r\n                    <Snackbar open={showSnackbar} autoHideDuration={2000} onClose={()=>{setshowSnackbar('')}}>\r\n                        <Alert severity=\"success\" variant='filled'>\r\n                            {showSnackbar}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </Backdrop>\r\n            </Paper>\r\n        </Layout>\r\n    )\r\n}\r\n\r\n//REDUX STATE TO PROPS\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        pedidos:state.pedidos,\r\n        productos:state.productos,\r\n        clientes:state.clientes,\r\n        dolares:state.dolares\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(NuevoPedido)","import React,{useState,useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {content} from './styles/styles'\r\nimport {Paper,Grid,Typography,Backdrop,CircularProgress,Snackbar,Card,CardHeader,CardContent,Box,AppBar,Tabs,Tab,IconButton} from '@material-ui/core'\r\nimport {CarouselCotizaciones} from '../components/Carousel-Cotizaciones/CarouselCotizaciones'\r\nimport {Alert} from '@material-ui/lab'\r\nimport Home from '../images/Home.png'\r\nimport ApexCharts from 'react-apexcharts';\r\nimport {formatMoney,getActualMonthDetailed,filtrarCotizaciones} from '../utilities'\r\nimport {Link} from 'react-router-dom'\r\nimport { Add,List } from '@material-ui/icons'\r\n\r\n//COMPONENT\r\nconst Inicio=(props)=>{\r\n    const classes = content()\r\n    const [showSnackbar, setshowSnackbar] = useState('');\r\n    const [loading,setLoading] = useState(true)\r\n    const [sortedCompras,setSortedCompras] = useState(undefined)\r\n    const [sortedVentas,setSortedVentas] = useState(undefined)\r\n    const [value,setValue]=useState(0)\r\n    const [sortedProductos,setSortedProductos] = useState(undefined)\r\n    const [sortedClientes,setSortedClientes] = useState(undefined)\r\n    const [cotizaciones,setCotizaciones] = useState(undefined)\r\n    const [valueTabProductos,setValueTabProductos]=useState(0)\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    const TabPanel=(props)=>{\r\n        const { children, value, index, ...other } = props;\r\n      \r\n        return (\r\n          <div\r\n            role=\"tabpanel\"\r\n            className={classes.tabPanelDeuda}\r\n            hidden={value !== index}\r\n          >\r\n            {value === index && (\r\n              <Box p={3}>\r\n                <Typography>{children}</Typography>\r\n              </Box>\r\n            )}\r\n          </div>\r\n        )\r\n    }\r\n\r\n    // CHARTS\r\n    const generateChartAnualSales = () => {\r\n        // Asume que tienes los datos en dos variables: sortedCompras y sortedVentas\r\n        let sales = []\r\n        let purchases = []\r\n        let dif = []\r\n        let labelsUltimoAnio =  []\r\n\r\n        if(sortedCompras || sortedVentas){\r\n            const fechaActual = new Date();\r\n            const mesActual = fechaActual.getMonth();\r\n            const anioActual = fechaActual.getFullYear();\r\n            \r\n            let auxSales = [0,0,0,0,0,0,0,0,0,0,0,0]\r\n            let auxPurchases = [0,0,0,0,0,0,0,0,0,0,0,0]\r\n\r\n            const mesesDesdeUltimoAnio = 12;\r\n            let mesInicio = mesActual - mesesDesdeUltimoAnio;\r\n            let anioInicio = anioActual;\r\n            if (mesInicio < 0) {\r\n                mesInicio += 12;\r\n                anioInicio -= 1;\r\n            }\r\n            const initialDate = new Date()\r\n            initialDate.setFullYear(anioInicio,mesInicio+1,1)\r\n\r\n            if(sortedVentas){\r\n                for (const [year, data] of sortedVentas) {\r\n                    // Itera sobre cada mes en el año\r\n                    console.log(data)\r\n                    for (const [month, dataMonth] of Object.entries(data.months)) {\r\n                            const auxFecha = new Date();\r\n                            auxFecha.setFullYear(year, month - 1, 1);\r\n                            if(auxFecha>=initialDate && auxFecha<=fechaActual){\r\n                                auxSales[month-1]+=(dataMonth.total)\r\n                            }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(sortedCompras){\r\n                for (const [year, data] of sortedCompras) {\r\n                    // Itera sobre cada mes en el año\r\n                    for (const [month, dataMonth] of Object.entries(data.months)) {\r\n                            const auxFecha = new Date();\r\n                            auxFecha.setFullYear(year, month - 1, 1);\r\n                            if(auxFecha>=initialDate && auxFecha<=fechaActual){\r\n                                auxPurchases[month-1]+=(dataMonth.total)\r\n                            }\r\n                    }\r\n                }\r\n            }\r\n\r\n            const auxMeses = ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic']\r\n            const arr1Meses = auxMeses.slice(mesInicio+1);\r\n            const arr2Meses = auxMeses.slice(0,mesInicio+1);\r\n\r\n            \r\n            const arr1Sales = auxSales.slice(mesInicio+1);\r\n            const arr2Sales = auxSales.slice(0,mesInicio+1);\r\n\r\n            const arr1Purchases = auxPurchases.slice(mesInicio+1);\r\n            const arr2Purchases = auxPurchases.slice(0,mesInicio+1);\r\n            \r\n            \r\n            arr1Meses.map(i=>{\r\n                labelsUltimoAnio.push(i)\r\n            })\r\n            arr2Meses.map(i=>{\r\n                labelsUltimoAnio.push(i)\r\n            })\r\n            \r\n            arr1Sales.map(i=>{\r\n                sales.push(i)\r\n            })\r\n            arr2Sales.map(i=>{\r\n                sales.push(i)\r\n            })\r\n\r\n            arr1Purchases.map(i=>{\r\n                purchases.push(i)\r\n            })\r\n            arr2Purchases.map(i=>{\r\n                purchases.push(i)\r\n            })\r\n\r\n            sales.map(sale=>{\r\n                dif.push(sale)\r\n            })\r\n            purchases.map((purchase,i)=>{\r\n                dif[i]-=purchase\r\n            })\r\n\r\n        }\r\n        // Define la configuración del gráfico\r\n        const options = {\r\n            labels:labelsUltimoAnio,\r\n            fill: {\r\n            },\r\n            chart:{\r\n                \r\n            },\r\n            theme:{\r\n                mode:'dark',\r\n                palette:'palette6'\r\n            },\r\n            stroke: {\r\n                curve: 'smooth'\r\n            },\r\n            grid: {\r\n                row: {\r\n                    colors: ['#c3c3c3', 'transparent'], // takes an array which will be repeated on columns\r\n                    opacity: 0.5\r\n                },\r\n            },\r\n            tooltip:{\r\n                y:{\r\n                    formatter: val=> `$ ${formatMoney(val)}`\r\n                }\r\n            },\r\n            dataLabels:{\r\n                enabled:false\r\n            },\r\n            yaxis:{\r\n                labels:{\r\n                    formatter: val => `$ ${formatMoney(val)}`,\r\n                }\r\n            }\r\n        };\r\n        const series=[\r\n        {\r\n            name:'Ventas',\r\n            type:'line',\r\n            data:sales\r\n        },\r\n        {\r\n            name:'Compras',\r\n            type:'line',\r\n            data:purchases\r\n        },\r\n        {\r\n            name:'Balance',\r\n            type:'area',\r\n            data:dif\r\n        },\r\n        ]\r\n        // Renderiza el gráfico\r\n\r\n        return (\r\n            <Card>\r\n                <CardHeader\r\n                    subheader='Compras & Ventas - Ultimos 12 Meses'\r\n                />\r\n                <CardContent>\r\n                    <ApexCharts options={options} series={series}  height={400} width={1200} />\r\n                </CardContent>\r\n            </Card>\r\n        )\r\n    }\r\n    const generateChartAnualIva = () => {\r\n        // Asume que tienes los datos en dos variables: sortedCompras y sortedVentas\r\n\r\n        let sales = []\r\n        let purchases =[]\r\n        let dif =[]\r\n        let labelsUltimoAnio =  []\r\n\r\n        if(sortedCompras || sortedVentas){\r\n            const fechaActual = new Date();\r\n            const mesActual = fechaActual.getMonth();\r\n            const anioActual = fechaActual.getFullYear();\r\n            let auxSales = [0,0,0,0,0,0,0,0,0,0,0,0]\r\n            let auxPurchases = [0,0,0,0,0,0,0,0,0,0,0,0]\r\n\r\n            const mesesDesdeUltimoAnio = 12;\r\n            let mesInicio = mesActual - mesesDesdeUltimoAnio;\r\n            let anioInicio = anioActual;\r\n            if (mesInicio < 0) {\r\n                mesInicio += 12;\r\n                anioInicio -= 1;\r\n            }\r\n            const initialDate = new Date()\r\n            initialDate.setFullYear(anioInicio,mesInicio+1,1)\r\n            if(sortedVentas){\r\n                for (const [year, data] of sortedVentas) {\r\n                    // Itera sobre cada mes en el año\r\n                    for (const [month, dataMonth] of Object.entries(data.months)) {\r\n                        const auxFecha = new Date();\r\n                        auxFecha.setFullYear(year, month - 1, 1);\r\n                        if(auxFecha>=initialDate && auxFecha<=fechaActual){\r\n                            Object.keys(dataMonth.ventas).map(venta=>{\r\n                                if (dataMonth.ventas[venta].metodoDePago.facturacion) {\r\n                                    auxSales[(month-1)]+=(dataMonth.ventas[venta].total-(dataMonth.ventas[venta].total/1.21))\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(sortedCompras){\r\n                for (const [year, data] of sortedCompras) {\r\n                    // Itera sobre cada mes en el año\r\n                    for (const [month, dataMonth] of Object.entries(data.months)) {\r\n                        const auxFecha = new Date();\r\n                        auxFecha.setFullYear(year, month - 1, 1);\r\n                        if(auxFecha>=initialDate && auxFecha<=fechaActual){\r\n                            Object.keys(dataMonth.compras).map(compra=>{\r\n                                if (dataMonth.compras[compra].metodoDePago.facturacion) {\r\n                                    if(!dataMonth.compras[compra].consumoFacturado){\r\n                                        auxPurchases[(month-1)]+=(dataMonth.compras[compra].total-(dataMonth.compras[compra].total/1.21))\r\n                                    }\r\n                                    else{\r\n                                        auxPurchases[(month-1)]+=parseFloat(dataMonth.compras[compra].totalIva)\r\n                                    }\r\n                                }        \r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            const auxMeses = ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic']\r\n            const arr1Meses = auxMeses.slice(mesInicio+1);\r\n            const arr2Meses = auxMeses.slice(0,mesInicio+1);\r\n\r\n            \r\n            const arr1Sales = auxSales.slice(mesInicio+1);\r\n            const arr2Sales = auxSales.slice(0,mesInicio+1);\r\n\r\n            const arr1Purchases = auxPurchases.slice(mesInicio+1);\r\n            const arr2Purchases = auxPurchases.slice(0,mesInicio+1);\r\n            \r\n            \r\n            arr1Meses.map(i=>{\r\n                labelsUltimoAnio.push(i)\r\n            })\r\n            arr2Meses.map(i=>{\r\n                labelsUltimoAnio.push(i)\r\n            })\r\n            \r\n            arr1Sales.map(i=>{\r\n                sales.push(i)\r\n            })\r\n            arr2Sales.map(i=>{\r\n                sales.push(i)\r\n            })\r\n\r\n            arr1Purchases.map(i=>{\r\n                purchases.push(i)\r\n            })\r\n            arr2Purchases.map(i=>{\r\n                purchases.push(i)\r\n            })\r\n            sales.map(sale=>{\r\n                dif.push(-sale)\r\n            })\r\n            purchases.map((purchase,i)=>{\r\n                dif[i]+=purchase\r\n            })\r\n\r\n        }\r\n        // Define la configuración del gráfico\r\n        const options = {\r\n            labels:labelsUltimoAnio,\r\n            fill: {\r\n            },\r\n            chart:{\r\n                \r\n            },\r\n            theme:{\r\n                mode:'dark',\r\n                palette:'palette6'\r\n            },\r\n            stroke: {\r\n                curve: 'smooth'\r\n            },\r\n            grid: {\r\n                row: {\r\n                    colors: ['#c3c3c3', 'transparent'], // takes an array which will be repeated on columns\r\n                    opacity: 0.5\r\n                },\r\n            },\r\n            tooltip:{\r\n                y:{\r\n                    formatter: val=> `$ ${formatMoney(val)}`\r\n                }\r\n            },\r\n            dataLabels:{\r\n                enabled:false\r\n            },\r\n            yaxis:{\r\n                labels:{\r\n                    formatter: val => `$ ${formatMoney(val)}`,\r\n                }\r\n            }\r\n        };\r\n        const series=[\r\n        {\r\n            name:'Iva Ventas',\r\n            type:'line',\r\n            data:sales\r\n        },\r\n        {\r\n            name:'Iva Compras',\r\n            type:'line',\r\n            data:purchases\r\n        },\r\n        {\r\n            name:'Balance',\r\n            type:'area',\r\n            data:dif\r\n        },\r\n        ]\r\n        // Renderiza el gráfico\r\n\r\n        return (\r\n            <Card>\r\n                <CardHeader\r\n                    subheader='Iva Compras & Ventas - Ultimos 12 Meses'\r\n                />\r\n                <CardContent>\r\n                    <ApexCharts options={options} series={series}  height={400} width={1200} />\r\n                </CardContent>\r\n            </Card>\r\n        )\r\n    }\r\n    const generateChartAnualProducts = () => {\r\n        // Asume que tienes los datos en dos variables: sortedVentas\r\n        const actualYear = new Date().getFullYear()\r\n\r\n        let products = []\r\n        let labelsUltimoAnio =  []\r\n\r\n        if(sortedVentas){\r\n            const fechaActual = new Date();\r\n            const mesActual = fechaActual.getMonth();\r\n            const anioActual = fechaActual.getFullYear();\r\n            let auxProducts = []\r\n\r\n            const mesesDesdeUltimoAnio = 12;\r\n            let mesInicio = mesActual - mesesDesdeUltimoAnio;\r\n            let anioInicio = anioActual;\r\n            if (mesInicio < 0) {\r\n                mesInicio += 12;\r\n                anioInicio -= 1;\r\n            }\r\n            const initialDate = new Date()\r\n            initialDate.setFullYear(anioInicio,mesInicio+1,1)\r\n            if(sortedVentas){\r\n                for (const [year, data] of sortedVentas) {\r\n                    // Itera sobre cada mes en el año\r\n                    for (const [month, dataMonth] of Object.entries(data.months)) {\r\n                            const auxFecha = new Date();\r\n                            auxFecha.setFullYear(year, month - 1, 1);\r\n                            if(auxFecha>=initialDate && auxFecha<=fechaActual){\r\n                                Object.keys(dataMonth.ventas).map(venta=>{\r\n                                    dataMonth.ventas[venta].articulos.map(articulo=>{\r\n                                        let auxData = [0,0,0,0,0,0,0,0,0,0,0,0]\r\n                                        const index = auxProducts.findIndex((d) => d.name === articulo.producto);\r\n                                        if (index === -1) {\r\n                                            // Si no lo encontramos, lo agregamos\r\n                                            auxData[(dataMonth.ventas[venta].fecha.split('/')[1]-1)] = parseInt(articulo.cantidad)\r\n                                            auxProducts.push({ name: articulo.producto, data:auxData});\r\n                                        } \r\n                                        else {\r\n                                            auxData=auxProducts[index].data\r\n                                            // Si lo encontramos, sumamos la cantidad y el total\r\n                                            if(!auxData[(dataMonth.ventas[venta].fecha.split('/')[1]-1)]){\r\n                                                auxData[(dataMonth.ventas[venta].fecha.split('/')[1]-1)] = 0\r\n                                            }\r\n                                            auxData[(dataMonth.ventas[venta].fecha.split('/')[1]-1)] += parseInt(articulo.cantidad);\r\n                                            auxProducts[index] = {...auxProducts[index],data:auxData}\r\n                                        }\r\n\r\n                                    })\r\n                                })\r\n                            }\r\n                    }\r\n                }\r\n            }\r\n            const auxMeses = ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic']\r\n            const arr1Meses = auxMeses.slice(mesInicio+1);\r\n            const arr2Meses = auxMeses.slice(0,mesInicio+1);\r\n            arr1Meses.map(i=>{\r\n                labelsUltimoAnio.push(i)\r\n            })\r\n            arr2Meses.map(i=>{\r\n                labelsUltimoAnio.push(i)\r\n            })\r\n\r\n            let finalProducts = auxProducts\r\n            finalProducts.map(product=>{\r\n                const arr1Products = product.data.slice(mesInicio+1);\r\n                const arr2Products = product.data.slice(0,mesInicio+1);\r\n\r\n                let auxFinalData = []\r\n                arr1Products.map(i=>{\r\n                    auxFinalData.push(i)\r\n                })\r\n                arr2Products.map(i=>{\r\n                    auxFinalData.push(i)\r\n                })\r\n                product.data = auxFinalData\r\n            })\r\n            console.log(auxProducts)\r\n            products=auxProducts\r\n        }\r\n\r\n        const series = products\r\n        // Define la configuración del gráfico\r\n        const options = {\r\n            labels:labelsUltimoAnio,\r\n            fill: {\r\n            },\r\n            chart:{\r\n                \r\n            },\r\n            theme:{\r\n                mode:'dark',\r\n                palette:'palette6'\r\n            },\r\n            stroke: {\r\n                curve: 'smooth'\r\n            },\r\n            grid: {\r\n                row: {\r\n                    colors: ['#c3c3c3', 'transparent'], // takes an array which will be repeated on columns\r\n                    opacity: 0.5\r\n                },\r\n            },\r\n            tooltip:{\r\n            },\r\n            dataLabels:{\r\n                enabled:false\r\n            },\r\n            yaxis:{\r\n            }\r\n        };\r\n        \r\n        // Renderiza el gráfico\r\n\r\n        return (\r\n            <Card>\r\n                <CardHeader\r\n                    subheader='Ventas por Producto - Ultimos 12 Meses'\r\n                />\r\n                <CardContent>\r\n                    <ApexCharts options={options} series={series} type='line'  height={400} width={600} />\r\n                </CardContent>\r\n            </Card>\r\n        )\r\n    }\r\n    const generateChartAnualProductsValue = () => {\r\n        // Asume que tienes los datos en dos variables: sortedVentas\r\n        const actualYear = new Date().getFullYear()\r\n    \r\n        let products = []\r\n        let labelsUltimoAnio =  []\r\n    \r\n        if(sortedVentas){\r\n            const fechaActual = new Date();\r\n            const mesActual = fechaActual.getMonth();\r\n            const anioActual = fechaActual.getFullYear();\r\n            let auxProducts = []\r\n    \r\n            const mesesDesdeUltimoAnio = 12;\r\n            let mesInicio = mesActual - mesesDesdeUltimoAnio;\r\n            let anioInicio = anioActual;\r\n            if (mesInicio < 0) {\r\n                mesInicio += 12;\r\n                anioInicio -= 1;\r\n            }\r\n            const initialDate = new Date()\r\n            initialDate.setFullYear(anioInicio,mesInicio+1,1)\r\n            if(sortedVentas){\r\n                for (const [year, data] of sortedVentas) {\r\n                    // Itera sobre cada mes en el año\r\n                    for (const [month, dataMonth] of Object.entries(data.months)) {\r\n                            const auxFecha = new Date();\r\n                            auxFecha.setFullYear(year, month - 1, 1);\r\n                            if(auxFecha>=initialDate && auxFecha<=fechaActual){\r\n                                Object.keys(dataMonth.ventas).map(venta=>{\r\n                                    dataMonth.ventas[venta].articulos.map(articulo=>{\r\n                                        let auxData = [0,0,0,0,0,0,0,0,0,0,0,0]\r\n                                        const index = auxProducts.findIndex((d) => d.name === articulo.producto);\r\n                                        if (index === -1) {\r\n                                            // Si no lo encontramos, lo agregamos\r\n                                            auxData[(dataMonth.ventas[venta].fecha.split('/')[1]-1)] = parseFloat(articulo.total?articulo.total/1.21:0)\r\n                                            auxProducts.push({ name: articulo.producto, data:auxData});\r\n                                        } \r\n                                        else {\r\n                                            auxData=auxProducts[index].data\r\n                                            // Si lo encontramos, sumamos la cantidad y el total\r\n                                            if(!auxData[(dataMonth.ventas[venta].fecha.split('/')[1]-1)]){\r\n                                                auxData[(dataMonth.ventas[venta].fecha.split('/')[1]-1)] = 0\r\n                                            }\r\n                                            auxData[(dataMonth.ventas[venta].fecha.split('/')[1]-1)] += parseFloat(dataMonth.ventas[venta].metodoDePago.facturacion?(articulo.total?articulo.total/1.21:0):articulo.total?articulo.total:0);\r\n                                            auxProducts[index] = {...auxProducts[index],data:auxData}\r\n                                        }\r\n    \r\n                                    })\r\n                                })\r\n                            }\r\n                    }\r\n                }\r\n            }\r\n            const auxMeses = ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic']\r\n            const arr1Meses = auxMeses.slice(mesInicio+1);\r\n            const arr2Meses = auxMeses.slice(0,mesInicio+1);\r\n            arr1Meses.map(i=>{\r\n                labelsUltimoAnio.push(i)\r\n            })\r\n            arr2Meses.map(i=>{\r\n                labelsUltimoAnio.push(i)\r\n            })\r\n    \r\n            let finalProducts = auxProducts\r\n            finalProducts.map(product=>{\r\n                const arr1Products = product.data.slice(mesInicio+1);\r\n                const arr2Products = product.data.slice(0,mesInicio+1);\r\n    \r\n                let auxFinalData = []\r\n                arr1Products.map(i=>{\r\n                    auxFinalData.push(i)\r\n                })\r\n                arr2Products.map(i=>{\r\n                    auxFinalData.push(i)\r\n                })\r\n                product.data = auxFinalData\r\n            })\r\n            console.log(auxProducts)\r\n            products=auxProducts\r\n        }\r\n    \r\n        const series = products\r\n        // Define la configuración del gráfico\r\n        const options = {\r\n            labels:labelsUltimoAnio,\r\n            fill: {\r\n            },\r\n            chart:{\r\n                \r\n            },\r\n            theme:{\r\n                mode:'dark',\r\n                palette:'palette6'\r\n            },\r\n            stroke: {\r\n                curve: 'smooth'\r\n            },\r\n            grid: {\r\n                row: {\r\n                    colors: ['#c3c3c3', 'transparent'], // takes an array which will be repeated on columns\r\n                    opacity: 0.5\r\n                },\r\n            },\r\n            tooltip:{\r\n                y:{\r\n                    formatter: val=> `$ ${formatMoney(val)}`\r\n                }\r\n            },\r\n            dataLabels:{\r\n                enabled:false\r\n            },\r\n            yaxis:{\r\n                labels:{\r\n                    formatter: val=> `$ ${formatMoney(val)}`\r\n                }\r\n            }\r\n        };\r\n        \r\n        // Renderiza el gráfico\r\n    \r\n        return (\r\n            <Card>\r\n                <CardHeader\r\n                    subheader='Ventas por Producto - Ultimos 12 Meses'\r\n                />\r\n                <CardContent>\r\n                    <ApexCharts options={options} series={series} type='line'  height={400} width={600} />\r\n                </CardContent>\r\n            </Card>\r\n        )\r\n    }\r\n    const generateChartProductsValue = () => {\r\n        const actualYear = new Date().getFullYear()\r\n\r\n        const series = [];\r\n        const labels = [];\r\n        \r\n        sortedProductos.map((d)=>{\r\n            series.push(d.total)\r\n            labels.push(d.producto)\r\n        })\r\n        // Define la configuración del gráfico\r\n        const options = {\r\n            series:series,\r\n            labels:labels,\r\n            theme:{\r\n                mode:'dark',\r\n                palette:'palette2'\r\n            },\r\n            tooltip:{\r\n                y:{\r\n                    formatter: val=> `$ ${formatMoney(val)}`\r\n                },\r\n                fillSeriesColor:false\r\n            },\r\n            dataLabels:{\r\n                dropShadow: {\r\n                    enabled: true,\r\n                    left: 2,\r\n                    top: 2,\r\n                    opacity: 0.5\r\n                },\r\n            },\r\n            \r\n            \r\n        };\r\n    \r\n    \r\n        // Renderiza el gráfico\r\n        return (\r\n            <Card>\r\n                <CardHeader\r\n                    subheader='Ingresos por Producto - Anual'\r\n                />\r\n                <CardContent>\r\n                    <ApexCharts options={options} series={series} type='donut'   width={450} />\r\n                </CardContent>\r\n            </Card>)\r\n    }\r\n    const generateChartClientValue = () => {\r\n        const actualYear = new Date().getFullYear()\r\n\r\n        const series = [];\r\n        const labels = [];\r\n        \r\n        sortedClientes.map((d)=>{\r\n            series.push(d.total)\r\n            labels.push(d.nombre)\r\n        })\r\n        // Define la configuración del gráfico\r\n        const options = {\r\n            series:series,\r\n            labels:labels,\r\n            theme:{\r\n                mode:'dark',\r\n                palette:'palette2'\r\n            },\r\n            tooltip:{\r\n                y:{\r\n                    formatter: val=> `$ ${formatMoney(val)}`\r\n                },\r\n                fillSeriesColor:false\r\n            },\r\n            dataLabels:{\r\n                dropShadow: {\r\n                    enabled: true,\r\n                    left: 2,\r\n                    top: 2,\r\n                    opacity: 0.5\r\n                },\r\n            },\r\n            \r\n            \r\n        };\r\n    \r\n    \r\n        // Renderiza el gráfico\r\n        return (\r\n            <Card>\r\n                <CardHeader\r\n                    subheader='Ingresos por Cliente - Anual'\r\n                />\r\n                <CardContent>\r\n                    <ApexCharts options={options} series={series} type='donut'   width={450} />\r\n                </CardContent>\r\n            </Card>)\r\n    }\r\n    const generateChartAnualProductsUnits = () => {\r\n        const actualYear = new Date().getFullYear()\r\n\r\n        const series = [];\r\n        const labels = [];\r\n        \r\n        sortedProductos.map((d)=>{\r\n            series.push(d.cantidad)\r\n            labels.push(d.producto)\r\n        })\r\n        // Define la configuración del gráfico\r\n        const options = {\r\n            series:series,\r\n            labels:labels,\r\n            theme:{\r\n                mode:'dark',\r\n                palette:'palette2'\r\n\r\n            },\r\n            dataLabels:{\r\n                dropShadow: {\r\n                    enabled: true,\r\n                    left: 2,\r\n                    top: 2,\r\n                    opacity: 0.5\r\n                },\r\n            },\r\n            tooltip:{\r\n                fillSeriesColor:false\r\n            }\r\n        };\r\n    \r\n    \r\n        // Renderiza el gráfico\r\n        return (\r\n            <Card>\r\n                <CardHeader\r\n                    subheader='Unidades Vendidas - Anual'\r\n                />\r\n                <CardContent>\r\n                    <ApexCharts options={options} series={series} type='donut'   width={450} />\r\n                </CardContent>\r\n            </Card>)\r\n    }\r\n    const generateChartMonthSalesUnits = () => {\r\n        const currentMonth = new Date().getMonth();\r\n        const currentYear = new Date().getFullYear();\r\n        const daysInMonth = new Date(currentYear, currentMonth, 0).getDate();\r\n        let auxConsumosFacturados = 0\r\n        const series = [\r\n            {\r\n                name: 'Ventas',\r\n                data: Array.from({ length: daysInMonth }, () => 0),\r\n            },\r\n            {\r\n                name: 'Compras',\r\n                data: Array.from({ length: daysInMonth }, () => 0),\r\n            },\r\n        ];\r\n        \r\n    \r\n        if(sortedVentas){\r\n            for (const [year, data] of sortedVentas) {\r\n                // Itera sobre cada mes en el año\r\n                for (const [month, dataMonth] of Object.entries(data.months)) {\r\n                    if(year == currentYear){\r\n                        if(month-1==currentMonth){\r\n                            let auxSales= 0\r\n                            dataMonth.ventas.map((venta,i)=>{\r\n                                auxSales +=1\r\n                                const day = dataMonth.ventas[i].fecha.split('/')[0]-1\r\n                                series[0].data[day] = (series[0].data[day])+1\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if(sortedCompras){\r\n            for (const [year, data] of sortedCompras) {\r\n                // Itera sobre cada mes en el año\r\n                for (const [month, dataMonth] of Object.entries(data.months)) {\r\n                    if(year == currentYear){\r\n                        if(month-1==currentMonth){\r\n                            let auxSales= 0\r\n                            dataMonth.compras.map((compra,i)=>{\r\n                                auxSales +=1\r\n                                const day = dataMonth.compras[i].fecha.split('/')[0]-1\r\n                                series[1].data[day] = (series[1].data[day])+1\r\n                                if(dataMonth.compras[i].consumoFacturado){\r\n                                    auxConsumosFacturados += 1\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Define la configuración del gráfico\r\n        const options = {\r\n            labels:Array.from({ length: daysInMonth }, (value, index) => (index + 1).toString()),\r\n            theme:{\r\n                mode:'dark',\r\n                palette:'palette6'\r\n            },\r\n            stroke: {\r\n                curve: 'smooth'\r\n            },\r\n            chart:{\r\n                sparkline: {\r\n                    enabled: true\r\n                },\r\n                \r\n            },\r\n            \r\n        };\r\n    \r\n        let totalMonthSales = 0\r\n        let totalMonthPurchases = 0\r\n\r\n        series[0].data.map(serie=>(\r\n            totalMonthSales = totalMonthSales + serie\r\n        ))\r\n        series[1].data.map(serie=>(\r\n            totalMonthPurchases = totalMonthPurchases + serie\r\n        ))\r\n        // Renderiza el gráfico\r\n        return (\r\n            <Card>\r\n                <CardHeader\r\n                    title={`${totalMonthSales} - ${totalMonthPurchases-auxConsumosFacturados} (${auxConsumosFacturados})`}\r\n                    subheader={`Ventas & Compras - ${getActualMonthDetailed()}`}\r\n                />\r\n                <CardContent>\r\n                    <ApexCharts options={options} series={series} type='area' width={200} height={100}  />\r\n                </CardContent>\r\n            </Card>)\r\n    }\r\n    const generateChartMonthSalesValue = () => {\r\n        const currentMonth = new Date().getMonth();\r\n        const currentYear = new Date().getFullYear();\r\n        const daysInMonth = new Date(currentYear, currentMonth, 0).getDate();\r\n\r\n        const series = [\r\n            {\r\n            name: 'Ventas',\r\n            data: Array.from({ length: daysInMonth }, () => 0),\r\n            },\r\n        ];\r\n        let auxData=[\r\n            Array.from({ length: daysInMonth }, () => 0)\r\n        ]     \r\n    \r\n        if(sortedVentas){\r\n            for (const [year, data] of sortedVentas) {\r\n                // Itera sobre cada mes en el año\r\n                for (const [month, dataMonth] of Object.entries(data.months)) {\r\n                    if(year == currentYear){\r\n                        if(month-1==currentMonth){\r\n                            let auxSales= 0\r\n                            dataMonth.ventas.map((venta,i)=>{\r\n                                auxSales +=1\r\n                                const day = dataMonth.ventas[i].fecha.split('/')[0]-1\r\n                                auxData[0][day] = (auxData[0][day])+parseFloat(dataMonth.ventas[i].total?dataMonth.ventas[i].total:0)\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Define la configuración del gráfico\r\n        const options = {\r\n            labels:Array.from({ length: daysInMonth }, (value, index) => (index + 1).toString()),\r\n            theme:{\r\n                mode:'dark',\r\n                palette:'palette6'\r\n            },\r\n            stroke: {\r\n                curve: 'smooth'\r\n            },\r\n            chart:{\r\n                sparkline: {\r\n                    enabled: true\r\n                },\r\n            },\r\n            tooltip:{\r\n                y:{\r\n                    formatter: val=> `$ ${formatMoney(val)}`\r\n                }\r\n            }\r\n        };\r\n    \r\n        let totalMonth = 0\r\n        let auxBalance =  Array.from({ length: daysInMonth }, () => 0)\r\n        auxData[0].map((val,i)=>{\r\n            auxBalance[i]+=val\r\n            totalMonth+=val\r\n        })\r\n        auxBalance.map((val,i)=>{\r\n            if(i==0){\r\n                series[0].data[0] = val\r\n            }\r\n            else{\r\n                series[0].data[i]= series[0].data[i-1] + (val?val:0)\r\n            }\r\n        })\r\n\r\n        // Renderiza el gráfico\r\n        return (\r\n            <Card>\r\n                <CardHeader\r\n                    title={`$ ${formatMoney(totalMonth)}`}\r\n                    subheader={`Ventas - ${getActualMonthDetailed()}`}\r\n                />\r\n                <CardContent>\r\n                    <ApexCharts options={options} series={series} type='area' width={250} height={100} />\r\n                </CardContent>\r\n            </Card>)\r\n    }\r\n    const generateChartMonthPurchasesValue = () => {\r\n        const currentMonth = new Date().getMonth();\r\n        const currentYear = new Date().getFullYear();\r\n        const daysInMonth = new Date(currentYear, currentMonth, 0).getDate();\r\n\r\n        const series = [\r\n            {\r\n            name: 'Compras',\r\n            data: Array.from({ length: daysInMonth }, () => 0),\r\n            },\r\n        ];\r\n        let auxData=[\r\n            Array.from({ length: daysInMonth }, () => 0)\r\n        ]\r\n    \r\n        if(sortedCompras){\r\n            for (const [year, data] of sortedCompras) {\r\n                // Itera sobre cada mes en el año\r\n                for (const [month, dataMonth] of Object.entries(data.months)) {\r\n                    if(year == currentYear){\r\n                        if(month-1==currentMonth){\r\n                            dataMonth.compras.map((compra,i)=>{\r\n                                const day = dataMonth.compras[i].fecha.split('/')[0]-1\r\n                                auxData[0][day] = (auxData[0][day])+parseFloat(dataMonth.compras[i].total?dataMonth.compras[i].total:0)\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Define la configuración del gráfico\r\n        const options = {\r\n            labels:Array.from({ length: daysInMonth }, (value, index) => (index + 1).toString()),\r\n            theme:{\r\n                mode:'dark',\r\n                palette:'palette6'\r\n            },\r\n            stroke: {\r\n                curve: 'smooth'\r\n            },\r\n            chart:{\r\n                sparkline: {\r\n                    enabled: true\r\n                },\r\n            },\r\n            tooltip:{\r\n                y:{\r\n                    formatter: val=> `$ ${formatMoney(val)}`\r\n                }\r\n            }\r\n        };\r\n    \r\n\r\n        let totalMonth = 0\r\n        let auxBalance =  Array.from({ length: daysInMonth }, () => 0)\r\n        auxData[0].map((val,i)=>{\r\n            auxBalance[i]+=val\r\n            totalMonth+=val\r\n        })\r\n        auxBalance.map((val,i)=>{\r\n            if(i==0){\r\n                series[0].data[0] = val\r\n            }\r\n            else{\r\n                series[0].data[i]= series[0].data[i-1] + (val?val:0)\r\n            }\r\n        })\r\n\r\n        // Renderiza el gráfico\r\n        return (\r\n            <Card>\r\n                <CardHeader\r\n                    title={`$ ${formatMoney(totalMonth)}`}\r\n                    subheader={`Compras - ${getActualMonthDetailed()}`}\r\n                />\r\n                <CardContent>\r\n                    <ApexCharts options={options} series={series} type='area' width={250} height={100} />\r\n                </CardContent>\r\n            </Card>)\r\n    }\r\n    const generateChartMonthIva = () => {\r\n        const currentMonth = new Date().getMonth();\r\n        const currentYear = new Date().getFullYear();\r\n        const daysInMonth = new Date(currentYear, currentMonth, 0).getDate();\r\n        const series = [\r\n            {\r\n            name: 'Balance IVA',\r\n            data: Array.from({ length: daysInMonth }, () => 0),\r\n            type:'area'\r\n            },\r\n        ];\r\n        \r\n    let auxData=[\r\n        Array.from({ length: daysInMonth }, () => 0),\r\n        Array.from({ length: daysInMonth }, () => 0)\r\n    ]\r\n        if(sortedVentas){\r\n            for (const [year, data] of sortedVentas) {\r\n                // Itera sobre cada mes en el año\r\n                for (const [month, dataMonth] of Object.entries(data.months)) {\r\n                    if(year == currentYear){\r\n                        if(month-1==currentMonth){\r\n                            dataMonth.ventas.map((venta,i)=>{\r\n                                const day = dataMonth.ventas[i].fecha.split('/')[0]-1\r\n                                if(dataMonth.ventas[i].metodoDePago.facturacion){\r\n                                    auxData[0][day] = (auxData[0][day])+dataMonth.ventas[i].total-(dataMonth.ventas[i].total/1.21)\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if(sortedCompras){\r\n            for (const [year, data] of sortedCompras) {\r\n                // Itera sobre cada mes en el año\r\n                for (const [month, dataMonth] of Object.entries(data.months)) {\r\n                    if(year == currentYear){\r\n                        if(month-1==currentMonth){\r\n                            dataMonth.compras.map((venta,i)=>{\r\n                                const day = dataMonth.compras[i].fecha.split('/')[0]-1\r\n                                if(dataMonth.compras[i].metodoDePago.facturacion){\r\n                                    if(!dataMonth.compras[i].consumoFacturado){\r\n                                        auxData[1][day] = (auxData[1][day]) + ((parseInt(dataMonth.compras[i].total)) - (parseInt(dataMonth.compras[i].total)/1.21))\r\n                                    }\r\n                                    else{\r\n                                        auxData[1][day] = (auxData[1][day])+parseFloat(dataMonth.compras[i].totalIva)\r\n                                    }\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let totalMonth = 0\r\n        let auxBalance =  Array.from({ length: daysInMonth }, () => 0)\r\n        auxData[0].map((val,i)=>{\r\n            auxBalance[i]-=val\r\n            totalMonth-=val\r\n        })\r\n        auxData[1].map((val,i)=>{\r\n            auxBalance[i]+=val\r\n            totalMonth+=val\r\n        })\r\n        auxBalance.map((val,i)=>{\r\n            if(i==0){\r\n                series[0].data[0] = val\r\n            }\r\n            else{\r\n                series[0].data[i]= series[0].data[i-1] + (val?val:0)\r\n            }\r\n        })\r\n        console.log(series)\r\n        // Define la configuración del gráfico\r\n        const options = {\r\n            labels:Array.from({ length: daysInMonth }, (value, index) => (index + 1).toString()),\r\n            theme:{\r\n                mode:'dark',\r\n                palette:'palette6'\r\n            },\r\n            stroke: {\r\n                curve: 'smooth'\r\n            },\r\n            chart:{\r\n                background:'transparent',\r\n                sparkline: {\r\n                    enabled: true\r\n                },\r\n                \r\n            },\r\n            tooltip:{\r\n                y:{\r\n                    formatter: val=> `$ ${formatMoney(val)}`\r\n                }\r\n            }\r\n        };\r\n\r\n        // Renderiza el gráfico\r\n        return (\r\n            <Card className={totalMonth>=0?classes.cardBgGreen:classes.cardBgRed}>\r\n                <CardHeader\r\n                    title={`$ ${formatMoney(totalMonth)}`}\r\n                    subheader={`Iva - ${getActualMonthDetailed()}`}\r\n                    action={\r\n                        <>\r\n                            <Link \r\n                                style={{color:\"#fff\",textDecoration:'none'}}\r\n                                to={{\r\n                                    pathname:'/Nuevo-Consumo-Facturado'\r\n                            }}>\r\n                                <IconButton aria-label=\"settings\">\r\n                                    <Add/>\r\n                                </IconButton>\r\n                            </Link>\r\n                            <Link \r\n                                style={{color:\"#fff\",textDecoration:'none'}}\r\n                                to={{\r\n                                    pathname:'/Iva'\r\n                            }}>\r\n                            <IconButton aria-label=\"settings\">\r\n                                <List/>\r\n                            </IconButton>\r\n                        </Link>\r\n                        </>\r\n                    }\r\n                />\r\n                <CardContent>\r\n                    <ApexCharts options={options} series={series} width={250} height={100} />\r\n                </CardContent>\r\n            </Card>)\r\n    }\r\n    const generateChartMonthBalance = () => {\r\n        const currentMonth = new Date().getMonth();\r\n        const currentYear = new Date().getFullYear();\r\n        const daysInMonth = new Date(currentYear, currentMonth, 0).getDate();\r\n\r\n        const series = [\r\n            {\r\n            name: 'Balance',\r\n            data: Array.from({ length: daysInMonth }, () => 0),\r\n            },\r\n        ];\r\n        let auxData=[\r\n            Array.from({ length: daysInMonth }, () => 0),\r\n            Array.from({ length: daysInMonth }, () => 0)\r\n        ]\r\n        if(sortedVentas){\r\n            for (const [year, data] of sortedVentas) {\r\n                // Itera sobre cada mes en el año\r\n                for (const [month, dataMonth] of Object.entries(data.months)) {\r\n                    if(year == currentYear){\r\n                        if(month-1==currentMonth){\r\n                            dataMonth.ventas.map((venta,i)=>{\r\n                                const day = dataMonth.ventas[i].fecha.split('/')[0]-1\r\n                                if(dataMonth.ventas[i].metodoDePago.facturacion){\r\n                                    auxData[0][day] = (auxData[0][day])+(dataMonth.ventas[i].total?dataMonth.ventas[i].total/1.21:0)\r\n                                }\r\n                                else{\r\n                                    auxData[0][day] = (auxData[0][day])+dataMonth.ventas[i].total?dataMonth.ventas[i].total:0\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if(sortedCompras){\r\n            for (const [year, data] of sortedCompras) {\r\n                // Itera sobre cada mes en el año\r\n                for (const [month, dataMonth] of Object.entries(data.months)) {\r\n                    if(year == currentYear){\r\n                        if(month-1==currentMonth){\r\n                            dataMonth.compras.map((compra,i)=>{\r\n                                const day = dataMonth.compras[i].fecha.split('/')[0]-1\r\n                                if(dataMonth.compras[i].metodoDePago.facturacion){\r\n                                    if(dataMonth.compras[i].consumoFacturado){\r\n                                        auxData[1][day] = (auxData[1][day])+(dataMonth.compras[i].total?dataMonth.compras[i].total-dataMonth.compras[i].totalIva:0)\r\n                                    }\r\n                                    else{\r\n                                        auxData[1][day] = (auxData[1][day])+(dataMonth.compras[i].total?dataMonth.compras[i].total/1.21:0)\r\n                                    }\r\n                                }\r\n                                else{\r\n                                    auxData[1][day] = (auxData[1][day])+dataMonth.compras[i].total?dataMonth.compras[i].total:0\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        let totalMonth = 0\r\n        let auxBalance =  Array.from({ length: daysInMonth }, () => 0)\r\n        auxData[0].map((val,i)=>{\r\n            auxBalance[i]+=val\r\n            totalMonth+=val\r\n        })\r\n        auxData[1].map((val,i)=>{\r\n            auxBalance[i]-=val\r\n            totalMonth-=val\r\n        })\r\n        auxBalance.map((val,i)=>{\r\n            if(i==0){\r\n                series[0].data[0] = val\r\n            }\r\n            else{\r\n                series[0].data[i]= series[0].data[i-1] + (val?val:0)\r\n            }\r\n        })\r\n        // Define la configuración del gráfico\r\n        const options = {\r\n            labels:Array.from({ length: daysInMonth }, (value, index) => (index + 1).toString()),\r\n            theme:{\r\n                mode:'dark',\r\n                palette:'palette6'\r\n            },\r\n            stroke: {\r\n                curve: 'smooth'\r\n            },\r\n            chart:{\r\n                background:'transparent',\r\n                sparkline: {\r\n                    enabled: true\r\n                },\r\n            },\r\n            tooltip:{\r\n                y:{\r\n                    formatter: val=> `$ ${formatMoney(val)}`\r\n                }\r\n            }\r\n        };\r\n\r\n        // Renderiza el gráfico\r\n        return (\r\n            <Card className={totalMonth>0?classes.cardBgGreen:classes.cardBgRed}>\r\n                <CardHeader\r\n                    title={`$ ${formatMoney(totalMonth)}`}\r\n                    subheader={`Balance - ${getActualMonthDetailed()}`}                />\r\n                <CardContent>\r\n                    <ApexCharts options={options} series={series} type='area' width={250} height={100} />\r\n                </CardContent>\r\n            </Card>)\r\n    }\r\n    \r\n\r\n    // FILTERS \r\n    const filtrarCompras = () =>{\r\n        const yearsCompras = {};\r\n        if(props.compras){\r\n            Object.keys(props.compras).reverse().forEach((compra) => {\r\n                const year = props.compras[compra].fecha.split('/')[2];\r\n                const month = props.compras[compra].fecha.split('/')[1];\r\n            \r\n                // Si aún no tenemos el año en el objeto \"years\", lo agregamos\r\n                if (!yearsCompras[year]) {\r\n                    yearsCompras[year] = { total: 0, months: {\r\n                        1:{ total: 0, compras: [] },\r\n                        2:{ total: 0, compras: [] },\r\n                        3:{ total: 0, compras: [] },\r\n                        4:{ total: 0, compras: [] },\r\n                        5:{ total: 0, compras: [] },\r\n                        6:{ total: 0, compras: [] },\r\n                        7:{ total: 0, compras: [] },\r\n                        8:{ total: 0, compras: [] },\r\n                        9:{ total: 0, compras: [] },\r\n                        10:{ total: 0, compras: [] },\r\n                        11:{ total: 0, compras: [] },\r\n                        12:{ total: 0, compras: [] }\r\n                    }}\r\n                }\r\n\r\n\r\n                \r\n                // Agregamos la compra al objeto \"compras\" del mes correspondiente\r\n                yearsCompras[year].months[month].compras.push(props.compras[compra]);\r\n            \r\n                // Actualizamos el total del mes y del año\r\n                yearsCompras[year].months[month].total += parseFloat(props.compras[compra].total?props.compras[compra].total:0);\r\n                yearsCompras[year].total += parseFloat(props.compras[compra].total?props.compras[compra].total:0);\r\n            });\r\n        \r\n            const sortedCompras = Object.entries(yearsCompras).sort(([year1], [year2]) => year2 - year1);\r\n            return sortedCompras\r\n        }\r\n    }\r\n    const filtrarVentas = () =>{\r\n        const yearsVentas = {};\r\n        if(props.ventas){\r\n            Object.keys(props.ventas).reverse().forEach((venta) => {\r\n                const year = props.ventas[venta].fecha.split('/')[2];\r\n                const month = props.ventas[venta].fecha.split('/')[1];\r\n            \r\n                if (!yearsVentas[year]) {\r\n                    yearsVentas[year] = { total: 0, months: {\r\n                        1:{ total: 0, ventas: [] },\r\n                        2:{ total: 0, ventas: [] },\r\n                        3:{ total: 0, ventas: [] },\r\n                        4:{ total: 0, ventas: [] },\r\n                        5:{ total: 0, ventas: [] },\r\n                        6:{ total: 0, ventas: [] },\r\n                        7:{ total: 0, ventas: [] },\r\n                        8:{ total: 0, ventas: [] },\r\n                        9:{ total: 0, ventas: [] },\r\n                        10:{ total: 0, ventas: [] },\r\n                        11:{ total: 0, ventas: [] },\r\n                        12:{ total: 0, ventas: [] }\r\n                    }}\r\n                }\r\n            \r\n                // Agregamos la venta al objeto \"ventas\" del mes correspondiente\r\n                yearsVentas[year].months[month].ventas.push(props.ventas[venta]);\r\n                // Actualizamos el total del mes y del año\r\n                yearsVentas[year].months[month].total += parseFloat(props.ventas[venta].total?props.ventas[venta].total:0);\r\n                yearsVentas[year].total += parseFloat(props.ventas[venta].total?props.ventas[venta].total:0);\r\n            });\r\n        \r\n            const sortedVentas = Object.entries(yearsVentas).sort(([year1], [year2]) => year2 - year1);\r\n            console.log(sortedVentas)\r\n\r\n            return sortedVentas\r\n        }\r\n    }\r\n    const filtrarProductos = (ventas) =>{\r\n        const currentYear = new Date().getFullYear();\r\n\r\n        const data = [];\r\n        if(ventas){\r\n            ventas.filter(([year]) => year === (currentYear).toString()).forEach(([_, yearData]) => {\r\n                Object.keys(yearData.months).map((month) => {\r\n                    yearData.months[month].ventas.map((venta,i)=>{\r\n                        yearData.months[month].ventas[i].articulos.map((articulo,v)=>{\r\n                            // Verificamos si ya tenemos el producto en el array\r\n                            const index = data.findIndex((d) => d.producto === yearData.months[month].ventas[i].articulos[v].producto);\r\n                            if (index === -1) {\r\n                                // Si no lo encontramos, lo agregamos\r\n                                if(yearData.months[month].ventas[i].metodoDePago.facturacion){\r\n                                    data.push({ producto: yearData.months[month].ventas[i].articulos[v].producto, cantidad: parseInt(yearData.months[month].ventas[i].articulos[v].cantidad),total:(yearData.months[month].ventas[i].articulos[v].total?yearData.months[month].ventas[i].articulos[v].total/1.21:0) });\r\n                                }\r\n                                else{\r\n                                    data.push({ producto: yearData.months[month].ventas[i].articulos[v].producto, cantidad: parseInt(yearData.months[month].ventas[i].articulos[v].cantidad),total:yearData.months[month].ventas[i].articulos[v].total?yearData.months[month].ventas[i].articulos[v].total:0 });\r\n                                }\r\n                            } else {\r\n                                if(yearData.months[month].ventas[i].metodoDePago.facturacion){\r\n                                    data[index].cantidad += parseInt(yearData.months[month].ventas[i].articulos[v].cantidad);\r\n                                    data[index].total += (yearData.months[month].ventas[i].articulos[v].total?yearData.months[month].ventas[i].articulos[v].total/1.21:0);\r\n                                }\r\n                                else{\r\n                                    // Si lo encontramos, sumamos la cantidad y el total\r\n                                    data[index].cantidad += parseInt(yearData.months[month].ventas[i].articulos[v].cantidad);\r\n                                    data[index].total += yearData.months[month].ventas[i].articulos[v].total?yearData.months[month].ventas[i].articulos[v].total:0;\r\n                                }\r\n                            }\r\n                        })\r\n                    })\r\n                });\r\n            })\r\n            return data\r\n        }\r\n    }\r\n    const filtrarClientes = (ventas) =>{\r\n        const currentYear = new Date().getFullYear();\r\n\r\n        const data = [];\r\n        if(ventas){\r\n            ventas.filter(([year]) => year === (currentYear).toString()).forEach(([_, yearData]) => {\r\n                Object.keys(yearData.months).map((month) => {\r\n                    yearData.months[month].ventas.map((venta,i)=>{\r\n                        if(yearData.months[month].ventas[i].cliente){\r\n                            // Verificamos si ya tenemos el producto en el array\r\n                            const index = data.findIndex((d) => d.nombre === yearData.months[month].ventas[i].cliente);\r\n                            if (index === -1) {\r\n                                if(yearData.months[month].ventas[i].metodoDePago.facturacion){\r\n                                    data.push({ nombre: yearData.months[month].ventas[i].cliente,total:(yearData.months[month].ventas[i].total/1.21) });\r\n                                }\r\n                                else{\r\n                                    data.push({ nombre: yearData.months[month].ventas[i].cliente,total:yearData.months[month].ventas[i].total });\r\n                                }\r\n                                // Si no lo encontramos, lo agregamos\r\n                            } \r\n                            else {\r\n                                if(yearData.months[month].ventas[i].metodoDePago.facturacion){\r\n                                    data[index].total += (yearData.months[month].ventas[i].total/1.21);\r\n                                }\r\n                                else{\r\n                                    // Si lo encontramos, sumamos la cantidad y el total\r\n                                    data[index].total += yearData.months[month].ventas[i].total;\r\n                                }\r\n                            }\r\n                        }\r\n                    })\r\n                });\r\n            })\r\n            return data\r\n        }\r\n    }\r\n    \r\n    \r\n\r\n    useEffect(()=>{\r\n        setLoading(true)\r\n\r\n        const auxSortedCompras = filtrarCompras()\r\n        const auxSortedVentas = filtrarVentas()\r\n        const auxSortedProductos = filtrarProductos(auxSortedVentas)\r\n        const auxSortedClientes = filtrarClientes(auxSortedVentas)\r\n        setSortedCompras(auxSortedCompras)\r\n        setSortedVentas(auxSortedVentas)\r\n        setSortedProductos(auxSortedProductos)\r\n        setSortedClientes(auxSortedClientes)\r\n\r\n        setLoading(false)\r\n    },[props.compras,props.ventas])\r\n\r\n\r\n    \r\n\r\n    return(\r\n        //Layout\r\n        <Layout history={props.history} page=\"Inicio\" user={props.user.uid}>\r\n            <Paper className={classes.content}>\r\n                <Grid container item xs={12}>\r\n                    {!loading && props.ventas?  \r\n                        <Grid container xs={12} spacing={3} justify='center'>\r\n                            <Grid container item xs={12} justify='center' spacing={3}>\r\n                                <Grid item>\r\n                                    <Paper>\r\n                                        {generateChartMonthSalesValue()}\r\n                                    </Paper>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Paper>\r\n                                        {generateChartMonthPurchasesValue()}\r\n                                    </Paper>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Paper>\r\n                                        {generateChartMonthIva()}\r\n                                    </Paper>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Paper>\r\n                                        {generateChartMonthBalance()}\r\n                                    </Paper>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container xs={12} justify='center' spacing={3}>\r\n                                <Grid container item xs={12} md={8} justify='center'>\r\n                                    <Paper>\r\n                                        {generateChartAnualSales()}\r\n                                    </Paper>\r\n                                </Grid>\r\n                                <Grid container item xs={12} md={6} justify='center'>\r\n                                    <Paper>\r\n                                        {generateChartAnualProductsValue()}\r\n                                    </Paper>\r\n                                </Grid>\r\n                                <Grid container item xs={12} md={6} justify='center'>\r\n                                    <Paper>\r\n                                        {generateChartAnualProducts()}\r\n                                    </Paper>\r\n                                </Grid>\r\n                                <Grid container item xs={12} md={6} justify='center'>\r\n                                    <Paper>\r\n                                        {generateChartAnualIva()}\r\n                                    </Paper>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container item xs={12} justify='center' spacing={3}>\r\n                                <Grid item>\r\n                                    <Card>\r\n                                        <CardHeader\r\n                                            title={\r\n                                                <AppBar position=\"static\">\r\n                                                    <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n                                                        <Tab label=\"Valor\" />\r\n                                                        <Tab label=\"Cantidad\" />\r\n                                                    </Tabs>\r\n                                                </AppBar>\r\n                                            }\r\n                                        />\r\n                                        <CardContent>\r\n                                            <TabPanel value={value}  index={0}>\r\n                                                <Grid container spacing={3}>\r\n                                                    <Grid item>\r\n                                                        <Paper>\r\n                                                            {generateChartProductsValue()}\r\n                                                        </Paper>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </TabPanel>\r\n                                            <TabPanel value={value}  index={1}>\r\n                                                <Grid container spacing={3}>\r\n                                                    <Grid item>\r\n                                                        <Paper>\r\n                                                            {generateChartAnualProductsUnits()}\r\n                                                        </Paper>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </TabPanel>\r\n                                        </CardContent>\r\n                                    </Card>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        :\r\n                        null\r\n                    }\r\n                </Grid>\r\n                <Grid container xs={12} justify='center' spacing={2}>\r\n                    <Grid container item xs={12} justify='center'>\r\n                        <Typography variant='h4'>Seccion En Construccion</Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <img src={Home} alt=\"\" height='600px'/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n\r\n            {/* BACKDROP & SNACKBAR */}\r\n            <Backdrop className={classes.backdrop} open={loading}>\r\n                <CircularProgress color=\"inherit\" />\r\n                <Snackbar open={showSnackbar} autoHideDuration={2000} onClose={()=>{setshowSnackbar('')}}>\r\n                    <Alert severity=\"success\" variant='filled'>\r\n                        {showSnackbar}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </Backdrop>\r\n        </Layout>\r\n    )\r\n}\r\n\r\n//REDUX STATE TO PROPS\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        compras:state.compras,\r\n        ventas:state.ventas,\r\n        dolares:state.dolares\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Inicio)","import React from 'react'\r\nimport {makeStyles,CardHeader,Button,Card,CardContent,Typography,TextField,CardActions,Grid,Chip,IconButton,Link as LinkComponent} from '@material-ui/core'\r\nimport {AttachMoney,History,Add} from '@material-ui/icons'\r\nimport {Link} from 'react-router-dom'\r\nimport {formatMoney} from '../../utilities'\r\nimport {content} from '../../Pages/styles/styles'\r\n\r\n// COMPONENT\r\nconst CardDeudaCliente=({nombre,search,deuda})=>{\r\n    const classes = content()\r\n\r\n    return(\r\n        <Grid item xs={8} sm={6} md={4} lg={3} className={!search?null:nombre.toLowerCase().search(search.toLowerCase()) == -1 ? classes.displayNone:classes.display}>\r\n            <Card className={classes.cardCliente}>\r\n                <CardHeader \r\n                    title={\r\n                        <Link \r\n                            style={{color:\"#fff\",textDecoration:'none'}}\r\n                            to={{\r\n                            pathname:'/Cliente',\r\n                            search:nombre\r\n                        }}>\r\n                            <Typography variant=\"h5\">\r\n                                {nombre}\r\n                            </Typography>\r\n                        </Link>\r\n                    }\r\n                    action={\r\n                        <>\r\n                            <Link \r\n                                style={{color:\"#fff\",textDecoration:'none'}}\r\n                                to={{\r\n                                    pathname:'/Historial-Cliente',\r\n                                    search:nombre,\r\n                            }}>\r\n                                <IconButton aria-label=\"settings\">\r\n                                    <History/>\r\n                                </IconButton>\r\n                            </Link>\r\n                            <Link \r\n                            style={{color:\"#fff\",textDecoration:'none'}}\r\n                            to={{\r\n                                pathname:'/Nuevo-Pago-Cliente',\r\n                                search:nombre,\r\n                        }}>\r\n                            <IconButton aria-label=\"settings\">\r\n                                <Add/>\r\n                            </IconButton>\r\n                        </Link>\r\n                        </>\r\n                    }\r\n                />\r\n                <CardContent>\r\n                    <Grid container item xs={12} justify='center'>\r\n                        <Chip\r\n                            className={deuda>0?classes.chipCardDangerCliente:classes.chipCardSuccessCliente}\r\n                            variant=\"outlined\"\r\n                            icon={<AttachMoney/>}\r\n                            label={formatMoney(deuda>=0?deuda:-deuda)}\r\n                        />\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    )\r\n}\r\nexport default CardDeudaCliente","import React from 'react'\r\nimport {makeStyles,CardHeader,Button,Card,CardContent,Typography,TextField,CardActions,Grid,Chip,IconButton,Link as LinkComponent} from '@material-ui/core'\r\nimport {AttachMoney,History,Add} from '@material-ui/icons'\r\nimport {Link} from 'react-router-dom'\r\nimport {formatMoney} from '../../utilities'\r\nimport {content} from '../../Pages/styles/styles'\r\n\r\n// COMPONENT\r\nconst CardDeudaProveedor=({nombre,search,deuda})=>{\r\n    const classes = content()\r\n\r\n    return(\r\n        <Grid item xs={8} sm={6} md={4} lg={3} className={!search?null:nombre.toLowerCase().search(search.toLowerCase()) == -1 ? classes.displayNone:classes.display}>\r\n            <Card className={classes.cardCliente}>\r\n                <CardHeader \r\n                    title={\r\n                        <Link \r\n                            style={{color:\"#fff\",textDecoration:'none'}}\r\n                            to={{\r\n                            pathname:'/Proveedor',\r\n                            search:nombre\r\n                        }}>\r\n                            <Typography variant=\"h5\">\r\n                                {nombre}\r\n                            </Typography>\r\n                        </Link>\r\n                    }\r\n                    action={\r\n                        <>\r\n                            <Link \r\n                                style={{color:\"#fff\",textDecoration:'none'}}\r\n                                to={{\r\n                                    pathname:'/Historial-Proveedor',\r\n                                    search:nombre,\r\n                            }}>\r\n                                <IconButton aria-label=\"settings\">\r\n                                    <History/>\r\n                                </IconButton>\r\n                            </Link>\r\n                            <Link \r\n                            style={{color:\"#fff\",textDecoration:'none'}}\r\n                            to={{\r\n                                pathname:'/Nuevo-Pago-Proveedor',\r\n                                search:nombre,\r\n                        }}>\r\n                            <IconButton aria-label=\"settings\">\r\n                                <Add/>\r\n                            </IconButton>\r\n                        </Link>\r\n                        </>\r\n                    }\r\n                />\r\n                <CardContent>\r\n                <Grid container item xs={12} justify='center'>\r\n                    <Chip\r\n                        className={deuda>0?classes.chipCardDangerCliente:classes.chipCardSuccessCliente}\r\n                        variant=\"outlined\"\r\n                        icon={<AttachMoney/>}\r\n                        label={formatMoney(deuda>=0?deuda:-deuda)}\r\n                    />\r\n                </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    )\r\n}\r\nexport default CardDeudaProveedor","import React,{useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {Backdrop,Paper,CircularProgress,Tab,Typography,TextField,Grid,AppBar,Box,Tabs,Link as LinkComponent,Snackbar,Card,CardHeader,CardContent} from '@material-ui/core'\r\nimport {Alert} from '@material-ui/lab'\r\nimport {AttachMoney,PersonAdd} from '@material-ui/icons'\r\nimport {Link} from 'react-router-dom'\r\nimport {formatMoney} from '../utilities'\r\nimport {content} from './styles/styles'\r\nimport CardDeudaCliente from '../components/Deudas/CardDeudaCliente'\r\nimport CardDeudaProveedor from '../components/Deudas/CardDeudaProveedor'\r\nimport { useEffect } from 'react'\r\nimport ApexCharts from 'react-apexcharts';\r\n\r\n\r\n// COMPONENT\r\nconst Deudas=(props)=>{\r\n    const classes = content()\r\n    const [search,setSearch]=useState('')\r\n    const [showSnackbar,setshowSnackbar]=useState('')\r\n    const [loading,setLoading]=useState(true)\r\n    const [totalClientes,setTotalClientes]=useState(0)\r\n    const [totalProveedores,setTotalProveedores]=useState(0)\r\n    const [value,setValue]=useState(0)\r\n\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    const TabPanel=(props)=>{\r\n        const { children, value, index, ...other } = props;\r\n      \r\n        return (\r\n          <div\r\n            role=\"tabpanel\"\r\n            className={classes.tabPanelDeuda}\r\n            hidden={value !== index}\r\n          >\r\n            {value === index && (\r\n              <Box p={3}>\r\n                <Typography>{children}</Typography>\r\n              </Box>\r\n            )}\r\n          </div>\r\n        )\r\n    }\r\n\r\n    // CHARTS \r\n    const generateChartDeudasClientes = () => {\r\n\r\n        let series = []\r\n        let labels = []\r\n\r\n        Object.keys(props.clientes).map(cliente=>{\r\n            if(props.clientes[cliente].datos.deuda>0){\r\n                series.push(props.clientes[cliente].datos.deuda)\r\n                labels.push(props.clientes[cliente].datos.nombre)\r\n            }\r\n        })\r\n\r\n        // Define la configuración del gráfico\r\n        const options = {\r\n            labels:labels,\r\n            series:series,\r\n            theme:{\r\n                mode:'dark',\r\n                palette:'palette3'\r\n            },\r\n            chart:{\r\n                sparkline:{\r\n                    enabled:true\r\n                }\r\n            },\r\n            tooltip:{\r\n                fillSeriesColor:false,\r\n                y:{\r\n                    formatter: val=> `$ ${formatMoney(val)}`\r\n                }\r\n            }\r\n        };\r\n    \r\n        // Renderiza el gráfico\r\n        return (\r\n            <Card>\r\n                <CardHeader\r\n                    subheader='Deudas por Cliente'\r\n                />\r\n                <CardContent>\r\n                    <ApexCharts options={options} series={series} type='donut' width={300} />\r\n                </CardContent>\r\n            </Card>)\r\n    }\r\n    const generateChartDeudasProveedores = () => {\r\n\r\n        let series = []\r\n        let labels = []\r\n\r\n        Object.keys(props.proveedores).map(proveedor=>{\r\n            if(props.proveedores[proveedor].datos.deuda>0){\r\n                series.push(props.proveedores[proveedor].datos.deuda)\r\n                labels.push(props.proveedores[proveedor].datos.nombre)\r\n            }\r\n        })\r\n\r\n        // Define la configuración del gráfico\r\n        const options = {\r\n            labels:labels,\r\n            series:series,\r\n            theme:{\r\n                mode:'dark',\r\n                palette:'palette3'\r\n            },\r\n            chart:{\r\n                sparkline:{\r\n                    enabled:true\r\n                }\r\n            },\r\n            tooltip:{\r\n                fillSeriesColor:false,\r\n                y:{\r\n                    formatter: val=> `$ ${formatMoney(val)}`\r\n                }\r\n            }\r\n        };\r\n    \r\n        // Renderiza el gráfico\r\n        return (\r\n            <Card>\r\n                <CardHeader\r\n                    subheader='Deudas por Proveedor'\r\n                />\r\n                <CardContent>\r\n                    <ApexCharts options={options} series={series} type='donut' width={300} />\r\n                </CardContent>\r\n            </Card>)\r\n    }\r\n    useEffect(()=>{\r\n        let auxFilteredDeudas = 0\r\n        if(props.clientes){\r\n            Object.values(props.clientes).map(cliente=>{\r\n                auxFilteredDeudas += cliente.datos.deuda\r\n            })\r\n            setTotalClientes(auxFilteredDeudas)\r\n            auxFilteredDeudas=0\r\n        }\r\n        if(props.proveedores){\r\n            Object.values(props.proveedores).map(proveedor=>{\r\n                auxFilteredDeudas += proveedor.datos.deuda\r\n            })\r\n            setTotalProveedores(auxFilteredDeudas)\r\n        }\r\n        setLoading(false)\r\n    },[])\r\n    return(\r\n        <Layout history={props.history} page=\"Deudas\" user={props.user.uid}>\r\n            {/* CONTENT */}\r\n            <Paper className={classes.content}>\r\n                <Grid container xs={12} spacing={4} >\r\n                     <Grid container item xs={12} justify='center'>\r\n                        <TextField\r\n                            value={search}\r\n                            onChange={e=>{\r\n                                setSearch(e.target.value)\r\n                            }}\r\n                            label='Buscar'\r\n                        />\r\n                    </Grid>\r\n                    <Grid container item xs={12} justify='center'>\r\n                        <Grid item>\r\n                            <AppBar position=\"static\">\r\n                                <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n                                    <Tab label=\"Clientes\" />\r\n                                    <Tab label=\"Proveedores\" />\r\n                                </Tabs>\r\n                            </AppBar>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {/* DEUDAS CLIENTES */}\r\n                    <TabPanel value={value}  index={0}>\r\n                        <Grid container item xs={12} justify='center'>\r\n                            {props.clientes?\r\n                                <Grid container item xs={12} justify='center' alignItems='center' spacing={3}>\r\n                                    <Grid container item xs={12} justify='center'>\r\n                                        <Typography  variant='h5' textAlign='center'>\r\n                                            Total ${formatMoney(totalClientes)}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid container item xs={12} justify='center'>\r\n                                        {generateChartDeudasClientes()}\r\n                                    </Grid>\r\n                                    <Grid container justify='center' alignItems='center' spacing={4}>\r\n                                        {Object.keys(props.clientes).map(key=>(\r\n                                            props.clientes[key].datos.deuda != 0 ?\r\n                                                <CardDeudaCliente nombre={key} search={search} deuda={props.clientes[key].datos.deuda}/>\r\n                                            :\r\n                                            null\r\n                                        ))}\r\n                                    </Grid>\r\n                                </Grid>\r\n                                :\r\n                                null\r\n                            }\r\n                        </Grid>\r\n                    </TabPanel>\r\n\r\n                    {/* DEUDAS PROVEEDORES */}\r\n                    <TabPanel value={value} style={{width:'100%'}} index={1}>\r\n                        <Grid container item xs={12} justify='center'>\r\n                            {props.proveedores?\r\n                                <Grid container item xs={12} justify='center' alignItems='center' spacing={3}>\r\n                                    <Grid container item xs={12} justify='center'>\r\n                                        <Typography  variant='h5' textAlign='center'>\r\n                                            Total ${formatMoney(totalProveedores)}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid container item xs={12} justify='center'>\r\n                                        {generateChartDeudasProveedores()}\r\n                                    </Grid>\r\n                                    <Grid container item justify='center' alignItems='center' spacing={4}>\r\n                                        {Object.keys(props.proveedores).map(key=>(\r\n                                            props.proveedores[key].datos.deuda != 0 ?\r\n                                            <CardDeudaProveedor nombre={key} search={search} deuda={props.proveedores[key].datos.deuda}/>\r\n                                            :\r\n                                            null\r\n                                        ))}\r\n                                    </Grid>\r\n                                </Grid>\r\n                                :\r\n                                null\r\n                            }\r\n                            \r\n                        </Grid>\r\n                    </TabPanel>\r\n                </Grid>\r\n            </Paper>\r\n\r\n            {/* BACKDROP & SNACKBAR */}\r\n            <Backdrop className={classes.backdrop} open={loading}>\r\n                <CircularProgress color=\"inherit\" />\r\n                <Snackbar open={showSnackbar} autoHideDuration={2000} onClose={()=>{setshowSnackbar('')}}>\r\n                    <Alert severity=\"success\" variant='filled'>\r\n                        {showSnackbar}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </Backdrop>\r\n        </Layout>\r\n    )\r\n}\r\n\r\n//REDUX STATE TO PROPS\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        clientes:state.clientes,\r\n        proveedores:state.proveedores,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Deudas)","import React, {useState,useEffect} from 'react'\r\nimport {Grid,Card,CardContent,IconButton,Typography,Chip,Button,CardHeader,Paper,Menu,MenuItem,Collapse, List,ListItem, ListItemText,Switch,FormControlLabel, CardActions} from '@material-ui/core'\r\nimport {MoreVert,AttachMoney,ExpandMore,ExpandLess} from '@material-ui/icons'\r\nimport {Link} from 'react-router-dom'\r\nimport {database} from 'firebase'\r\nimport {formatMoney} from '../../utilities'\r\nimport {content} from '../../Pages/styles/styles'\r\n\r\nexport const CardPedido = ({pedido,id,deuda,setShowDialogDelete,setDeleteIndex,setUpdatePricesIndex,setShowDialogUpdatePrices,tipoDeCambio}) =>{\r\n    const classes = content()\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [facturacion,setFacturacion]=useState(false)\r\n    const [confirmPriceUpdate,setConfirmPriceUpdate]=useState(false)\r\n    const [expanded, setExpanded] = useState(false);\r\n\r\n    //Menu More\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return(\r\n        <Grid item xs={11} sm={8} md={6} lg={4} >\r\n            <Card>\r\n                <Paper elevation={3} className={classes.cardPedidoHeader}>\r\n                    <CardHeader\r\n                        className={classes.header}\r\n                        action={\r\n                            <>\r\n                                <IconButton onClick={()=>{setExpanded(!expanded)}}>\r\n                                    {expanded?\r\n                                        <ExpandLess/>\r\n                                        :\r\n                                        <ExpandMore/>\r\n                                    }\r\n                                </IconButton>\r\n                                <IconButton aria-label=\"settings\" onClick={handleClick}>\r\n                                    <MoreVert/>\r\n                                </IconButton>\r\n                                <Menu\r\n                                    id=\"simple-menu\"\r\n                                    anchorEl={anchorEl}\r\n                                    keepMounted\r\n                                    open={Boolean(anchorEl)}\r\n                                    onClose={handleClose}\r\n                                    >\r\n                                        <Link\r\n                                            style={{color:'#fff',textDecoration:'none',cursor:'pointer'}}\r\n                                            to={{\r\n                                                pathname:'/Editar-Pedido',\r\n                                                search:`${id}`\r\n                                        }}>\r\n                                            <MenuItem>Editar</MenuItem>\r\n                                        </Link>   \r\n                                    <MenuItem className={classes.deleteButton} onClick={()=>{\r\n                                        setAnchorEl(null)\r\n                                        setShowDialogDelete(true)\r\n                                        setDeleteIndex(id)\r\n                                    }}>\r\n                                        Eliminar\r\n                                    </MenuItem>\r\n                                    {parseFloat(tipoDeCambio) != parseFloat(pedido.cotizacion.valor)?\r\n                                        <MenuItem className={classes.deleteButton} onClick={()=>{\r\n                                            setAnchorEl(null)\r\n                                            setShowDialogUpdatePrices(true)\r\n                                            setUpdatePricesIndex(id)\r\n                                        }}>\r\n                                            Actualizar precios\r\n                                        </MenuItem>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </Menu>\r\n                            </>\r\n                        }\r\n                        title={\r\n                            <Grid container xs={12} justify='flex-start' spacing={3}>\r\n                                <Grid item>\r\n                                    <Link \r\n                                        style={{color:'#fff',textDecoration:'none'}}\r\n                                        className={classes.textWhite}\r\n                                        to={{pathname:'/Cliente',search:`${pedido.cliente}`}\r\n                                    }>\r\n                                        {pedido.cliente} \r\n                                    </Link>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Chip\r\n                                        className={deuda>0?classes.cardDeudaRedCardPedido:classes.cardDeudaGreenCardPedido}\r\n                                        icon={<AttachMoney/>}\r\n                                        label={deuda?formatMoney(deuda):formatMoney(0)}\r\n                                    />\r\n\r\n                                </Grid>\r\n                            </Grid>\r\n                        }\r\n                        subheader={pedido.fecha}\r\n                    />\r\n                </Paper>\r\n                <Collapse in={expanded} timeout='auto' unmountOnExit>\r\n                    <CardContent>\r\n                        <List>\r\n                            <ListItem>\r\n                                <ListItemText primary={`$${pedido.cotizacion.valor}`} secondary={pedido.cotizacion.nombre}/>\r\n                            </ListItem>\r\n                            {pedido.productos.map(producto=>(\r\n                                <ListItem>\r\n                                    <ListItemText primary={`${producto.cantidad} ${producto.producto}`} secondary={`$${formatMoney(facturacion?((producto.precio + (producto.precio*0.21)) * producto.cantidad ):(producto.precio*producto.cantidad))} ($${formatMoney(facturacion?(producto.precio + (producto.precio*0.21)):producto.precio)} c/u)`}/>\r\n                                    {producto.discount?\r\n                                        <ListItemText \r\n                                            primary={<Chip\r\n                                                className={classes.cardProductoChip}\r\n                                                variant=\"default\"\r\n                                                label={`-${producto.discount}%`}\r\n                                            />}\r\n                                        />\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                    {producto.increase?\r\n                                        <ListItemText \r\n                                            primary={<Chip\r\n                                                className={classes.cardProductoChip}\r\n                                                variant=\"default\"\r\n                                                label={`+${producto.increase}%`}\r\n                                            />}\r\n                                        />\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    </CardContent>\r\n                </Collapse>\r\n                <Paper elevation={3} className={classes.cardPedidoActions}>\r\n                    <CardActions>\r\n                        <Grid container justify='space-around'>\r\n                            <Typography variant='h5'>\r\n                                {facturacion?\r\n                                    `$ ${formatMoney(pedido.total+pedido.total*0.21)}`\r\n                                    :\r\n                                    `$ ${formatMoney(pedido.total)}`\r\n                                }\r\n                            </Typography>\r\n                            <FormControlLabel\r\n                            control={\r\n                                <Switch\r\n                                    checked={facturacion}\r\n                                    onChange={e=>{\r\n                                        setFacturacion(e.target.checked)\r\n                                    }}\r\n                                />\r\n                            }\r\n                                label=\"Facturacion \"/>\r\n                            <Link\r\n                                style={{color:'#fff',textDecoration:'none'}}\r\n                                className={classes.textWhite}\r\n                                to={{\r\n                                    pathname:'/Enviar-Pedido',\r\n                                    search:`${id}`,\r\n                                    props:{\r\n                                        total: facturacion?pedido.total+(pedido.total*0.21) : pedido.total,\r\n                                        facturacion:facturacion,\r\n                                        nombre:pedido.cliente\r\n                                    }}\r\n                            }>\r\n                                <Button\r\n                                    variant='outlined'\r\n                                >\r\n                                    Enviar Pedido \r\n                                </Button>\r\n                            </Link>\r\n                        </Grid>\r\n                    </CardActions>\r\n                </Paper>\r\n            </Card>\r\n        </Grid>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Dialog,DialogTitle,DialogActions,Button,DialogContent} from '@material-ui/core'\r\n\r\n\r\nexport const DialogConfirmAction = ({showDialog,setShowDialog,action,tipo}) =>{   \r\n    return(\r\n        <Dialog open={showDialog}>\r\n            <DialogTitle>\r\n                Desea {tipo}?\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                Si continua se perderan los datos ingresados\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button \r\n                    onClick={()=>{\r\n                        setShowDialog(false)\r\n                    }}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n                <Button\r\n                    color='primary'\r\n                    onClick={()=>{\r\n                        action()\r\n                    }}\r\n                >\r\n                    Continuar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React, {useState,useEffect} from 'react'\r\nimport {Grid,Card,CardContent,IconButton,Chip,InputLabel,CardHeader,Paper,Menu,MenuItem,Collapse, List,ListItem, ListItemText,Select,Input, CardActions, Divider} from '@material-ui/core'\r\nimport {MoreVert,AttachMoney,ExpandMore,ExpandLess, Add} from '@material-ui/icons'\r\nimport {Alert} from '@material-ui/lab'\r\nimport {Link} from 'react-router-dom'\r\nimport {database} from 'firebase'\r\nimport {formatMoney} from '../../utilities'\r\nimport {content} from '../../Pages/styles/styles'\r\n\r\nexport const Cheque = ({cheque,search,guardarChequeRebotado,id,guardarChequeEnBlanco,guardarChequeEnNegro,setShowDialogDelete,setDeleteIndex,setShowDialogSelectGroup,setIdGroup}) =>{\r\n    const classes = content()\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [facturacion,setFacturacion]=useState(false)\r\n    const [expanded, setExpanded] = useState(false);\r\n\r\n    //Menu More\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return(\r\n        <>\r\n            {console.log(cheque)}\r\n            <Grid item xs={11} sm={8} md={6} lg={4} className={!search?null:cheque.numero.search(search) == -1 ? classes.displayNone:classes.display}>\r\n                    <Card>\r\n                        <Paper elevation={3} className={cheque.dadoDeBaja?classes.cardChequeHeaderBaja:(cheque.destinatario?classes.cardChequeEnviadoHeader:classes.cardChequeHeader)}>\r\n                            <CardHeader\r\n                                className={cheque.dadoDeBaja?classes.cardHeaderChequeIconDanger:(cheque.destinatario?classes.cardHeaderChequeIconSuccess:null)}\r\n                                action={\r\n                                    <>\r\n                                        <IconButton onClick={()=>{setExpanded(!expanded)}}>\r\n                                            {expanded?\r\n                                                <ExpandLess className={cheque.dadoDeBaja?classes.cardHeaderChequeIconDanger:(cheque.destinatario?classes.cardHeaderChequeIconSuccess:null)}/>\r\n                                                :\r\n                                                <ExpandMore className={cheque.dadoDeBaja?classes.cardHeaderChequeIconDanger:(cheque.destinatario?classes.cardHeaderChequeIconSuccess:null)}/>\r\n                                            }\r\n                                        </IconButton>\r\n                                        {cheque.dadoDeBaja ?\r\n                                            null\r\n                                            :\r\n                                            <IconButton aria-label=\"settings\" onClick={handleClick}>\r\n                                                <MoreVert className={cheque.dadoDeBaja?classes.cardHeaderChequeIconDanger:(cheque.acreditado?classes.cardHeaderChequeIconSuccess:null)}/>\r\n                                            </IconButton>\r\n                                        }\r\n                                        <Menu\r\n                                            id=\"simple-menu\"\r\n                                            anchorEl={anchorEl}\r\n                                            keepMounted\r\n                                            open={Boolean(anchorEl)}\r\n                                            onClose={handleClose}\r\n                                        >\r\n                                            {!cheque.grupo?\r\n                                                <>\r\n                                                    <MenuItem onClick={()=>{\r\n                                                        setShowDialogSelectGroup(true)\r\n                                                        setIdGroup(id)\r\n                                                        setAnchorEl(null)\r\n                                                    }}>\r\n                                                        Guardar Blanco\r\n                                                    </MenuItem>\r\n                                                    <MenuItem onClick={()=>{\r\n                                                        setShowDialogSelectGroup(true)\r\n                                                        setIdGroup(id)\r\n                                                        setAnchorEl(null)\r\n                                                    }}>\r\n                                                        Guardar Negro\r\n                                                    </MenuItem>\r\n                                                </>\r\n                                                :\r\n                                                null\r\n                                            }\r\n                                            {!cheque.dadoDeBaja?\r\n                                                <MenuItem onClick={()=>{\r\n                                                    setShowDialogDelete(true)\r\n                                                    setDeleteIndex(id)\r\n                                                    setAnchorEl(null)\r\n                                                }}>\r\n                                                    Dar de Baja\r\n                                                </MenuItem>\r\n                                                :\r\n                                                null\r\n                                            }\r\n                                            {!cheque.destinatario?\r\n                                                <MenuItem >\r\n                                                    <Link \r\n                                                        style={{color:'#fff',textDecoration:'none'}}\r\n                                                        className={classes.textWhite}\r\n                                                        to={{pathname:'/Depositar-Cheque',search:`${id}`}\r\n                                                    }>\r\n                                                        Depositar en Cuenta Bancaria\r\n                                                    </Link>\r\n                                                </MenuItem>\r\n                                                :\r\n                                                null\r\n                                            }\r\n                                        </Menu>\r\n                                    </>\r\n                                }\r\n                                title={\r\n                                    <Grid container xs={12} justify='flex-start' spacing={3}>\r\n                                        <Grid item>\r\n                                               Nº {cheque.numero} \r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Chip\r\n                                                className={classes.cardChequeChip}\r\n                                                color=\"primary\"\r\n                                                icon={<AttachMoney/>}\r\n                                                label={cheque.valor?formatMoney(cheque.valor):formatMoney(0)}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                }\r\n                                subheader={cheque.vencimiento}\r\n                            />\r\n                            \r\n                        </Paper>\r\n                        <Collapse in={expanded} timeout='auto' unmountOnExit>\r\n                            <CardContent>\r\n                                <Grid container xs={12} spacing={3}>\r\n                                    {cheque.dadoDeBaja?\r\n                                        <Grid container item xs={12}>\r\n                                            <Alert variant=\"filled\" severity=\"error\" className={classes.alertCheque}>\r\n                                                Cheque Dado De Baja\r\n                                            </Alert>\r\n                                        </Grid>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                    {cheque.destinatario?\r\n                                        <Grid container item xs={12}>\r\n                                            <Alert variant=\"filled\" severity=\"success\" className={classes.alertCheque}>\r\n                                                {cheque.depositadoEnCuenta?'Depositado en Cuenta de ':'Entregado a '} \r\n                                                <Link \r\n                                                    style={{color:'#fff',textDecoration:'none'}}\r\n                                                    className={classes.textWhite}\r\n                                                    to={cheque.depositadoEnCuenta?\r\n                                                        {pathname:'/Cuentas-Bancarias',search:`${cheque.destinatario}`}\r\n                                                        :\r\n                                                        {pathname:'/Proveedor',search:`${cheque.destinatario}`}\r\n                                                }>\r\n                                                    {cheque.destinatario}\r\n                                                </Link> el {cheque.egreso}\r\n                                            </Alert>\r\n                                        </Grid>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </Grid>\r\n                                <List>\r\n                                    {cheque.grupo?\r\n                                        <ListItem>\r\n                                            <ListItemText primary={cheque.grupo} secondary='Grupo'/>\r\n                                        </ListItem>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                    <Link \r\n                                        style={{color:'#fff',textDecoration:'none'}}\r\n                                        className={classes.textWhite}\r\n                                        to={{pathname:'/Cliente',search:`${cheque.nombre}`}\r\n                                    }>\r\n                                        <ListItem>\r\n                                            <ListItemText primary={cheque.nombre} secondary='Entregado por'/>\r\n                                        </ListItem>\r\n                                    </Link>\r\n                                    <ListItem>\r\n                                        <ListItemText primary={cheque.ingreso} secondary='Fecha de Entrega'/>\r\n                                    </ListItem>\r\n                                    <ListItem>\r\n                                        <ListItemText primary={cheque.vencimiento} secondary='Vencimiento'/>\r\n                                    </ListItem>\r\n                                    <ListItem>\r\n                                        <ListItemText primary={cheque.banco} secondary='Banco'/>\r\n                                    </ListItem>\r\n                                </List>\r\n                            </CardContent>\r\n                        </Collapse>\r\n                    </Card>\r\n                </Grid>\r\n        </>\r\n    )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport {Dialog,DialogTitle,DialogContent,DialogActions,TextField,Button,Grid,makeStyles,FormControl,Select,Input,MenuItem,List,ListItem,ListItemText, Typography,IconButton} from '@material-ui/core'\r\nimport {EditOutlined} from '@material-ui/icons'\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {obtenerFecha} from '../../utilities'\r\nconst useStyles = makeStyles(theme=>({\r\n    input:{\r\n        marginBottom:theme.spacing(1),\r\n        textAlign:'center'\r\n    }\r\n}))\r\nexport const DialogEntregarCheque = ({open,setOpen,guardarEntregaDeCheque,id}) =>{\r\n    const classes = useStyles()\r\n    const [nombre,setnombre]=useState(undefined)\r\n    \r\n    const resetTextFields = () =>{\r\n        setnombre('')\r\n    }\r\n    const entregarCheque = () =>{\r\n        guardarEntregaDeCheque(id,obtenerFecha(),nombre)\r\n    }\r\n    return(\r\n        <Dialog open={open} maxWidth='md' fullWidth={true}>\r\n            <DialogTitle>\r\n                Entregar Cheque\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <Grid container direction='column'>\r\n                    <Grid item className={classes.input}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label='Nombre'\r\n                            value={nombre}\r\n                            onChange={e=>{\r\n                                setnombre(e.target.value)\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button \r\n                    onClick={()=>{\r\n                        resetTextFields()\r\n                        setOpen(false)\r\n                    }}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n                <Button\r\n                    disabled={!nombre}\r\n                    onClick={()=>{\r\n                        entregarCheque()\r\n                        resetTextFields()\r\n                        setOpen(false)\r\n                    }}\r\n                >\r\n                    Entregar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {Typography,TextField,Backdrop,Grid,CircularProgress,IconButton,Card,Snackbar,CardHeader,Input,TableCell,TableRow,TableHead,TableBody,Paper,Menu,MenuItem, CardContent, Button} from '@material-ui/core'\r\nimport {Alert} from '@material-ui/lab'\r\nimport {PersonAdd} from '@material-ui/icons'\r\nimport {MoreVert,ArrowForward} from '@material-ui/icons'\r\nimport {Link} from 'react-router-dom'\r\nimport {CardPedido} from '../components/Pedidos/CardPedido'\r\nimport {database} from 'firebase'\r\nimport {DialogConfirmAction} from '../components/Dialogs/DialogConfirmAction'\r\nimport {formatMoney,obtenerFecha,monthsList} from '../utilities'\r\nimport {DialogEntregarCheque} from '../components/Cheques/DialogEntregarCheque'\r\nimport {content} from './styles/styles'\r\nimport { Cheque } from '../components/Cheques/Cheque'\r\nimport Empty from '../images/Empty.png'\r\nimport ApexCharts from 'react-apexcharts';\r\n\r\n// COMPONENT\r\nconst Cheques=(props)=>{\r\n    const classes = content()\r\n    const [search,setSearch]=useState(props.location.search?props.location.search.slice(1):'')\r\n    const [showSnackbar, setshowSnackbar] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [totalBlanco,setTotalBlanco] = useState('')\r\n    const [totalNegro,setTotalNegro] = useState('')\r\n    const [sortedCheques,setSortedCheques] = useState(undefined)\r\n    const [showDialogDelete, setShowDialogDelete] = useState(false);\r\n    const [deleteIndex, setDeleteIndex] = useState(false);\r\n    const [showDialogSelectGroup, setShowDialogSelectGroup] = useState(false);\r\n    const [idGroup, setIdGroup] = useState(undefined);\r\n    \r\n\r\n    // FUNCTIONS \r\n\r\n    const guardarChequeRebotado = id =>{\r\n        setLoading(true)\r\n\r\n        let valor = props.cheques[id].valor\r\n        let cliente = props.cheques[id].nombre\r\n        let destinatario = props.cheques[id].destinatario?props.cheques[id].destinatario:undefined\r\n\r\n\r\n        // GUARDA EL MOVIMIENTO EN LA LISTA DE PAGOS DEL CLIENTE Y DEL PROVEEDOR\r\n        guardarPago(cliente,id,destinatario)\r\n\r\n        // ACTUALIZA DEUDA DE CLIENTE Y PROVEEDOR \r\n        actualizarDeuda(valor,cliente,destinatario)\r\n\r\n        // ACTUALIZA EL CHEQUE EN LA DB\r\n        database().ref().child(props.user.uid).child('cheques').child(id).update({\r\n            dadoDeBaja:true\r\n        })\r\n        // FEEDBACK DEL PROCESO\r\n        .then(()=>{\r\n            setshowSnackbar('El cheque se dio de baja correctamente!')\r\n            setShowDialogDelete(false)\r\n            setTimeout(() => {\r\n                setLoading(false)\r\n                setshowSnackbar('')\r\n            }, 2000);\r\n        })\r\n        .catch(()=>{\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    const actualizarDeuda = (valor,nombre,destinatario) =>{\r\n        \r\n        // CLIENTE\r\n        const nuevaDeudaCliente = props.clientes[nombre].datos.deuda+parseFloat(valor)\r\n        database().ref().child(props.user.uid).child('clientes').child(nombre).child('datos').update({\r\n            deuda:nuevaDeudaCliente\r\n        })\r\n        // SI EL CHEQUE FUE ENTREGADO SE ACTUALIZA LA DEUDA DEL PROVEEDOR\r\n        if(destinatario){\r\n            const nuevaDeudaProveedor = props.proveedores[destinatario].datos.deuda+parseFloat(valor)\r\n            database().ref().child(props.user.uid).child('proveedores').child(`${destinatario}`).child('datos').update({\r\n                deuda:nuevaDeudaProveedor\r\n            })  \r\n        }\r\n\r\n    }\r\n    \r\n    const guardarPago = (cliente,cheque,destinatario) =>{\r\n\r\n        // FUNCIONES DE ESTRUCTURA\r\n        const calcularDeudaActualizada = type =>{\r\n            if(type == 'cliente'){\r\n                return getDeudaPasada(type) + parseFloat(props.cheques[cheque].valor)\r\n            }\r\n            else if(type == 'proveedor'){\r\n                return getDeudaPasada(type) + parseFloat(props.cheques[cheque].valor)\r\n            }\r\n        }\r\n        const getDeudaPasada = type =>{\r\n            if(type == 'cliente'){\r\n                return props.clientes[cliente].datos.deuda\r\n            }\r\n            else if(type == 'proveedor'){\r\n                return props.proveedores[destinatario].datos.deuda\r\n\r\n            }\r\n        }\r\n        // ESTRUCTURA DEL PAGO\r\n        let aux={\r\n            deudaPasada:getDeudaPasada('cliente'),\r\n            deudaActualizada:calcularDeudaActualizada('cliente'),\r\n            cheques:[props.cheques[cheque].numero],\r\n            fecha:obtenerFecha(),\r\n            pagado:-(props.cheques[cheque].valor),\r\n            total:-(props.cheques[cheque].valor),\r\n        }\r\n        // ACTUALIZA DB CLIENTE\r\n        database().ref().child(props.user.uid).child('clientes').child(cliente).child('pagos').push(aux)\r\n        \r\n        // ACTUALIZA DB PROVEEDOR\r\n        if(destinatario){\r\n            aux.deudaPasada=getDeudaPasada('proveedor')\r\n            aux.deudaActualizada=calcularDeudaActualizada('proveedor')\r\n            database().ref().child(props.user.uid).child('proveedores').child(destinatario).child('pagos').push(aux)  \r\n        }\r\n    }\r\n    const guardarChequeEnBlanco = (id) =>{\r\n        setLoading(true)\r\n        database().ref().child(props.user.uid).child('cheques').child(id).update({\r\n                grupo:'Blanco'\r\n        })\r\n        .then(()=>{\r\n            setshowSnackbar('El cheque Se Agrego Al Grupo!')\r\n            setShowDialogSelectGroup(false)\r\n            setTimeout(() => {\r\n                setLoading(false)\r\n                setshowSnackbar('')\r\n            }, 2000);\r\n        })\r\n    }\r\n    const guardarChequeEnNegro = (id) =>{\r\n        setLoading(true)\r\n        database().ref().child(props.user.uid).child('cheques').child(id).update({\r\n                grupo:'Negro'\r\n        })\r\n        .then(()=>{\r\n            setshowSnackbar('El cheque Se Agrego Al Grupo!')\r\n            setShowDialogSelectGroup(false)\r\n            setTimeout(() => {\r\n                setLoading(false)\r\n                setshowSnackbar('')\r\n            }, 2000);\r\n        })\r\n    }\r\n    const obtenerTotalGrupos = (cheques) =>{\r\n        let auxBlanco = 0\r\n        let auxNegro = 0\r\n        if(cheques){\r\n            Object.keys(cheques).map(cheque=>{\r\n                if(!cheques[cheque].destinatario && !cheques[cheque].dadoDeBaja){\r\n                    if(cheques[cheque].grupo){\r\n                        if(cheques[cheque].grupo=='Blanco'){\r\n                            auxBlanco+=parseFloat(cheques[cheque].valor)\r\n                        }\r\n                        else{\r\n                            auxNegro+=parseFloat(cheques[cheque].valor)\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        setTotalBlanco(auxBlanco)\r\n        setTotalNegro(auxNegro)\r\n    }\r\n\r\n\r\n    // CHARTS\r\n    const generateChartGrupos = () => {\r\n        // Asume que tienes los datos en dos variables: sortedCompras y sortedVentas\r\n        let series = [totalBlanco,totalNegro]\r\n        let labels = ['blanco','negro']\r\n        // Define la configuración del gráfico\r\n        const options = {\r\n            labels:labels,\r\n            theme:{\r\n                mode:'dark',\r\n                palette:'palette3'\r\n            },\r\n            tooltip:{\r\n                y:{\r\n                    formatter: val=> `$ ${formatMoney(val)}`\r\n                }\r\n            },\r\n            dataLabels:{\r\n                dropShadow: {\r\n                    enabled: true,\r\n                    left: 2,\r\n                    top: 2,\r\n                    opacity: 0.5\r\n                },\r\n            }\r\n        };\r\n    \r\n    \r\n        // Renderiza el gráfico\r\n        return <ApexCharts options={options} series={series} type='donut' width={350} />;\r\n    }\r\n\r\n    // FILTRADO DE INFORMACION \r\n    const filtrarCheques = () =>{\r\n        const months = {};\r\n        const year = new Date().getFullYear()\r\n            Object.keys(props.cheques).forEach((cheque) => {\r\n                const yearOfCheque = props.cheques[cheque].vencimiento.split('/')[2]\r\n                if(year==yearOfCheque){\r\n                    const month = props.cheques[cheque].vencimiento.split('/')[1];\r\n                    if (!months[month]) {\r\n                        months[month] = { total: 0,totalDisponible:0, cheques: [] };\r\n                    }\r\n                    if(!props.cheques[cheque].dadoDeBaja){\r\n                        months[month].total += parseInt(props.cheques[cheque].valor, 10);\r\n                        if(!props.cheques[cheque].destinatario){\r\n                            months[month].totalDisponible += parseInt(props.cheques[cheque].valor, 10);\r\n                        }\r\n                    }\r\n        \r\n                    months[month].cheques={...months[month].cheques,[`${cheque}`]:props.cheques[cheque]}\r\n                    console.log(months[month].cheques)\r\n                }\r\n            });\r\n        return months\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setLoading(true)\r\n        if(props.cheques){\r\n            const auxSortedCheques = filtrarCheques()\r\n            setSortedCheques(auxSortedCheques)\r\n        }\r\n\r\n        obtenerTotalGrupos(props.cheques)\r\n        if(props.history.location.search){\r\n            setSearch(props.history.location.search.slice(1))\r\n        }\r\n        setTimeout(() => {\r\n            setLoading(false)\r\n        }, 500);\r\n    },[props.cheques])\r\n\r\n    return(\r\n        <Layout history={props.history} page=\"Cheques\" user={props.user.uid}>\r\n            {/* CONTENT */}\r\n            <Paper className={classes.content}>\r\n                {console.log(search)}\r\n                {/* CHEQUES TABLE */}\r\n                <Grid container spacing={6}>\r\n                    <Grid container item xs={12} justify='space-around'>\r\n                        \r\n                        {/* SEARCH BAR */}\r\n                        \r\n                        <Grid item>\r\n                            <TextField\r\n                                value={search}\r\n                                onChange={e=>{\r\n                                    setSearch(e.target.value)\r\n                                }}\r\n                                disabled={!props.cheques}\r\n                                label='Buscar Cheque'\r\n                            />\r\n                        </Grid>\r\n\r\n\r\n                        {/* NAVIGATION TO CHEQUES PERSONALES */}\r\n                        <Grid item>\r\n                            <Link\r\n                                style={{color:'#fff',textDecoration:'none',cursor:'pointer'}}\r\n                                to={{\r\n                                    pathname:'/Cheques-Personales',\r\n                            }}>\r\n                                <Button endIcon={<ArrowForward/>}>Cheques Personales</Button>\r\n                            </Link>  \r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    {/* LIST */}\r\n                    <Grid container justify='center' alignItems='center' spacing={3}>\r\n                        {sortedCheques?\r\n                            <Grid container xs={12} justify='center' spacing={3}>\r\n                                {Object.keys(sortedCheques).reverse().map((month)=>(\r\n                                    <>\r\n                                        <Grid container item xs={12} justify='center'>\r\n                                            <Card className={classes.CardMonthCheques}>\r\n                                                <CardHeader\r\n                                                    title={`$ ${formatMoney(sortedCheques[month].totalDisponible)} ($ ${formatMoney(sortedCheques[month].total)})`}\r\n                                                    subheader={monthsList[month-1]}\r\n                                                />\r\n                                            </Card>\r\n                                        </Grid>\r\n                                        <Grid container item xs={12} justify='center' spacing={3}>\r\n                                            {Object.keys(sortedCheques[month].cheques).map(cheque=>(\r\n                                                <Cheque cheque={sortedCheques[month].cheques[cheque]} id={cheque} search={search}  setShowDialogDelete={setShowDialogDelete} setDeleteIndex={setDeleteIndex} setShowDialogSelectGroup={setShowDialogSelectGroup} setIdGroup={setIdGroup}/>    \r\n                                            ))}\r\n                                        </Grid>\r\n                                    </>\r\n                                ))}\r\n                            </Grid>\r\n                        :\r\n                            <>\r\n                                <Grid item>\r\n                                    <img src={Empty} alt=\"\" height='500px'/>\r\n                                </Grid>\r\n                                <Grid container item xs={12} justify='center'>\r\n                                    <Typography variant='h4'>No hay Cheques Ingresados</Typography>\r\n                                </Grid>\r\n                            </>\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n\r\n            {/* BACKDROP & SNACKBAR */}\r\n            <Backdrop className={classes.backdrop} open={loading}>\r\n                <CircularProgress color=\"inherit\" />\r\n                <DialogConfirmAction showDialog={showDialogDelete} setShowDialog={setShowDialogDelete} action={()=>{guardarChequeRebotado(deleteIndex)}} tipo='dar de baja el cheque'/>\r\n                <DialogConfirmAction showDialog={showDialogSelectGroup} setShowDialog={setShowDialogSelectGroup} action={()=>{guardarChequeEnBlanco(idGroup)}} tipo='Guardar Cheque en Blanco'/>\r\n                <DialogConfirmAction showDialog={showDialogSelectGroup} setShowDialog={setShowDialogSelectGroup} action={()=>{guardarChequeEnNegro(idGroup)}} tipo='Guardar Cheque en Negro'/>\r\n                <Snackbar open={showSnackbar} autoHideDuration={2000} onClose={()=>{setshowSnackbar('')}}>\r\n                    <Alert severity=\"success\" variant='filled'>\r\n                        {showSnackbar}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </Backdrop>\r\n        </Layout>\r\n    )\r\n}\r\n// REDUX STATE TO PROPS\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        cheques:state.cheques,\r\n        clientes:state.clientes,\r\n        proveedores:state.proveedores\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Cheques)","import React from 'react'\r\nimport {Stepper, Step, StepLabel} from '@material-ui/core'\r\nimport {content} from '../../Pages/styles/styles'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const StepperCadena = ({cadenaDeProduccion}) =>{\r\n    const classes = content()\r\n\r\n    return(\r\n        <Stepper activeStep={-1} alternativeLabel>\r\n            {cadenaDeProduccion.map((proceso) => (\r\n                <Step key={proceso.proceso}>\r\n                    <StepLabel>\r\n                        {proceso.proceso}\r\n                        <br/>\r\n                        {proceso.proveedor?\r\n                            <Link\r\n                                className={classes.link}\r\n                                style={{color:'#fff',textDecoration:'none'}}\r\n                                to={{\r\n                                    pathname:'/Proveedor',\r\n                                    search:`${proceso.proveedor}`,\r\n                                }}\r\n                            >\r\n                                    {proceso.proveedor}\r\n                            </Link>\r\n                            :\r\n                            \"Proceso Propio\"\r\n                        }\r\n                    </StepLabel>\r\n                </Step>\r\n            ))}\r\n        </Stepper>\r\n    )\r\n}","import React, {useState,useEffect} from 'react'\r\nimport {Grid,Card,CardContent,IconButton,ListSubheader,Chip,CardHeader,Collapse,Menu,MenuItem,Divider,ExpansionPanel,ExpansionPanelSummary,Typography,Paper,List,ListItem,ListItemText} from '@material-ui/core'\r\nimport {MoreVert,ExpandMore,ExpandLess} from '@material-ui/icons'\r\nimport {formatMoney, obtenerFecha} from '../../utilities'\r\nimport {Link} from 'react-router-dom'\r\nimport {content} from '../..//Pages/styles/styles'\r\nimport { StepperCadena } from '../Productos/StepperCadena'\r\nimport ApexCharts from 'react-apexcharts';\r\n\r\n\r\nexport const CardProducto = ({precio,cantidad,search,name,historialDeStock,eliminarProducto,subproductos,cadenaDeProduccion,historialDeProduccion,isSubproducto,iniciarCadena,setDeleteIndex,setShowDialogDelete}) =>{\r\n    const classes = content()\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [loading,setLoading] = useState(false)\r\n    const [expanded, setExpanded] = useState(false);\r\n    const [showSnackbar, setshowSnackbar] = useState('');\r\n\r\n\r\n    // MENU DESPLEGABLE\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const generateChartSubproductos = (subproductos) => {\r\n\r\n        const series = []\r\n        const labels = []\r\n    \r\n        subproductos.map(subproducto=>{\r\n            series.push(parseInt(subproducto.cantidad))\r\n            labels.push(subproducto.nombre)\r\n        })\r\n\r\n        // Define la configuración del gráfico\r\n        const options = {\r\n            series:series,\r\n            labels:labels,\r\n            theme:{\r\n                mode:'dark',\r\n                palette:'palette2'\r\n\r\n            },\r\n            dataLabels:{\r\n                dropShadow: {\r\n                    enabled: true,\r\n                    left: 2,\r\n                    top: 2,\r\n                    opacity: 0.5\r\n                },\r\n            },\r\n            tooltip:{\r\n                fillSeriesColor:false\r\n            },\r\n            chart:{\r\n                sparkline:{\r\n                    enabled:true\r\n                }\r\n            }\r\n            \r\n        };\r\n        console.log(series)\r\n        console.log(labels)\r\n        // Renderiza el gráfico\r\n        return (\r\n            <>\r\n                <Grid container xs={12}>\r\n                    <Grid item xs={12}>\r\n                        <List>\r\n                            <Divider/>\r\n                            <ListSubheader>\r\n                                Componentes\r\n                            </ListSubheader>\r\n                            <Divider/>\r\n                        </List>\r\n                    </Grid>\r\n                </Grid>\r\n                <ApexCharts options={options} series={series}  type='donut' width={300} />\r\n            </>\r\n        )\r\n    }\r\n\r\n    const generateChartHistorialStock = (auxHistorial) => {\r\n        let data = []\r\n        let labels = []\r\n            Object.keys(auxHistorial).map(movimiento=>{\r\n                data.push(auxHistorial[movimiento].cantidad)\r\n                labels.push(auxHistorial[movimiento].fecha)\r\n            })\r\n    \r\n        // Define la configuración del gráfico\r\n        const options = {\r\n            labels:labels,\r\n            chart:{\r\n                sparkline: {\r\n                    enabled: true\r\n                },\r\n            },\r\n            stroke: {\r\n                curve: 'smooth'\r\n            },\r\n            tooltip:{\r\n                theme:'dark'\r\n            },\r\n        };\r\n    \r\n        // Define los datos a visualizar\r\n        const series = [\r\n            {\r\n            name: 'Stock',\r\n            data: data,\r\n            },\r\n        ];\r\n        console.log(data)\r\n        console.log(labels)\r\n        // Renderiza el gráfico\r\n        return <ApexCharts options={options} series={series} type='area' height={100}/>;\r\n    }\r\n\r\n    // CONTENT\r\n    return(\r\n        <Grid item xs={8} sm={6} md={4} lg={3} className={!search?null:name.toLowerCase().search(search.toLowerCase()) == -1 ? classes.displayNone:classes.display}>\r\n                <Card>\r\n                    <CardHeader\r\n                        className={classes.cardCliente}\r\n                        action={\r\n                            <>\r\n                                {subproductos || cadenaDeProduccion || historialDeStock?\r\n                                    <IconButton onClick={()=>{setExpanded(!expanded)}}>\r\n                                        {expanded?\r\n                                            <ExpandLess/>\r\n                                            :\r\n                                            <ExpandMore/>\r\n                                        }\r\n                                    </IconButton>\r\n                                    :\r\n                                    null\r\n                                }\r\n                                <IconButton aria-label=\"settings\" onClick={handleClick}>\r\n                                    <MoreVert/>\r\n                                </IconButton>\r\n                                <Menu\r\n                                    id=\"simple-menu\"\r\n                                    anchorEl={anchorEl}\r\n                                    keepMounted\r\n                                    open={Boolean(anchorEl)}\r\n                                    onClose={handleClose}\r\n                                >\r\n                                    <Link\r\n                                        className={classes.link}\r\n                                        style={{color:'#fff',textDecoration:'none'}}\r\n                                        to={{\r\n                                            pathname:'/Editar-Producto',\r\n                                            search:`${name}`,\r\n                                        }}\r\n                                    >\r\n                                        <MenuItem>Editar</MenuItem>\r\n                                    </Link>\r\n                                    {cadenaDeProduccion?\r\n                                        <MenuItem\r\n                                            onClick={()=>{\r\n                                                setAnchorEl(null)\r\n                                                iniciarCadena(name)\r\n                                            }}>\r\n                                                Iniciar Cadena de produccion\r\n                                            </MenuItem>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                    {historialDeProduccion?\r\n                                        <MenuItem>\r\n                                                <Link\r\n                                                    className={classes.link}\r\n                                                    style={{color:'#fff',textDecoration:'none'}}\r\n                                                    to={{\r\n                                                        pathname:'/Historial-De-Produccion',\r\n                                                        search:`${name}`,\r\n                                                    }}\r\n                                                >\r\n                                                Historial de Produccion\r\n                                                </Link>\r\n                                            </MenuItem>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                    <MenuItem onClick={()=>{\r\n                                        setAnchorEl(null)\r\n                                        setShowDialogDelete(true)\r\n                                        setDeleteIndex(name)\r\n                                    }}>Eliminar</MenuItem>\r\n                                </Menu>\r\n                            </>\r\n                        }\r\n                        title={[name,<Chip color='inherit' label={cantidad} style={{marginLeft:'8px'}}/>]}\r\n                        subheader={!isSubproducto?`$ ${formatMoney(precio)} c/u`:null}\r\n\r\n                    />\r\n                    <Collapse in={expanded} timeout='auto' unmountOnExit>\r\n                        <CardContent>\r\n                            <Grid container xs={12} justify='flex-start' spacing={3}>\r\n                                {historialDeStock?\r\n                                    <Grid container xs={12} spacing={3}>\r\n                                        <Grid item xs={12}>\r\n                                            <List>\r\n                                                <Divider/>\r\n                                                <ListSubheader>\r\n                                                    Historial de Stock\r\n                                                </ListSubheader>\r\n                                                <Divider/>\r\n                                            </List>\r\n                                        </Grid>\r\n                                        <Grid container item xs={12} justify='center'>\r\n                                            {generateChartHistorialStock(historialDeStock)}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    :\r\n                                    null\r\n                                }\r\n                                {subproductos?\r\n                                    <Grid container item xs={12}>\r\n                                        <Grid container item xs={12} justify='center'>\r\n                                            {generateChartSubproductos(subproductos)}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    :\r\n                                    null\r\n                                }\r\n                                {cadenaDeProduccion?\r\n                                    <Grid container xs={12}>\r\n                                        <Grid item xs={12}>\r\n                                            <List>\r\n                                                <Divider/>\r\n                                                <ListSubheader>\r\n                                                    Cadena de Produccion\r\n                                                </ListSubheader>\r\n                                                <Divider/>\r\n                                            </List>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <StepperCadena cadenaDeProduccion={cadenaDeProduccion}/>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    :\r\n                                    null\r\n                                }\r\n                                </Grid>\r\n                        </CardContent>\r\n                    </Collapse>\r\n                </Card>\r\n        </Grid>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {Paper,Typography,TextField,Backdrop,Grid,CircularProgress,IconButton,Snackbar,Tab,Box,AppBar,Tabs} from '@material-ui/core'\r\nimport {Alert} from '@material-ui/lab'\r\nimport {AddOutlined} from '@material-ui/icons'\r\nimport {Link} from 'react-router-dom'\r\nimport {CardProducto} from '../components/Productos/CardProducto'\r\nimport {DialogConfirmAction} from '../components/Dialogs/DialogConfirmAction'\r\nimport {database} from 'firebase'\r\nimport {content} from './styles/styles'\r\nimport {getProductosList,getSubproductosList,obtenerFecha} from '../utilities'\r\nimport firebase from 'firebase'\r\nimport Empty from '../images/Empty.png'\r\n// COMPONENT\r\nconst Productos=(props)=>{\r\n    const classes = content()\r\n    const [search,setSearch]=useState(props.location.search.slice(1)?props.location.search.slice(1):'')\r\n    const [showSnackbar, setshowSnackbar] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [openDialog,setOpenDialog]=useState(false)\r\n    const [value,setValue]=useState(0)\r\n    const [showDialogDelete,setShowDialogDelete] = useState(false)\r\n    const [deleteIndex,setDeleteIndex] = useState(undefined)\r\n\r\n    //FUNCTIONS\r\n    const eliminarProducto = (key) =>{\r\n        setLoading(true)\r\n        database().ref().child(props.user.uid).child('productos').child(key).remove()\r\n        .then(()=>{\r\n            setshowSnackbar('El producto se eliminó correctamente')\r\n            setShowDialogDelete(false)\r\n            setTimeout(() => {\r\n                setLoading(false)\r\n            }, 2000);\r\n        })\r\n        .catch(()=>{\r\n            setLoading(false)\r\n        })\r\n    }\r\n    const iniciarCadena = (nombre) =>{\r\n        setLoading(true)\r\n        let aux = []\r\n        aux.producto = nombre\r\n        aux.fechaDeInicio = obtenerFecha()\r\n        aux['procesos'] = []\r\n        props.productos[nombre].cadenaDeProduccion.map(proceso=>{\r\n            aux['procesos'].push(proceso)\r\n            aux['procesos'][0].fechaDeInicio = obtenerFecha()\r\n        })\r\n        setLoading(true)\r\n        firebase.database().ref().child(props.user.uid).child('cadenasActivas').push(aux)\r\n        .then(()=>{\r\n            setshowSnackbar('La cadena se inicio correctamente!!')\r\n            setTimeout(() => {\r\n                props.history.replace('/Cadenas-De-Produccion')\r\n                setLoading(false)\r\n            }, 2000);\r\n        })\r\n        .catch(()=>{\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    const TabPanel=(props)=>{\r\n        const { children, value, index, ...other } = props;\r\n      \r\n        return (\r\n          <div\r\n            role=\"tabpanel\"\r\n            className={classes.tabPanelDeuda}\r\n            hidden={value !== index}\r\n          >\r\n            {value === index && (\r\n              <Box p={3}>\r\n                <Typography>{children}</Typography>\r\n              </Box>\r\n            )}\r\n          </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <Layout history={props.history} page=\"Productos\" user={props.user.uid}>\r\n            <Paper className={classes.content}>\r\n                <Grid container spacing={4}>\r\n\r\n                    {/* SEARCH BAR */}\r\n                    <Grid container item xs={12} justify='center' alignItems='center'>\r\n                        <Grid item>\r\n                            <Link to={{\r\n                                pathname:'/Nuevo-Producto'\r\n                            }}>\r\n                                <IconButton>\r\n                                    <AddOutlined/>\r\n                                </IconButton>\r\n                            </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <TextField\r\n                                value={search}\r\n                                onChange={e=>{\r\n                                    setSearch(e.target.value)\r\n                                }}\r\n                                disabled={!props.productos}\r\n                                label='Buscar Producto'\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                    <Grid container item xs={12} justify='center'>\r\n                        <Grid item>\r\n                            <AppBar position=\"static\">\r\n                                <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n                                    <Tab label=\"Productos\" />\r\n                                    <Tab label=\"Subproductos\" />\r\n                                </Tabs>\r\n                            </AppBar>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    {/* PRODUCT LIST */}\r\n                    <TabPanel value={value}  index={0}>\r\n                        <Grid container item xs={12} justify='center' alignItems='center' spacing={2} >\r\n                            {getProductosList(props.productos).length>=1?\r\n                                (getProductosList(props.productos).map(producto=>(\r\n                                    <CardProducto \r\n                                        search={search} \r\n                                        precio={producto.precio} \r\n                                        cadenaDeProduccion={producto.cadenaDeProduccion} \r\n                                        isSubproducto={false}\r\n                                        historialDeStock={producto.historialDeStock}\r\n                                        cantidad={producto.cantidad}\r\n                                        subproductos={producto.subproductos?producto.subproductos:null}\r\n                                        name={producto.nombre}\r\n                                        iniciarCadena={(i)=>{iniciarCadena(i)}}\r\n                                        historialDeProduccion={producto.historialDeCadenas}\r\n                                        setDeleteIndex={setDeleteIndex}\r\n                                        setShowDialogDelete={setShowDialogDelete}\r\n                                    />)))\r\n                                :\r\n                                <>\r\n                                    <Grid item>\r\n                                        <img src={Empty} alt=\"\" height='500px'/>\r\n                                    </Grid>\r\n                                    <Grid container item xs={12} justify='center'>\r\n                                        <Typography variant='h4'>No hay Productos Ingresados</Typography>\r\n                                    </Grid>\r\n                                </>\r\n                            }\r\n                        </Grid>\r\n                    </TabPanel>\r\n                    {/* SUBPRODUCT LIST */}\r\n                    <TabPanel value={value}  index={1}>\r\n                        <Grid container item xs={12} justify='center' alignItems='center' spacing={2} >\r\n                            {getSubproductosList(props.productos).length>=1?\r\n                                (getSubproductosList(props.productos).map(subproducto=>(\r\n                                    <CardProducto \r\n                                        search={search}\r\n                                        precio={subproducto.precio} \r\n                                        cadenaDeProduccion={subproducto.cadenaDeProduccion} \r\n                                        cantidad={subproducto.cantidad}\r\n                                        name={subproducto.nombre}\r\n                                        subproductos={subproducto.subproductos?subproducto.subproductos:null}\r\n                                        isSubproducto={true}\r\n                                        iniciarCadena={(i)=>{iniciarCadena(i)}}\r\n                                        historialDeProduccion={subproducto.historialDeCadenas}\r\n                                        setDeleteIndex={setDeleteIndex}\r\n                                        setShowDialogDelete={setShowDialogDelete}\r\n\r\n                                    />)))\r\n                                :\r\n                                <>\r\n                                    <Grid item>\r\n                                        <img src={Empty} alt=\"\" height='500px'/>\r\n                                    </Grid>\r\n                                    <Grid container item xs={12} justify='center'>\r\n                                        <Typography variant='h4'>No hay Subproductos Ingresados</Typography>\r\n                                    </Grid>\r\n                                </>\r\n                            }\r\n                        </Grid>\r\n                    </TabPanel>\r\n\r\n                </Grid>\r\n\r\n            </Paper>\r\n            \r\n            {/* BACKDROP & SNACKBAR */}\r\n            <Backdrop className={classes.backdrop} open={loading}>\r\n                <CircularProgress color=\"inherit\" />\r\n                <DialogConfirmAction showDialog={showDialogDelete} setShowDialog={setShowDialogDelete} action={()=>{eliminarProducto(deleteIndex)}} tipo='el Producto'/>\r\n                <Snackbar open={showSnackbar} autoHideDuration={2000} onClose={()=>{setshowSnackbar('')}}>\r\n                    <Alert severity=\"success\" variant='filled'>\r\n                        {showSnackbar}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </Backdrop>\r\n        </Layout>\r\n    )\r\n}\r\n\r\n//REDUX STATE TO PROPS\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        productos:state.productos,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Productos)","import React, {useState,useEffect} from 'react'\r\nimport {Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Paper,Button} from '@material-ui/core'\r\nimport { formatMoney , getActualMonth } from '../../utilities'\r\nimport {content} from '../../Pages/styles/styles'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const Tabla = ({data,tipo}) =>{\r\n    const classes = content()\r\n    return(\r\n        <TableContainer component={Paper}>\r\n            <Table stickyHeader>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell className={classes.titleDetallesCard}>Fecha</TableCell>\r\n                        {tipo=='ventas'?\r\n                            <TableCell className={classes.titleDetallesCard}>Cliente</TableCell>\r\n                            :\r\n                            <TableCell className={classes.titleDetallesCard}>Proveedor</TableCell>\r\n                        }\r\n                        <TableCell className={classes.titleDetallesCard}>Iva</TableCell>\r\n                        <TableCell className={classes.titleDetallesCard}>Total</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {data?\r\n                        data.map((keyPedido)=>(\r\n                            <TableRow>\r\n                                <TableCell>{keyPedido.fecha}</TableCell>\r\n                                {tipo=='ventas'?\r\n                                    <TableCell>\r\n                                        <Link\r\n                                            style={{color:'#fff',textDecoration:'none',cursor:'pointer'}}\r\n                                            to={{\r\n                                            pathname:'/cliente',\r\n                                            search:keyPedido.cliente,\r\n                                            props:{\r\n                                                searchPedido:keyPedido.idPedido\r\n                                            }\r\n                                        }}>\r\n                                                {keyPedido.cliente}\r\n                                        </Link>    \r\n                                    </TableCell>\r\n                                    :\r\n                                    keyPedido.consumoFacturado?\r\n                                        <TableCell>{keyPedido.titulo}</TableCell>\r\n                                        :\r\n                                        <TableCell>\r\n                                            <Link\r\n                                                style={{color:'#fff',textDecoration:'none',cursor:'pointer'}}\r\n                                                to={{\r\n                                                pathname:'/proveedor',\r\n                                                search:keyPedido.proveedor,\r\n                                                props:{\r\n                                                    searchEntrega:keyPedido.idEntrega\r\n                                                }\r\n                                            }}>\r\n                                                    {keyPedido.proveedor}\r\n                                            </Link>    \r\n                                        </TableCell>\r\n                                }\r\n                                {keyPedido.consumoFacturado?\r\n                                    <TableCell className={classes.titleDetallesCard}>${formatMoney(keyPedido.totalIva)}</TableCell>\r\n                                    :\r\n                                    keyPedido.metodoDePago.facturacion?\r\n                                        <TableCell className={classes.titleDetallesCard}>${formatMoney(keyPedido.total-(keyPedido.total/1.21))}</TableCell>\r\n                                        :\r\n                                        <TableCell className={classes.titleDetallesCard}>-</TableCell>\r\n\r\n                                }\r\n                                <TableCell>${formatMoney(keyPedido.total)}</TableCell>\r\n                            </TableRow>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}","import React, {useState,useEffect} from 'react'\r\nimport {Grid,makeStyles,Paper,Card,CardHeader,Collapse,CardContent,IconButton,Typography} from '@material-ui/core'\r\nimport {Tabla} from './Tabla'\r\nimport { formatMoney,monthsList } from '../../utilities'\r\nimport { ExpandLess, ExpandMore } from '@material-ui/icons'\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    card:{\r\n        minHeight:'180px',\r\n    },\r\n    displayNone:{\r\n        display:'none'\r\n    },\r\n    display:{\r\n        display:'block'\r\n    },\r\n    header:{\r\n        '& .MuiTypography-h5':{\r\n            fontSize:'1.3rem'\r\n        }\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    deleteButton:{\r\n        color:theme.palette.error.main\r\n    },\r\n    paper:{\r\n        overflow:'auto'\r\n    },\r\n    CardAnualIva:{\r\n        backgroundColor:theme.palette.primary.dark,\r\n        width:'100%'\r\n    },\r\n    CardMensualIva:{\r\n        backgroundColor:theme.palette.primary.main\r\n    },\r\n    CardContentMensual:{\r\n        backgroundColor:theme.palette.background.default,\r\n        overflow:'auto'\r\n    }\r\n    \r\n}))\r\nexport const Compras = ({compras,year}) =>{\r\n    const classes = useStyles()\r\n    const [expanded, setExpanded] = useState(false);\r\n\r\n    return(\r\n        <Grid container xs={12} justify='center' spacing={3}>\r\n            <Grid container item xs={12} justify='center'>\r\n                <Typography variant='h4'>Compras</Typography>\r\n            </Grid>\r\n            <Grid container item xs={12} justify='center'>\r\n                <Card className={classes.CardAnualIva}>\r\n                    <CardHeader\r\n                        title={`$ ${formatMoney(compras[year][1].totalIva)}`}\r\n                        subheader={compras[year][0]}\r\n                    />\r\n                </Card>\r\n            </Grid>\r\n            <Grid container item xs={12} justify='center' spacing={3}>\r\n                {Object.keys(compras[year][1].months).reverse().map(month=>(\r\n                    compras[year][1].months[month].total!==0?\r\n                        <MesDeCompras month={month} total={compras[year][1].months[month].totalIva} compras={compras[year][1].months[month].compras}/>\r\n                        :\r\n                        null\r\n                ))}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\nconst MesDeCompras = ({month,total,compras}) =>{\r\n    const classes = useStyles()\r\n    const [expanded, setExpanded] = useState(false);\r\n\r\n    return(\r\n        <Grid item xs={12}>\r\n            <Card className={classes.CardMensualIva}>\r\n                <CardHeader\r\n                    className={classes.card}\r\n                    title={`$ ${formatMoney(total)}`}\r\n                    subheader={monthsList[month-1]}\r\n                    action={\r\n                        <>\r\n                            <IconButton onClick={()=>{setExpanded(!expanded)}}>\r\n                                {expanded?\r\n                                    <ExpandLess/>\r\n                                    :\r\n                                    <ExpandMore/>\r\n                                }\r\n                            </IconButton>\r\n                        </>\r\n                    }\r\n                />\r\n                <Collapse in={expanded} timeout='auto' unmountOnExit>\r\n                    <CardContent className={classes.CardContentMensual}>\r\n                        <Tabla data={compras}/>\r\n                    </CardContent>\r\n                </Collapse>\r\n            </Card>\r\n        </Grid>\r\n    )\r\n}\r\n","import React, {useState,useEffect} from 'react'\r\nimport {Grid,makeStyles,Paper,Card,CardHeader,Collapse,CardContent,IconButton,Typography} from '@material-ui/core'\r\nimport {Tabla} from './Tabla'\r\nimport { formatMoney,monthsList } from '../../utilities'\r\nimport { ExpandLess, ExpandMore } from '@material-ui/icons'\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    card:{\r\n        minHeight:'180px',\r\n    },\r\n    displayNone:{\r\n        display:'none'\r\n    },\r\n    display:{\r\n        display:'block'\r\n    },\r\n    header:{\r\n        '& .MuiTypography-h5':{\r\n            fontSize:'1.3rem'\r\n        }\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    deleteButton:{\r\n        color:theme.palette.error.main\r\n    },\r\n    paper:{\r\n        overflow:'auto'\r\n    },\r\n    CardAnualIva:{\r\n        backgroundColor:theme.palette.primary.dark,\r\n        width:'100%'\r\n    },\r\n    CardMensualIva:{\r\n        backgroundColor:theme.palette.primary.main,\r\n        width:'100%'\r\n    },\r\n    CardContentMensual:{\r\n        backgroundColor:theme.palette.background.default\r\n    }\r\n    \r\n}))\r\nexport const Ventas = ({ventas,year}) =>{\r\n    const classes = useStyles()\r\n    const [expanded, setExpanded] = useState(false);\r\n\r\n    return(\r\n        <Grid container xs={12} justify='center' spacing={3}>\r\n            <Grid container item xs={12} justify='center'>\r\n                <Typography variant='h4'>Ventas</Typography>\r\n            </Grid>\r\n            <Grid container item xs={12} justify='center'>\r\n                <Card className={classes.CardAnualIva}>\r\n                    <CardHeader\r\n                        title={`$ ${formatMoney(ventas[year][1].totalIva)}`}\r\n                        subheader={ventas[year][0]}\r\n                    />\r\n                </Card>\r\n            </Grid>\r\n            <Grid container item xs={12} justify='center' spacing={3}>\r\n                {Object.keys(ventas[year][1].months).reverse().map(month=>(\r\n                    ventas[year][1].months[month].total!==0?\r\n                        <MesDeVentas month={month} total={ventas[year][1].months[month].totalIva} ventas={ventas[year][1].months[month].ventas}/>\r\n                        :\r\n                        null\r\n                ))}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\nconst MesDeVentas = ({month,total,ventas}) =>{\r\n    const classes = useStyles()\r\n    const [expanded, setExpanded] = useState(false);\r\n\r\n    return(\r\n        <Grid item xs={12}>\r\n            <Card className={classes.CardMensualIva}>\r\n                <CardHeader\r\n                    className={classes.card}\r\n                    title={`$ ${formatMoney(total)}`}\r\n                    subheader={monthsList[month-1]}\r\n                    action={\r\n                        <>\r\n                            <IconButton onClick={()=>{setExpanded(!expanded)}}>\r\n                                {expanded?\r\n                                    <ExpandLess/>\r\n                                    :\r\n                                    <ExpandMore/>\r\n                                }\r\n                            </IconButton>\r\n                        </>\r\n                    }\r\n                />\r\n                <Collapse in={expanded} timeout='auto' unmountOnExit>\r\n                    <CardContent className={classes.CardContentMensual}>\r\n                        <Tabla data={ventas} tipo='ventas'/>\r\n                    </CardContent>\r\n                </Collapse>\r\n            </Card>\r\n        </Grid>\r\n    )\r\n}\r\n","import React,{useState,useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {Paper,Grid,Button,Backdrop,Snackbar,CircularProgress, Typography,Chip} from '@material-ui/core'\r\nimport {Add} from '@material-ui/icons'\r\nimport {Alert} from '@material-ui/lab'\r\nimport {Compras} from '../components/Iva/Compras'\r\nimport {Ventas} from '../components/Iva/Ventas'\r\nimport {database} from 'firebase'\r\nimport {formatMoney,getActualMonth} from '../utilities'\r\nimport {content} from './styles/styles'\r\nimport { set } from 'date-fns'\r\n\r\nconst Iva=(props)=>{\r\n    const classes = content()\r\n    const [loading,setLoading]=useState(false)\r\n    const [year,setYear]=useState(0)\r\n    const [showSnackbar,setshowSnackbar]=useState(false)\r\n    const [sortedCompras,setSortedCompras] = useState(undefined)\r\n    const [sortedVentas,setSortedVentas] = useState(undefined)\r\n\r\n    //FUNCTIONS\r\n\r\n    // FILTERS \r\n    const filtrarCompras = () =>{\r\n        const yearsCompras = {};\r\n        if(props.compras){\r\n            Object.keys(props.compras).reverse().forEach((compra) => {\r\n                const year = props.compras[compra].fecha.split('/')[2];\r\n                const month = props.compras[compra].fecha.split('/')[1];\r\n            \r\n                // Si aún no tenemos el año en el objeto \"years\", lo agregamos\r\n                if (!yearsCompras[year]) {\r\n                    yearsCompras[year] = { total: 0, totalIva: 0,months: {\r\n                        1:{ total: 0, totalIva: 0, compras: [] },\r\n                        2:{ total: 0, totalIva: 0, compras: [] },\r\n                        3:{ total: 0, totalIva: 0, compras: [] },\r\n                        4:{ total: 0, totalIva: 0, compras: [] },\r\n                        5:{ total: 0, totalIva: 0, compras: [] },\r\n                        6:{ total: 0, totalIva: 0, compras: [] },\r\n                        7:{ total: 0, totalIva: 0, compras: [] },\r\n                        8:{ total: 0, totalIva: 0, compras: [] },\r\n                        9:{ total: 0, totalIva: 0, compras: [] },\r\n                        10:{ total: 0, totalIva: 0, compras: [] },\r\n                        11:{ total: 0, totalIva: 0, compras: [] },\r\n                        12:{ total: 0, totalIva: 0, compras: [] }\r\n                    }}\r\n                }\r\n\r\n\r\n                \r\n                // Agregamos la compra al objeto \"compras\" del mes correspondiente\r\n                yearsCompras[year].months[month].compras.push(props.compras[compra]);\r\n            \r\n                // Actualizamos el total del mes y del año\r\n                yearsCompras[year].months[month].total += parseFloat(props.compras[compra].total?props.compras[compra].total:0);\r\n                if(props.compras[compra].consumoFacturado){\r\n                    yearsCompras[year].months[month].totalIva += parseFloat(props.compras[compra].totalIva);\r\n                    yearsCompras[year].totalIva += parseFloat(props.compras[compra].totalIva);\r\n                }\r\n                else{\r\n                    if(props.compras[compra].metodoDePago.facturacion){\r\n                        yearsCompras[year].months[month].totalIva += parseFloat(props.compras[compra].total?props.compras[compra].total-(props.compras[compra].total/1.21):0);\r\n                        yearsCompras[year].totalIva += parseFloat(props.compras[compra].total?props.compras[compra].total-(props.compras[compra].total/1.21):0);\r\n                    }\r\n                }\r\n                yearsCompras[year].total += parseFloat(props.compras[compra].total?props.compras[compra].total:0);\r\n            });\r\n        \r\n            const sortedCompras = Object.entries(yearsCompras).sort(([year1], [year2]) => year2 - year1);\r\n            console.log(sortedCompras)\r\n            return sortedCompras\r\n        }\r\n    }\r\n    const filtrarVentas = () =>{\r\n        const yearsVentas = {};\r\n        if(props.ventas){\r\n            Object.keys(props.ventas).reverse().forEach((venta) => {\r\n                const year = props.ventas[venta].fecha.split('/')[2];\r\n                const month = props.ventas[venta].fecha.split('/')[1];\r\n            \r\n                if (!yearsVentas[year]) {\r\n                    yearsVentas[year] = { total: 0, totalIva: 0, months: {\r\n                        1:{ total: 0, totalIva: 0, ventas: [] },\r\n                        2:{ total: 0, totalIva: 0, ventas: [] },\r\n                        3:{ total: 0, totalIva: 0, ventas: [] },\r\n                        4:{ total: 0, totalIva: 0, ventas: [] },\r\n                        5:{ total: 0, totalIva: 0, ventas: [] },\r\n                        6:{ total: 0, totalIva: 0, ventas: [] },\r\n                        7:{ total: 0, totalIva: 0, ventas: [] },\r\n                        8:{ total: 0, totalIva: 0, ventas: [] },\r\n                        9:{ total: 0, totalIva: 0, ventas: [] },\r\n                        10:{ total: 0, totalIva: 0, ventas: [] },\r\n                        11:{ total: 0, totalIva: 0, ventas: [] },\r\n                        12:{ total: 0, totalIva: 0, ventas: [] }\r\n                    }}\r\n                }\r\n            \r\n                // Agregamos la venta al objeto \"ventas\" del mes correspondiente\r\n                yearsVentas[year].months[month].ventas.push(props.ventas[venta]);\r\n                // Actualizamos el total del mes y del año\r\n                yearsVentas[year].months[month].total += parseFloat(props.ventas[venta].total?props.ventas[venta].total:0);\r\n                yearsVentas[year].total += parseFloat(props.ventas[venta].total?props.ventas[venta].total:0);\r\n                if(props.ventas[venta].metodoDePago.facturacion){\r\n                    yearsVentas[year].months[month].totalIva += parseFloat(props.ventas[venta].total?props.ventas[venta].total-(props.ventas[venta].total/1.21):0);\r\n                    yearsVentas[year].totalIva += parseFloat(props.ventas[venta].total?props.ventas[venta].total-(props.ventas[venta].total/1.21):0);\r\n                }\r\n            });\r\n        \r\n            const sortedVentas = Object.entries(yearsVentas).sort(([year1], [year2]) => year2 - year1);\r\n\r\n            return sortedVentas\r\n        }\r\n    }\r\n    \r\n    \r\n\r\n    useEffect(()=>{\r\n        setLoading(true)\r\n\r\n        const auxSortedCompras = filtrarCompras()\r\n        const auxSortedVentas = filtrarVentas()\r\n        setSortedCompras(auxSortedCompras)\r\n        setSortedVentas(auxSortedVentas)\r\n        setTimeout(() => {\r\n            setLoading(false)\r\n        }, 500);\r\n    },[props.compras,props.ventas])\r\n\r\n\r\n    return(\r\n        <Layout history={props.history} page=\"Iva\" user={props.user.uid}>\r\n\r\n            {/* TABLE */}\r\n            <Paper className={classes.content}>\r\n                <Grid container justify='center' className={classes.container} spacing={4}>\r\n                    <Grid container item xs={12} justify='center'>\r\n                        {sortedVentas?\r\n                            sortedVentas.map((indexYear,i)=>(\r\n                                <Button\r\n                                    onClick={()=>{\r\n                                        setYear(i)\r\n                                    }}\r\n                                >\r\n                                    {indexYear[0]}\r\n                                </Button>\r\n                            ))\r\n                            :\r\n                            null\r\n                    }\r\n                    </Grid>\r\n                    <Grid container justify='space-around'>\r\n                        <Grid item xs={10} sm={8} md={5} className={classes.gridTable}>\r\n                            {sortedVentas?\r\n                                <Ventas ventas={sortedVentas} year={year}/>\r\n                                :\r\n                                null\r\n                            }\r\n                        </Grid>\r\n                        <Grid item xs={10} sm={8} md={5} className={classes.gridTable}>\r\n                            {sortedCompras?\r\n                                <Compras compras={sortedCompras} year={year}/>\r\n                                :\r\n                                null\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {/* BACKDROP & SNACKBAR */}\r\n                <Backdrop className={classes.backdrop} open={loading}>\r\n                    <CircularProgress color=\"inherit\" />\r\n                    <Snackbar open={showSnackbar} autoHideDuration={2000} onClose={()=>{setshowSnackbar('')}}>\r\n                        <Alert severity=\"success\" variant='filled'>\r\n                            La compra se agrego correctamente!\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </Backdrop>\r\n            </Paper>\r\n        </Layout>\r\n    )\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        compras:state.compras,\r\n        ventas:state.ventas\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Iva)","import React,{useState} from 'react'\r\nimport {Button,Menu,MenuItem,Divider,makeStyles,IconButton} from '@material-ui/core'\r\nimport {Link} from 'react-router-dom'\r\nimport {ArrowDropDown} from '@material-ui/icons'\r\nimport { formatMoney } from '../../utilities'\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    link:{\r\n        textDecoration:'none',\r\n        color:theme.palette.primary.contrastText\r\n    }\r\n}))\r\nexport const MenuCheques = ({pago}) =>{\r\n    const classes = useStyles()\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    const calcularTotal = (total,efectivo) =>{\r\n        const auxEfectivo = efectivo?efectivo:0\r\n        return total-auxEfectivo!=0?total-auxEfectivo:0\r\n    }\r\n    return(\r\n        pago.cheques?\r\n            <>\r\n                <Button onClick={handleClick} startIcon={<ArrowDropDown/>}>\r\n                    {formatMoney(calcularTotal(pago.pagado,pago.efectivo))}\r\n                </Button>\r\n                <Menu\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={handleClose}\r\n                >\r\n                    {pago.cheques.map(cheque=>(\r\n                        <Link\r\n                            style={{color:'#fff',textDecoration:'none',cursor:'pointer'}}\r\n                            className={classes.link} \r\n                            to={{\r\n                                pathname:'/Cheques',\r\n                                search:cheque\r\n                            }}\r\n                        >\r\n                                <MenuItem>{cheque}</MenuItem>\r\n                        </Link>\r\n                    ))}\r\n                </Menu>\r\n            </>\r\n            :\r\n            '$ -' \r\n    )\r\n}","import React,{useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {Paper,Grid,Typography,Table,TableHead,TableRow,TableCell,TableBody,TableContainer,Button} from '@material-ui/core'\r\nimport {MenuCheques} from '../components/Historial/MenuCheques'\r\nimport {AddOutlined} from '@material-ui/icons'\r\nimport {DialogConfirmDelete} from '../components/Cliente/DialogConfirmDelete'\r\nimport {Link} from 'react-router-dom'\r\nimport {formatMoney} from '../utilities'\r\nimport {content} from './styles/styles'\r\nimport {checkSearch} from '../utilities'\r\nimport Empty from '../images/Empty.png'\r\n\r\n// COMPONENT\r\nconst HistorialCliente=(props)=>{\r\n    const classes = content()\r\n    const [cliente,setCliente]= useState(props.clientes[checkSearch(props.history.location.search)].pagos)\r\n   \r\n\r\n    const calcularTotal = (total,efectivo) =>{\r\n        const auxEfectivo = efectivo?efectivo:0\r\n    \r\n        return total-auxEfectivo!=0?total-auxEfectivo:0\r\n    }\r\n\r\n    return(\r\n        <Layout history={props.history} page={`Historial ${props.clientes[checkSearch(props.history.location.search)].datos.nombre}`} user={props.user.uid}>\r\n            {/* CONTENT */}            \r\n            <Paper className={classes.content}>\r\n                <Grid container xs={12} justify='center' spacing={3}>\r\n                    <Grid container item xs={12} justify='center'>\r\n                        <Link \r\n                            className={classes.link}\r\n                            style={{color:'#fff',textDecoration:'none'}}\r\n                            to={{\r\n                                pathname:'/Nuevo-Pago-Cliente',\r\n                                props:{\r\n                                    cliente:props.clientes[checkSearch(props.history.location.search)].datos.nombre\r\n                                },\r\n                                search:`${props.clientes[checkSearch(props.history.location.search)].datos.nombre}`\r\n                            }\r\n                        }>\r\n                            <Button \r\n                                variant='contained'\r\n                                color='primary'\r\n                                startIcon={<AddOutlined/>}\r\n                            >\r\n                                Nuevo Pago\r\n                            </Button>\r\n                        </Link>\r\n                    </Grid>\r\n                        {cliente? \r\n                            <Grid item xs={11}>\r\n                                <Paper elevation={3}>\r\n                                    <TableContainer component={Paper}>\r\n                                        <Table stickyHeader>\r\n                                            <TableHead>\r\n                                                <TableRow>\r\n                                                    <TableCell className={classes.titleDetallesCard} align='right'>\r\n                                                        Fecha\r\n                                                    </TableCell>\r\n                                                    <TableCell className={classes.titleDetallesCard} align='right'>\r\n                                                        Efectivo\r\n                                                    </TableCell>\r\n                                                    <TableCell className={classes.titleDetallesCard} align='right'>\r\n                                                        Cheques\r\n                                                    </TableCell>\r\n                                                    <TableCell className={classes.titleDetallesCard} align='right'>\r\n                                                        Deuda Pasada\r\n                                                    </TableCell>\r\n                                                    <TableCell className={classes.titleDetallesCard} align='right'>\r\n                                                        Deuda Actualizada\r\n                                                    </TableCell>\r\n                                                    <TableCell className={classes.titleDetallesCard} align='right'>\r\n                                                        Pedido\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                    {Object.keys(cliente).reverse().map(pago=>(\r\n                                                        <TableRow> \r\n                                                            <TableCell align='right'>\r\n                                                                {cliente[pago].fecha}\r\n                                                            </TableCell>\r\n                                                            <TableCell align='right'>\r\n                                                                $ {cliente[pago].efectivo?formatMoney(cliente[pago].efectivo):'-'}\r\n                                                            </TableCell>\r\n                                                            <TableCell align='right'>\r\n                                                                <MenuCheques pago={cliente[pago]}/>\r\n                                                            </TableCell>\r\n                                                            <TableCell align='right'>\r\n                                                                $ {formatMoney(cliente[pago].deudaPasada)}\r\n                                                            </TableCell>\r\n                                                            <TableCell align='right'>\r\n                                                                $ {formatMoney(cliente[pago].deudaActualizada)}\r\n                                                            </TableCell>\r\n                                                            <TableCell align='right'>\r\n                                                                {cliente[pago].idPedido?\r\n                                                                    <Link\r\n                                                                        style={{color:'#fff',textDecoration:'none',cursor:'pointer'}}\r\n                                                                        to={{\r\n                                                                        pathname:'/cliente',\r\n                                                                        search:props.history.location.search,\r\n                                                                        props:{\r\n                                                                            searchPedido:cliente[pago].idPedido\r\n                                                                        }\r\n                                                                    }}>\r\n                                                                        <Button variant='outlined'>\r\n                                                                            Ver\r\n                                                                        </Button>\r\n                                                                    </Link>\r\n                                                                    :\r\n                                                                    '-'\r\n                                                                }\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    ))}\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                </Paper>\r\n                            </Grid>\r\n                            :\r\n                            <Grid container xs={12} justify='center' spacing={2}>\r\n                                <Grid container item xs={12} justify='center'>\r\n                                    <Typography variant='h5'>{checkSearch(props.location.search)} no tiene historial de pagos</Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <img src={Empty} alt=\"\" height='600px'/>\r\n                                </Grid>\r\n                            </Grid>\r\n                        }\r\n                </Grid>\r\n            </Paper>\r\n        </Layout>\r\n    )\r\n}\r\n\r\n// REDUX STATE TO PROPS\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        clientes:state.clientes\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(HistorialCliente)","import React,{useState} from 'react'\r\nimport {Button,Menu,MenuItem,Divider,makeStyles,IconButton} from '@material-ui/core'\r\nimport {Link} from 'react-router-dom'\r\nimport {ArrowDropDown} from '@material-ui/icons'\r\nimport { formatMoney } from '../../utilities'\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    link:{\r\n        textDecoration:'none',\r\n        color:theme.palette.primary.contrastText\r\n    }\r\n}))\r\nexport const MenuChequesPersonales = ({pago}) =>{\r\n    const classes = useStyles()\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    return(\r\n        pago.chequesPersonales?\r\n            <>\r\n                <Button onClick={handleClick} startIcon={<ArrowDropDown/>}>\r\n                    {formatMoney(pago.totalChequesPersonales)}\r\n                </Button>\r\n                <Menu\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={handleClose}\r\n                >\r\n                    {pago.chequesPersonales.map(cheque=>(\r\n                        <Link\r\n                            style={{color:'#fff',textDecoration:'none',cursor:'pointer'}}\r\n                            className={classes.link} \r\n                            to={{\r\n                                pathname:'/Cheques-Personales',\r\n                                search:cheque\r\n                            }}\r\n                        >\r\n                                <MenuItem>{cheque}</MenuItem>\r\n                        </Link>\r\n                    ))}\r\n                </Menu>\r\n            </>\r\n            :\r\n            '$ -' \r\n    )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {makeStyles,Paper,Grid,List,Typography,IconButton,Backdrop,Snackbar,CircularProgress,Table,TableHead,TableRow,TableCell,TableBody,TableContainer,Button,Menu,MenuItem,Divider} from '@material-ui/core'\r\nimport {Alert} from '@material-ui/lab'\r\nimport {MenuCheques} from '../components/Historial/MenuCheques'\r\nimport {MenuChequesPersonales} from '../components/Historial/MenuChequesPersonales'\r\nimport {EditOutlined,ArrowDropDown, AddOutlined} from '@material-ui/icons'\r\nimport {Deuda} from '../components/Cliente/Deuda'\r\nimport {ListaDePedidos} from '../components/Cliente/ListaDePedidos'\r\nimport {Detalles} from '../components/Cliente/Detalles'\r\nimport {DialogConfirmDelete} from '../components/Cliente/DialogConfirmDelete'\r\nimport {database} from 'firebase'\r\nimport {Link} from 'react-router-dom'\r\nimport {formatMoney} from '../utilities'\r\nimport {content} from './styles/styles'\r\nimport {checkSearch} from '../utilities'\r\nimport Empty from '../images/Empty.png'\r\n\r\n// COMPONENT\r\nconst HistorialProveedor=(props)=>{\r\n    const classes = content()\r\n    const [proveedor,setProveedor]= useState(props.proveedores[checkSearch(props.history.location.search)].pagos)\r\n\r\n   \r\n\r\n    return(\r\n        <Layout history={props.history} page={`Historial ${props.proveedores[checkSearch(props.history.location.search)].datos.nombre}`} user={props.user.uid}>\r\n            {/* CONTENT */}\r\n            <Paper className={classes.content}>\r\n                <Grid container xs={12} justify='center' spacing={3}>\r\n                    <Grid container item xs={12} justify='center'>\r\n                        <Link \r\n                            style={{color:'#fff',textDecoration:'none'}}\r\n                            to={{\r\n                                pathname:'/Nuevo-Pago-Proveedor',\r\n                                props:{\r\n                                    proveedor:props.proveedores[checkSearch(props.history.location.search)].datos.nombre\r\n                                },\r\n                                search:`${props.proveedores[checkSearch(props.history.location.search)].datos.nombre}`\r\n                            }\r\n                        }>\r\n                            <Button \r\n                                variant='contained'\r\n                                color='primary'\r\n                                startIcon={<AddOutlined/>}\r\n                            >\r\n                                Nuevo Pago\r\n                            </Button>\r\n                        </Link>\r\n                    </Grid>\r\n                        {proveedor? \r\n                            <Grid item xs={11}>\r\n                                <Paper elevation={3}>\r\n                                    <TableContainer component={Paper}>\r\n                                        <Table stickyHeader>\r\n                                            <TableHead>\r\n                                                <TableRow>\r\n                                                    <TableCell className={classes.titleDetallesCard} align=\"left\">\r\n                                                        Fecha\r\n                                                    </TableCell>\r\n                                                    <TableCell className={classes.titleDetallesCard} align='right'>\r\n                                                        Efectivo\r\n                                                    </TableCell>\r\n                                                    <TableCell className={classes.titleDetallesCard} align='right'>\r\n                                                        Cheques\r\n                                                    </TableCell>\r\n                                                    <TableCell className={classes.titleDetallesCard} align='right'>\r\n                                                        Cheques Personales\r\n                                                    </TableCell>\r\n                                                    <TableCell className={classes.titleDetallesCard} align='right'>\r\n                                                        Total\r\n                                                    </TableCell>\r\n                                                    <TableCell className={classes.titleDetallesCard} align='right'>\r\n                                                        Deuda Pasada\r\n                                                    </TableCell>\r\n                                                    <TableCell className={classes.titleDetallesCard}   align='right'>\r\n                                                        Deuda Actualizada\r\n                                                    </TableCell>\r\n                                                    <TableCell className={classes.titleDetallesCard}   align='right'>\r\n                                                        Entrega\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                    {Object.keys(proveedor).reverse().map(pago=>(\r\n                                                        <TableRow> \r\n                                                            <TableCell align='left'>\r\n                                                                {proveedor[pago].fecha}\r\n                                                            </TableCell>\r\n                                                            <TableCell align='right'>\r\n                                                               $ {proveedor[pago].efectivo?formatMoney(proveedor[pago].efectivo):'-'}\r\n                                                            </TableCell>\r\n                                                            <TableCell align='right'>\r\n                                                                <MenuCheques pago={proveedor[pago]}/>                                                \r\n                                                            </TableCell>\r\n                                                            <TableCell align='right'>\r\n                                                                <MenuChequesPersonales pago={proveedor[pago]}/>                                                \r\n                                                            </TableCell>\r\n                                                            <TableCell align='right'>\r\n                                                                $ {formatMoney(proveedor[pago].pagado)}\r\n                                                            </TableCell>\r\n                                                            <TableCell align='right'>\r\n                                                                $ {formatMoney(proveedor[pago].deudaPasada)}\r\n                                                            </TableCell>\r\n                                                            <TableCell align='right'>\r\n                                                                $ {formatMoney(proveedor[pago].deudaActualizada)}\r\n                                                            </TableCell>\r\n                                                            <TableCell align='right'>\r\n                                                                {proveedor[pago].idEntrega?\r\n                                                                    <Link\r\n                                                                        style={{color:'#fff',textDecoration:'none',cursor:'pointer'}}\r\n                                                                        to={{\r\n                                                                        pathname:'/Proveedor',\r\n                                                                        search:props.history.location.search,\r\n                                                                        props:{\r\n                                                                            searchEntrega:proveedor[pago].idEntrega\r\n                                                                        }\r\n                                                                    }}>\r\n                                                                        <Button variant='outlined'>\r\n                                                                            Ver\r\n                                                                        </Button>\r\n                                                                    </Link>\r\n                                                                    :\r\n                                                                    '-'\r\n                                                                }\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    ))}\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                </Paper>\r\n                            </Grid>\r\n                            :\r\n                            <Grid container xs={12} justify='center' spacing={2}>\r\n                                <Grid container item xs={12} justify='center'>\r\n                                    <Typography variant='h5'>{checkSearch(props.location.search)} no tiene historial de pagos</Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <img src={Empty} alt=\"\" height='600px'/>\r\n                                </Grid>\r\n                            </Grid>\r\n                        }\r\n                </Grid>\r\n            </Paper>\r\n        </Layout>\r\n    )\r\n}\r\n\r\n// REDUX STATE TO PROPS\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        proveedores:state.proveedores\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(HistorialProveedor)","import React,{useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {makeStyles,Typography,Backdrop,Grid,CircularProgress,Snackbar,Paper} from '@material-ui/core'\r\nimport {Alert} from '@material-ui/lab'\r\nimport {DialogConfirmAction} from '../components/Dialogs/DialogConfirmAction'\r\nimport {CardPedido} from '../components/Pedidos/CardPedido'\r\nimport {database} from 'firebase'\r\nimport {content} from './styles/styles'\r\nimport Empty from '../images/Empty.png'\r\nimport { formatMoney } from '../utilities'\r\n// COMPONENT\r\nconst Pedidos=(props)=>{\r\n    const classes = content()\r\n    const [search,setSearch]=useState('')\r\n    const [showSnackbar, setshowSnackbar] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [openDialog,setOpenDialog]=useState(false)\r\n    const [showDialogDelete, setShowDialogDelete] = useState(false);\r\n    const [showDialogUpdatePrices, setShowDialogUpdatePrices] = useState(false);\r\n    const [deleteIndex, setDeleteIndex] = useState(false);\r\n    const [updatePricesIndex, setUpdatePricesIndex] = useState(false);\r\n\r\n    // FUNTIONS\r\n    const eliminarPedido = (id) =>{\r\n        setLoading(true)\r\n        database().ref().child(props.user.uid).child('pedidos').child(id).remove()\r\n            .then(()=>{\r\n                setshowSnackbar('El pedido se eliminó correctamente!')\r\n                setShowDialogDelete(false)\r\n                setTimeout(() => {\r\n                    setLoading(false)\r\n                }, 2000);\r\n            })\r\n            .catch(()=>{\r\n                setLoading(false)\r\n            })\r\n    }\r\n    const actualizarPrecio = (id) =>{\r\n        setLoading(true)\r\n        let auxPedido = props.pedidos[id]\r\n        let auxTotal = 0\r\n        console.log(props.pedidos[id].cotizacion.valor)\r\n        auxPedido.productos.map(producto=>{\r\n            producto.precio = (producto.precio / props.pedidos[id].cotizacion.valor) * props.tipoDeCambio\r\n            producto.total = (producto.precio / props.pedidos[id].cotizacion.valor) * props.tipoDeCambio * producto.cantidad\r\n            auxTotal += producto.precio * producto.cantidad\r\n        })\r\n        auxPedido.cotizacion.valor=props.tipoDeCambio\r\n        auxPedido.total=auxTotal\r\n        database().ref().child(props.user.uid).child('pedidos').child(id).update(auxPedido)\r\n            .then(()=>{\r\n                setshowSnackbar('El precio se actualizo correctamente!')\r\n                setShowDialogUpdatePrices(false)\r\n                setTimeout(() => {\r\n                    setLoading(false)\r\n                }, 2000);\r\n            })\r\n            .catch(()=>{\r\n                setLoading(false)\r\n            })\r\n    }\r\n\r\n    return(\r\n        <Layout history={props.history} page=\"Pedidos\" user={props.user.uid}>\r\n            {/* CONTENT */}\r\n            <Paper className={classes.content}>\r\n                {/* PEDIDOS LIST */}\r\n                <Grid container justify='center' alignItems='center' spacing={3}>\r\n                    {props.pedidos?\r\n                        (Object.keys(props.pedidos).map(key=>(\r\n                            <CardPedido\r\n                                pedido={props.pedidos[key]}\r\n                                deuda={props.clientes[props.pedidos[key].cliente].datos.deuda}\r\n                                id={key}\r\n                                setShowDialogDelete={setShowDialogDelete}\r\n                                setDeleteIndex={setDeleteIndex}\r\n                                setUpdatePricesIndex={setUpdatePricesIndex}\r\n                                setShowDialogUpdatePrices={setShowDialogUpdatePrices}\r\n                                tipoDeCambio={props.tipoDeCambio}\r\n                            />\r\n                        )))\r\n                        :\r\n                        <>\r\n                            <Grid item>\r\n                                <img src={Empty} alt=\"\" height='600px'/>\r\n                            </Grid>\r\n                            <Grid container item xs={12} justify='center'>\r\n                                <Typography variant='h4'>No hay Pedidos Ingresados</Typography>\r\n                            </Grid>\r\n                        </>\r\n                    }\r\n                </Grid>\r\n\r\n                {/* BACKDROP & SNACKBAR */}\r\n                <Backdrop className={classes.backdrop} open={loading}>\r\n                    <CircularProgress color=\"inherit\" />\r\n                    <DialogConfirmAction showDialog={showDialogDelete} setShowDialog={setShowDialogDelete} action={()=>{eliminarPedido(deleteIndex)}} tipo='eliminar el Pedido'/>\r\n                    \r\n                    <DialogConfirmAction showDialog={showDialogUpdatePrices} setShowDialog={setShowDialogUpdatePrices} action={()=>{actualizarPrecio(updatePricesIndex)}} tipo={`Actualizar los precios a $${formatMoney(props.tipoDeCambio)}`}/>\r\n                    <Snackbar open={showSnackbar} autoHideDuration={2000} onClose={()=>{setshowSnackbar('')}}>\r\n                        <Alert severity=\"success\" variant='filled'>\r\n                            {showSnackbar}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </Backdrop>\r\n\r\n\r\n            </Paper>\r\n        </Layout>\r\n    )\r\n}\r\n\r\n// REDUX STATE TO PROPS\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        pedidos:state.pedidos,\r\n        productos:state.productos,\r\n        clientes:state.clientes,\r\n        tipoDeCambio:parseFloat(state.dolares[1].casa.venta)\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Pedidos)","import React, {useState,useEffect} from 'react'\r\nimport {Grid,Card,CardContent,IconButton,Typography,Chip,Button,CardHeader,Paper,Menu,MenuItem,CardActions, List,ListItem, ListItemText,Collapse,FormControlLabel,Switch} from '@material-ui/core'\r\nimport {MoreVert,AttachMoney,ExpandMore, ExpandLess} from '@material-ui/icons'\r\nimport {Link} from 'react-router-dom'\r\nimport {formatMoney} from '../../utilities'\r\nimport {content} from '../../Pages/styles/styles'\r\n\r\nexport const CardEntrega = ({entrega,id,eliminarEntrega,deuda}) =>{\r\n    const classes = content()\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [expanded, setExpanded] = useState(false);\r\n    const [facturacion,setFacturacion]=useState(false)\r\n\r\n    //Menu More\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return(\r\n        <Grid item xs={11} sm={8} md={6} lg={4} >\r\n            <Card>\r\n                <Paper elevation={3} className={classes.cardPedidoHeader}>\r\n                    <CardHeader\r\n                        action={\r\n                            <>\r\n                                <IconButton onClick={()=>{setExpanded(!expanded)}}>\r\n                                    {expanded?\r\n                                        <ExpandLess/>\r\n                                        :\r\n                                        <ExpandMore/>\r\n                                    }\r\n                                </IconButton>\r\n                                <IconButton aria-label=\"settings\" onClick={handleClick}>\r\n                                    <MoreVert/>\r\n                                </IconButton>\r\n                                <Menu\r\n                                    id=\"simple-menu\"\r\n                                    anchorEl={anchorEl}\r\n                                    keepMounted\r\n                                    open={Boolean(anchorEl)}\r\n                                    onClose={handleClose}\r\n                                    >   \r\n                                    <Link \r\n                                        style={{color:'#fff',textDecoration:'none'}}\r\n                                        className={classes.link}\r\n                                        to={{\r\n                                        pathname:'/Editar-Entrega',\r\n                                        search:`${id}`\r\n                                    }}>\r\n                                        <MenuItem>Editar</MenuItem>\r\n                                    </Link>\r\n                                    <MenuItem className={classes.deleteButton} onClick={()=>{\r\n                                        setAnchorEl(null)\r\n                                        eliminarEntrega()\r\n                                    }}>\r\n                                        Eliminar\r\n                                    </MenuItem>\r\n                                </Menu>\r\n                            </>\r\n                        }\r\n                        title={\r\n                            <Grid container xs={12} justify='flex-start' spacing={3}>\r\n                                <Grid item>\r\n                                    <Link\r\n                                        style={{color:'#fff',textDecoration:'none'}}\r\n                                        className={classes.textWhite}\r\n                                        to={{pathname:'/Proveedor',search:`${entrega.proveedor}`}\r\n                                    }>\r\n                                        {entrega.proveedor} \r\n                                <Grid item>\r\n                                    <Chip\r\n                                        className={deuda>0?classes.cardDeudaRed:classes.cardDeudaGreen}\r\n                                        variant=\"outlined\"\r\n                                        icon={<AttachMoney/>}\r\n                                        label={deuda?formatMoney(deuda):formatMoney(0)}\r\n                                    />\r\n                                </Grid>\r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                            }\r\n                        subheader={entrega.fecha}\r\n                    />\r\n                </Paper>\r\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                    <CardContent>\r\n                    <List>\r\n                            {entrega.cotizacion?\r\n                                <ListItem>\r\n                                    <ListItemText primary={`$${entrega.cotizacion.valor}`} secondary={entrega.cotizacion.nombre}/>\r\n                                </ListItem>\r\n                                :\r\n                                null\r\n                            }\r\n                            {entrega.productos.map(producto=>(\r\n                                <ListItem>\r\n                                    <ListItemText primary={`${producto.cantidad} ${producto.producto}`} secondary={`$${formatMoney(facturacion?((producto.precio + (producto.precio*0.21)) * producto.cantidad ):(producto.precio*producto.cantidad))} ($${formatMoney(facturacion?(producto.precio + (producto.precio*0.21)):producto.precio)} c/u)`}/>\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    </CardContent>\r\n                </Collapse>\r\n                <Paper elevation={3} className={classes.cardPedidoActions}>\r\n                    <CardActions>\r\n                        <Grid container justify='space-around'>\r\n                            <Typography variant='h5'>\r\n                                {facturacion?\r\n                                    `$ ${formatMoney(entrega.total*1.21)}`\r\n                                    :\r\n                                    `$ ${formatMoney(entrega.total)}`\r\n                                }\r\n                            </Typography>\r\n                            <FormControlLabel\r\n                            control={\r\n                                <Switch\r\n                                    checked={facturacion}\r\n                                    onChange={e=>{\r\n                                        setFacturacion(e.target.checked)\r\n                                    }}\r\n                                />\r\n                            }\r\n                                label=\"Facturacion \"/>\r\n                            <Link\r\n                                style={{color:'#fff',textDecoration:'none'}}\r\n                                className={classes.textWhite}\r\n                                to={{pathname:'/Recibir-Entrega',search:`${id}`,props:{total:facturacion?(entrega.total+entrega.total*0.21):entrega.total,facturacion:facturacion}}\r\n                            }>\r\n                                <Button\r\n                                    variant='outlined'\r\n                                >\r\n                                    Recibir Entrega \r\n                                </Button>\r\n                            </Link>\r\n                        </Grid>\r\n                    </CardActions>\r\n                </Paper>\r\n            </Card>\r\n        </Grid>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {Typography,Backdrop,Grid,CircularProgress,Snackbar,Paper} from '@material-ui/core'\r\nimport {Alert} from '@material-ui/lab'\r\nimport {Link} from 'react-router-dom'\r\nimport {CardEntrega} from '../components/Entregas/CardEntrega'\r\nimport {database} from 'firebase'\r\nimport {content} from './styles/styles'\r\nimport Empty from '../images/Empty.png'\r\n\r\n//COMPONENT\r\nconst Entregas=(props)=>{\r\n    const classes = content()\r\n    const [search,setSearch]=useState('')\r\n    const [showSnackbar, setshowSnackbar] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [openDialog,setOpenDialog]=useState(false)\r\n\r\n    //FUNCTIONS\r\n    const eliminarEntrega = (id) =>{\r\n        setLoading(true)\r\n        database().ref().child(props.user.uid).child('entregas').child(id).remove()\r\n            .then(()=>{\r\n                setshowSnackbar('La entrega se eliminó correctamente!')\r\n                setTimeout(() => {\r\n                    setLoading(false)\r\n                    setshowSnackbar('')\r\n                }, 2000);\r\n            })\r\n            .catch(()=>{\r\n                setLoading(false)\r\n            })\r\n    }\r\n\r\n    return(\r\n        <Layout history={props.history} page=\"Entregas\" user={props.user.uid}>\r\n            {/* CONTENT */}\r\n            <Paper className={classes.content}>\r\n                {/* ENTREGAS LIST */}\r\n                <Grid container justify='center' alignItems='center' spacing={3}>\r\n                    {props.entregas?\r\n                        (Object.keys(props.entregas).map(key=>(\r\n                            <>\r\n                            <CardEntrega\r\n                                entrega={props.entregas[key]}\r\n                                deuda={props.proveedores[props.entregas[key].proveedor].datos.deuda}\r\n                                id={key}\r\n                                eliminarEntrega={()=>{eliminarEntrega(key)}}\r\n                            />\r\n                            </>\r\n                        )))\r\n                        :\r\n                        <>\r\n                            <Grid item>\r\n                                <img src={Empty} alt=\"\" height='600px'/>\r\n                            </Grid>\r\n                            <Grid container item xs={12} justify='center'>\r\n                                <Typography variant='h4'>No hay Entregas Ingresadas</Typography>\r\n                            </Grid>\r\n                        </>\r\n                    }\r\n                </Grid>\r\n\r\n            </Paper>\r\n\r\n            {/* BACKDROP & SNACKBAR */}\r\n            <Backdrop className={classes.backdrop} open={loading}>\r\n                <CircularProgress color=\"inherit\" />\r\n                <Snackbar open={showSnackbar} autoHideDuration={2000} onClose={()=>{setshowSnackbar('')}}>\r\n                    <Alert severity=\"success\" variant='filled'>\r\n                        {showSnackbar}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </Backdrop>\r\n        </Layout>\r\n    )\r\n}\r\n\r\n// REDUX STATE TO PROPS\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        entregas:state.entregas,\r\n        productos:state.productos,\r\n        proveedores:state.proveedores\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Entregas)","import React from 'react'\r\nimport {Grid,Paper,Typography,ListItem,ListItemText,ListItemSecondaryAction,IconButton,makeStyles,TableContainer,Table,TableCell,TableRow,TableHead,TableBody} from '@material-ui/core'\r\nimport {EditOutlined,DeleteOutlineOutlined} from '@material-ui/icons'\r\nimport {formatMoney} from '../../utilities'\r\nimport {content} from '../../Pages/styles/styles'\r\nimport Empty from '../../images/Empty.png'\r\nexport const Productos = ({productos,seteditIndex,showDialog,openDialogDelete}) =>{\r\n    const classes = content()\r\n\r\n    const openDialog = index =>{\r\n        seteditIndex(index)\r\n        showDialog()\r\n    }\r\n    return (\r\n        productos.length?\r\n            <Grid container item xs={12} md={8} alignItems='center' justify='center'>\r\n                <TableContainer component={Paper}>\r\n                    <Table className={classes.table} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell className={classes.titleDetallesCard} align=\"right\">Producto</TableCell>\r\n                                <TableCell className={classes.titleDetallesCard} align=\"right\">Cantidad</TableCell>\r\n                                <TableCell className={classes.titleDetallesCard} align=\"right\">Precio Unitario</TableCell>\r\n                                <TableCell className={classes.titleDetallesCard} align=\"right\">Precio Total</TableCell>\r\n                                <TableCell className={classes.titleDetallesCard} align=\"right\" padding='checkbox'></TableCell>\r\n                                <TableCell className={classes.titleDetallesCard} align=\"right\" padding='checkbox'></TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {productos.map((producto,i)=>(\r\n                                <TableRow key={producto.producto}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {producto.producto}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">{producto.cantidad}</TableCell>\r\n                                    <TableCell align=\"right\">$ {formatMoney(producto.precio)}</TableCell>\r\n                                    <TableCell align=\"right\">$ {formatMoney(producto.total)}</TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        <IconButton className={classes.icon} edge=\"end\" aria-label=\"delete\" onClick={()=>{openDialog(i)}}>\r\n                                            <EditOutlined />\r\n                                        </IconButton>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        <IconButton className={classes.icon} edge=\"end\" aria-label=\"delete\" onClick={()=>{openDialogDelete(i)}}>\r\n                                            <DeleteOutlineOutlined color='error'/>\r\n                                        </IconButton>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Grid>\r\n        :\r\n        <Grid container xs={12} justify='center' spacing={2}>\r\n            <Grid container item xs={12} justify='center'>\r\n                <Typography variant='h5'>No Hay Productos Seleccionados</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                <img src={Empty} alt=\"\" height='300px'/>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport {Dialog,DialogTitle,DialogContent,DialogActions,TextField,Button,Grid,Paper,FormControl,Select,Input,MenuItem,List,ListItem,ListItemText, Typography,IconButton} from '@material-ui/core'\r\nimport {EditOutlined} from '@material-ui/icons'\r\nimport {formatMoney} from '../../../utilities'\r\nimport {content} from '../../../Pages/styles/styles'\r\nimport { Autocomplete } from '@material-ui/lab'\r\n\r\nexport const DialogNuevoProducto = ({open,setOpen,productos,setproductos,edit,editIndex,seteditIndex,productosList,total,settotal}) =>{\r\n    const classes = content()\r\n    const [producto,setproducto]=useState(undefined)\r\n    const [cantidad,setcantidad]=useState(undefined)\r\n    const [precio,setprecio]=useState('')\r\n    const [editarPrecio,seteditarPrecio]=useState(false)\r\n    \r\n    // FUNCTIONS\r\n    const resetTextFields = () =>{\r\n        setproducto(undefined)\r\n        setcantidad(undefined)\r\n        setprecio(undefined)\r\n    }\r\n    const agregarProducto = () =>{\r\n        let aux = productos\r\n        aux.push({\r\n            producto:producto,\r\n            cantidad:cantidad,\r\n            precio:precio,\r\n            total:precio*cantidad\r\n        })\r\n        setproductos(aux)\r\n        settotal(total+(cantidad*precio))\r\n    }\r\n    const actualizarTotal=()=>{\r\n        let nuevoTotal = total\r\n        if(productos[editIndex].precio!=precio){\r\n            console.log(nuevoTotal)\r\n            nuevoTotal-=productos[editIndex].cantidad*productos[editIndex].precio\r\n            nuevoTotal+=productos[editIndex].cantidad*precio\r\n            console.log(nuevoTotal)\r\n        }\r\n        if(productos[editIndex].cantidad>cantidad){\r\n            console.log(nuevoTotal)\r\n            nuevoTotal-=(productos[editIndex].cantidad-cantidad)*precio\r\n            console.log(nuevoTotal)\r\n        }\r\n        else if(productos[editIndex].cantidad<cantidad){\r\n            console.log(nuevoTotal)\r\n            nuevoTotal+=(cantidad-productos[editIndex].cantidad)*precio\r\n            console.log(nuevoTotal)\r\n        }\r\n        console.log(nuevoTotal)\r\n        settotal(nuevoTotal)\r\n    }\r\n    const editarProducto = () =>{\r\n        let aux = productos\r\n        actualizarTotal()\r\n        aux[editIndex]={\r\n            producto:producto,\r\n            cantidad:cantidad,\r\n            precio:precio,\r\n            total:precio*cantidad\r\n        }\r\n        setproductos(aux)\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        if(edit){\r\n            setproducto(productos[editIndex].producto)\r\n            setcantidad(productos[editIndex].cantidad)\r\n            setprecio(productos[editIndex].precio)\r\n        }\r\n    },[edit])\r\n    return(\r\n        <Dialog open={open} maxWidth='md'>\r\n            <DialogTitle>\r\n                {edit?\r\n                    'Editar Producto Elegido'\r\n                    :\r\n                    'Elige un producto'\r\n                }\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <Grid container direction='column' alignItems='center' spacing={3}>\r\n                    <Grid item>\r\n                        <Autocomplete\r\n                            freeSolo\r\n                            value={producto}\r\n                            options={productosList}\r\n                            getOptionLabel={(option) => option.nombre}\r\n                            onChange={(e)=>{\r\n                                setproducto(e.target.value) \r\n                            }}\r\n                            onSelect={(e)=>{\r\n                                setproducto(e.target.value) \r\n                            }}\r\n                            style={{ width: 300 }}\r\n                            renderInput={(params) => <TextField {...params} label=\"Producto\" variant=\"outlined\" />}\r\n                        />\r\n                    </Grid>\r\n                    {producto&&\r\n                        <Grid container item xs={12} justify='center' spacing={3}>\r\n                            <Grid item>\r\n                                <TextField\r\n                                    label='Precio'\r\n                                    type='number'\r\n                                    value={precio}\r\n                                    onChange={e=>{\r\n                                        setprecio(e.target.value)\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField\r\n                                    label='Cantidad'\r\n                                    type='number'\r\n                                    value={cantidad}\r\n                                    onChange={e=>{\r\n                                        setcantidad(e.target.value)\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    }\r\n                    <Grid container item xs={12} justify='center'>\r\n                        <Paper className={classes.totalProductoNuevoPedido} elevation={3}>\r\n                            <List>\r\n                                <ListItem>\r\n                                        <ListItemText primary={'Total'} secondary={`$ ${cantidad*precio?formatMoney(cantidad*precio):'-'}`}/>\r\n                                </ListItem>\r\n                            </List>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button \r\n                    onClick={()=>{\r\n                        if(edit){\r\n                            seteditIndex(-1)\r\n                        }\r\n                        resetTextFields()\r\n                        seteditarPrecio(false)\r\n                        setOpen(false)\r\n                    }}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n                <Button\r\n                    disabled={!producto||!cantidad||!precio}\r\n                    onClick={()=>{\r\n                        if(edit){\r\n                            editarProducto()\r\n                            seteditIndex(-1)\r\n                        }\r\n                        else{\r\n                            agregarProducto()\r\n                        }\r\n                        resetTextFields()\r\n                        seteditarPrecio(false)\r\n                        setOpen(false)\r\n                    }}\r\n                >\r\n                    {edit?\r\n                        'Editar'\r\n                        :\r\n                        'Agregar'\r\n                    }\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport {Dialog,DialogTitle,DialogContent,DialogActions,TextField,Button,Grid,makeStyles} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    input:{\r\n        marginBottom:theme.spacing(1),\r\n        textAlign:'center'\r\n    }\r\n}))\r\n\r\nexport const DialogEliminarElemento = ({open,setopen,datos,setDatos,index,setdeleteIndex,tipoDeElemento,total,settotal}) =>{\r\n    const classes = useStyles()\r\n    \r\n    const eliminarElemento = () =>{\r\n        settotal(total-(datos[index].cantidad*datos[index].precio))\r\n        let aux = datos\r\n        aux.splice(index,1)\r\n        setDatos(aux)\r\n    }\r\n    return(\r\n        <Dialog open={open}>\r\n            <DialogTitle>\r\n                Desea Eliminar {tipoDeElemento}?\r\n            </DialogTitle>\r\n            <DialogActions>\r\n                <Button \r\n                    onClick={()=>{\r\n                        setopen(false)\r\n                        setdeleteIndex(undefined)\r\n                    }}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n                <Button\r\n                    color='error'\r\n                    onClick={()=>{\r\n                        eliminarElemento()\r\n                        setopen(false)\r\n                        setdeleteIndex(undefined)\r\n                    }}\r\n                >\r\n                    Eliminar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport {Grid, Button,TextField,Select,Input,Chip,MenuItem,Paper,FormControl, Typography,Card,CardContent,CardActions} from '@material-ui/core'\r\nimport {Productos} from './Productos'\r\nimport { Autocomplete } from '@material-ui/lab'\r\nimport {DialogNuevoProducto} from './Dialogs/DialogNuevoProducto'\r\nimport {DialogEliminarElemento} from './Dialogs/DialogEliminarElemento'\r\nimport {AddOutlined} from '@material-ui/icons'\r\nimport {formatMoney} from '../../utilities'\r\nimport {content} from '../../Pages/styles/styles'\r\n\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {MuiPickersUtilsProvider,KeyboardTimePicker,KeyboardDatePicker} from '@material-ui/pickers';\r\n\r\nexport const Step = ({datos,setDatos,tipoDeDato,proveedoresList,productosList,total,settotal}) =>{\r\n    const classes = content()\r\n    const [showDialog,setshowDialog]=useState(false)\r\n    const [editIndex,seteditIndex]=useState(-1)\r\n    const [showDialogDelete,setshowDialogDelete]=useState(false)\r\n    const [deleteIndex,setdeleteIndex]=useState(undefined)\r\n\r\n    const openDialogDelete = (index) =>{\r\n        setdeleteIndex(index)\r\n        setshowDialogDelete(true)\r\n    }\r\n    const getProductos = () =>{\r\n        let aux = []\r\n        Object.values(productosList).map(producto=>{\r\n            aux.push(producto)\r\n            if(!producto.cadenaDeProduccion){\r\n            }\r\n        })\r\n        return aux\r\n    }\r\n    const renderStep = () =>{\r\n        switch (tipoDeDato) {\r\n            case 'Destinatario':\r\n                return(\r\n                    <Grid container item xs={12} justify='center'>\r\n                        <Paper elevation={3} >\r\n                            <Grid item xs={12} justify='center'>\r\n                                <Autocomplete\r\n                                        freeSolo\r\n                                        options={proveedoresList?Object.keys(proveedoresList):{}}\r\n                                        disabled={!proveedoresList}\r\n                                        getOptionLabel={(option) => option}\r\n                                        onSelect={(e)=>{setDatos(e.target.value)}}\r\n                                        onChange={(e)=>{setDatos(e.target.value)}}\r\n                                        value={datos}\r\n                                        style={{ width: 300 }}\r\n                                        renderInput={(params) => <TextField {...params} label=\"Proveedor\" variant=\"outlined\" />}\r\n                                    />\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n                )\r\n                break;\r\n            case 'Productos':\r\n                return(\r\n                    <Grid container item xs={12} justify='center' spacing={3}>\r\n                        <Grid container item xs={12} justify=\"center\">\r\n                                <Button variant='contained' color='primary' startIcon={<AddOutlined/>} onClick={()=>{setshowDialog(true)}}>\r\n                                    Agregar Producto\r\n                                </Button>\r\n                        </Grid>\r\n                        <Productos productos={datos} seteditIndex={seteditIndex} showDialog={()=>{setshowDialog(true)}} openDialogDelete={i=>{openDialogDelete(i)}}/>\r\n                        {datos.length?\r\n                            <Grid container justify='center'>\r\n                                <Grid item justify='center'>\r\n                                    <Paper elevation={3} className={classes.cardTotalPedidoDanger}>\r\n                                        <Typography variant='h5'>\r\n                                            Total $ {formatMoney(total)}\r\n                                        </Typography>\r\n                                    </Paper>\r\n                                </Grid>\r\n                            </Grid>\r\n                            :\r\n                            null\r\n                        }\r\n\r\n                        {/* DIALOGS */}\r\n                        <DialogNuevoProducto \r\n                                open={showDialog} \r\n                                setOpen={setshowDialog} \r\n                                productos={datos} \r\n                                setproductos={setDatos} \r\n                                edit={editIndex!=-1} \r\n                                editIndex={editIndex} \r\n                                seteditIndex={seteditIndex} \r\n                                productosList={getProductos()}\r\n                                total={total}\r\n                                settotal={settotal}\r\n                            />\r\n                            <DialogEliminarElemento \r\n                                open={showDialogDelete} \r\n                                setopen={setshowDialogDelete} \r\n                                datos={datos} \r\n                                setDatos={setDatos} \r\n                                index={deleteIndex} \r\n                                setdeleteIndex={setdeleteIndex} \r\n                                tipoDeElemento='Producto'\r\n                                total={total}\r\n                                settotal={settotal}\r\n                            />\r\n                    </Grid>\r\n                )\r\n                break;\r\n            case 'Fecha':\r\n                return(\r\n                    <Grid container item xs={12} justify='center' spacing={3}>\r\n                        <Grid container item xs={12} justify='center'>\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils} noValidate>\r\n                                <KeyboardDatePicker\r\n                                    disableToolbar\r\n                                    variant=\"inline\"\r\n                                    format=\"dd/MM/yyyy\"\r\n                                    fullWidth\r\n                                    label=\"Fecha del pedido\"\r\n                                    value={datos}\r\n                                    onChange={i=>{\r\n                                        setDatos(i)\r\n                                    }}\r\n                                />\r\n                            </MuiPickersUtilsProvider   >\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                )\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return( renderStep() )\r\n}","import React,{useState, useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {Chip,Paper,ListItem,Card,Button,StepContent,Backdrop,StepLabel,Grid,Step,Stepper,Link as LinkComponent,Snackbar,CircularProgress} from '@material-ui/core'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {Step as StepComponent} from '../components/Nueva-Entrega/Step'\r\nimport {database} from 'firebase'\r\nimport {obtenerFecha} from '../utilities'\r\nimport {content} from './styles/styles'\r\nimport {checkSearch} from '../utilities'\r\nimport { PeopleAlt, MoveToInbox } from '@material-ui/icons';\r\n\r\n\r\n// COMPONENT\r\nconst NuevaEntrega=(props)=>{\r\n    const classes = content()\r\n    const [nombre,setnombre]=useState(undefined)\r\n    const [productos,setproductos]=useState([])\r\n    const [total,settotal]=useState(0)\r\n    const [fecha,setfecha]=useState(undefined)\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [showSnackbar, setshowSnackbar] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const steps = getSteps();\r\n\r\n    // STEPPER NAVIGATION\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n    function getStepContent(step) {\r\n      switch (step) {\r\n        case 0:\r\n          return (\r\n            <StepComponent \r\n                tipoDeDato='Destinatario'\r\n                datos={nombre}\r\n                setDatos={setnombre}\r\n                proveedoresList={props.proveedores}\r\n            /> \r\n            );\r\n        case 1:\r\n            return (\r\n                <StepComponent \r\n                    tipoDeDato='Productos'\r\n                    datos={productos}\r\n                    setDatos={setproductos}\r\n                    productosList={props.productos}\r\n                    total={total}\r\n                    settotal={settotal}\r\n                /> \r\n            );\r\n        }\r\n    }\r\n    function getSteps() {\r\n        return ['Elegir el Proveedor', 'Elegir Los productos'];\r\n    }\r\n    const setDisabled=(step)=>{\r\n        switch (step) {\r\n            case 0:\r\n                    return !nombre\r\n                break;\r\n            case 1:\r\n                    return productos.length? false : true\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function getStepLabel(label,index) {\r\n        switch (index) {\r\n            case 0:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<PeopleAlt/>} \r\n                            label={label}  \r\n                            onClick={()=>{if(nombre){setActiveStep(index)}}}\r\n                            variant='default'\r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n            case 1:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<MoveToInbox/>} \r\n                            label={label}  \r\n                            onClick={()=>{if(nombre){setActiveStep(index)}}}\r\n                            variant='default'\r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n        }\r\n    }\r\n\r\n    // FUNCTIONS\r\n    const guardarEntrega = () =>{\r\n        setLoading(true)\r\n        let aux={\r\n            proveedor:nombre,\r\n            productos:productos,\r\n            total:total,\r\n            fecha:!fecha?obtenerFecha():fecha\r\n        }\r\n        if(props.history.location.search){\r\n            database().ref().child(props.user.uid).child('entregas').child(checkSearch(props.history.location.search)).update(aux)\r\n            .then(()=>{\r\n                    setshowSnackbar('La entrega se editó correctamente!')\r\n                setTimeout(() => {\r\n                    props.history.replace(`/Entregas`)\r\n                }, 2000);\r\n            })\r\n            .catch(()=>{\r\n                setLoading(false)\r\n            })\r\n        }\r\n        else{\r\n            database().ref().child(props.user.uid).child('entregas').push(aux)\r\n            .then(()=>{\r\n                setshowSnackbar('La entrega se agregó correctamente!')\r\n                setTimeout(() => {\r\n                    props.history.replace(`/Entregas`)\r\n                }, 2000);\r\n            })\r\n            .catch(()=>{\r\n                setLoading(false)\r\n            })\r\n        }\r\n    }\r\n\r\n    //FILL FOR EDIT\r\n    useEffect(()=>{\r\n        if(props.history.location.search){\r\n            const {proveedor,productos,total,fecha} = props.entregas[props.history.location.search.slice(1)]\r\n            proveedor&&setnombre(proveedor)\r\n            productos&&setproductos(productos)\r\n            total&&settotal(total)\r\n            fecha&&setfecha(fecha)\r\n            setActiveStep(1)\r\n        }\r\n    },[])\r\n    return(\r\n        <Layout history={props.history} page={props.history.location.search?'Editar Entrega':'Nueva Entrega'} user={props.user.uid} blockGoBack={true}>\r\n            <Paper className={classes.content}>\r\n                {/* STEPPER */}\r\n                <Stepper orientation='vertical' activeStep={activeStep} className={classes.stepper}>\r\n                    {steps.map((label,index)=>(\r\n                        <Step>\r\n                            {getStepLabel(label,index)}\r\n                            <StepContent>\r\n                                <Grid container item xs={12} justify='center' spacing={3}>\r\n                                    {getStepContent(index)}\r\n                                    <Grid container item xs={12} justify='center'>\r\n                                        <Grid item>\r\n                                            <Button\r\n                                                disabled={activeStep===0}\r\n                                                onClick={handleBack}\r\n                                            >\r\n                                                Volver\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                disabled={setDisabled(activeStep)}\r\n                                                onClick={activeStep === steps.length - 1 ? guardarEntrega : handleNext}\r\n                                            >\r\n                                                {activeStep === steps.length - 1 ? `${props.history.location.search?'Guardar Edicion':'Guardar Entrega'}` : 'Siguiente'}\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </StepContent>\r\n                        </Step>\r\n                    ))}\r\n                </Stepper>\r\n                {/* BACKDROP & SNACKBAR */}\r\n                <Backdrop className={classes.backdrop} open={loading}>\r\n                    <CircularProgress color=\"inherit\" />\r\n                    <Snackbar open={showSnackbar} autoHideDuration={2000} onClose={()=>{setshowSnackbar('')}}>\r\n                        <Alert severity=\"success\" variant='filled'>\r\n                            {showSnackbar}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </Backdrop>\r\n            </Paper>\r\n        </Layout>\r\n    )\r\n}\r\n\r\n// REDUX STATE TO PROPS\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        entregas:state.entregas,\r\n        productos:state.productos,\r\n        proveedores:state.proveedores,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(NuevaEntrega)","import React, {useState,useEffect} from 'react'\r\nimport {Grid,Paper,Checkbox,ListItem,ListItemText,ListItemSecondaryAction,IconButton,makeStyles,TableContainer,Table,TableCell,TableRow,TableHead,TableBody} from '@material-ui/core'\r\nimport {EditOutlined,DeleteOutlineOutlined, CheckBox} from '@material-ui/icons'\r\nimport {content} from '../../Pages/styles/styles'\r\nimport { formatMoney } from '../../utilities'\r\n\r\nexport const Cheques = ({chequesList,cheques,addCheque}) =>{\r\n    const classes = content()\r\n    return (\r\n        <Grid container item xs={12}>\r\n            <TableContainer component={Paper} style={{maxHeight:'300px'}}>\r\n                    <Table style={{width:'100%'}} aria-label=\"simple table\" size='small' stickyHeader>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell className={classes.titleDetallesCard} padding='checkbox'></TableCell>\r\n                                <TableCell className={classes.titleDetallesCard} align='left'>Nombre</TableCell>\r\n                                <TableCell className={classes.titleDetallesCard} align='right'>Valor</TableCell>\r\n                                <TableCell className={classes.titleDetallesCard} align=\"right\">Banco</TableCell>\r\n                                <TableCell className={classes.titleDetallesCard} align=\"right\">Numero</TableCell>\r\n                                <TableCell className={classes.titleDetallesCard} align=\"right\">Vencimiento</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {chequesList?\r\n                            Object.keys(chequesList).reverse().map((cheque,i)=>(\r\n                                !chequesList[cheque].dadoDeBaja && !chequesList[cheque].destinatario?\r\n                                    <TableRow onClick={()=>{addCheque(cheque)}} style={{cursor:'pointer'}}>\r\n                                            <TableCell>\r\n                                                <Checkbox\r\n                                                    color='primary'\r\n                                                    checked={cheques.indexOf(cheque) !== -1}\r\n                                                />\r\n                                            </TableCell>\r\n                                            <TableCell align='left'>{chequesList[cheque].nombre}</TableCell>\r\n                                            <TableCell align=\"right\">$ {formatMoney(chequesList[cheque].valor)}</TableCell>\r\n                                            <TableCell align=\"right\">{chequesList[cheque].banco}</TableCell>\r\n                                            <TableCell align=\"right\">{chequesList[cheque].numero}</TableCell>\r\n                                            <TableCell align=\"right\">{chequesList[cheque].vencimiento}</TableCell>\r\n                                    </TableRow>\r\n                                    :\r\n                                    null\r\n                            ))\r\n                            :\r\n                            null\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n        </Grid>\r\n    )\r\n}","import React from 'react'\r\nimport {Grid,Paper,List,ListItem,ListItemText,ListItemSecondaryAction,IconButton,makeStyles,TableContainer,Table,TableCell,TableRow,TableHead,TableBody} from '@material-ui/core'\r\nimport {EditOutlined,DeleteOutlineOutlined} from '@material-ui/icons'\r\nimport {content} from '../../Pages/styles/styles'\r\n\r\nexport const ChequesPersonales = ({cheques,seteditIndex,showDialog,openDialogDelete}) =>{\r\n    const classes = content()\r\n\r\n    const openDialog = index =>{\r\n        seteditIndex(index)\r\n        showDialog()\r\n    }\r\n\r\n    return (\r\n        <Grid item>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className={classes.titleDetallesCard}>Valor</TableCell>\r\n                            <TableCell className={classes.titleDetallesCard} align=\"right\">Numero</TableCell>\r\n                            <TableCell className={classes.titleDetallesCard} align=\"right\">Vencimiento</TableCell>\r\n                            <TableCell className={classes.titleDetallesCard} align=\"right\" padding='checkbox'></TableCell>\r\n                            <TableCell className={classes.titleDetallesCard} align=\"right\" padding='checkbox'></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {cheques.map((cheque,i)=>(\r\n                            <TableRow>\r\n                                <TableCell align=\"right\">$ {cheque.valor}</TableCell>\r\n                                <TableCell align=\"right\">{cheque.numero}</TableCell>\r\n                                <TableCell align=\"right\">{cheque.vencimiento}</TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <IconButton className={classes.icon} edge=\"end\" aria-label=\"delete\" onClick={()=>{openDialog(i)}}>\r\n                                        <EditOutlined />\r\n                                    </IconButton>\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <IconButton className={classes.icon} edge=\"end\" aria-label=\"delete\" onClick={()=>{openDialogDelete(i)}}>\r\n                                        <DeleteOutlineOutlined color='error'/>\r\n                                    </IconButton>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Grid>\r\n    )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport {Dialog,DialogTitle,DialogContent,DialogActions,TextField,Button,Grid,makeStyles,FormControl,Select,Input,MenuItem,List,ListItem,ListItemText, Typography,IconButton} from '@material-ui/core'\r\nimport {EditOutlined} from '@material-ui/icons'\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {MuiPickersUtilsProvider,KeyboardTimePicker,KeyboardDatePicker,} from '@material-ui/pickers';\r\nimport {content} from '../../../Pages/styles/styles'\r\n\r\nexport const DialogNuevoChequePersonal = ({open,setOpen,listaCheques,setListaCheques,listaChequesPersonales,setListaChequesPersonales,totalChequesPersonales,setTotalChequesPersonales,edit,editIndex,seteditIndex,cliente}) =>{\r\n    const classes = content()\r\n    const [numero,setnumero]=useState(undefined)\r\n    const [vencimiento,setvencimiento]=useState(undefined)\r\n    const [valor,setvalor]=useState(undefined)\r\n    const [editarPrecio,seteditarPrecio]=useState(false)\r\n    \r\n    \r\n    // FUNCTIONS\r\n    const resetTextFields = () =>{\r\n        setnumero('')\r\n        setvencimiento(undefined)\r\n        setvalor('')\r\n    }\r\n    const agregarCheque = () =>{\r\n        let aux = listaChequesPersonales\r\n        aux.push({\r\n            destinatario:cliente,\r\n            numero:numero,\r\n            vencimiento:vencimiento.toLocaleDateString(),\r\n            valor:valor\r\n        })\r\n        setTotalChequesPersonales(parseFloat(totalChequesPersonales)+parseFloat(valor))\r\n        setListaChequesPersonales(aux)\r\n    }\r\n    const editarCheque = () =>{\r\n        let aux = listaChequesPersonales\r\n        let nuevoTotal = parseFloat(totalChequesPersonales) - parseFloat(aux[editIndex].valor) + parseFloat(valor)\r\n        const auxVencimiento = vencimiento === (convertirVencimiento(listaChequesPersonales[editIndex].vencimiento)) ? convertirVencimiento(vencimiento):vencimiento.toLocaleDateString()\r\n        setTotalChequesPersonales(nuevoTotal)\r\n        aux[editIndex]={\r\n            destinatario:cliente,\r\n            numero:numero,\r\n            vencimiento:auxVencimiento,\r\n            valor:valor\r\n        }\r\n        setListaChequesPersonales(aux)\r\n    }\r\n    const convertirVencimiento= (vencimiento)=>{\r\n        return `${vencimiento.slice(vencimiento.indexOf('/')+1,vencimiento.lastIndexOf('/'))}/${vencimiento.slice(0,vencimiento.indexOf('/'))}${vencimiento.slice(vencimiento.lastIndexOf('/'))}`\r\n    }\r\n    \r\n    // FILL FOR EDIT\r\n    useEffect(()=>{\r\n        if(edit){\r\n            setnumero(listaChequesPersonales[editIndex].numero)\r\n            setvencimiento(convertirVencimiento(listaChequesPersonales[editIndex].vencimiento))\r\n            setvalor(listaChequesPersonales[editIndex].valor)\r\n        }\r\n    },[edit])\r\n\r\n    // CONTENT\r\n    return(\r\n        <Dialog open={open} maxWidth='md'>\r\n            <DialogTitle>\r\n                {edit?\r\n                    'Editar Cheque'\r\n                    :\r\n                    'Ingresa los datos del cheque'\r\n                }\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <Grid container direction='column' alignItems='center' spacing={2}>\r\n                    <Grid item>\r\n                        <TextField\r\n                            fullWidth\r\n                            label='Numero'\r\n                            type='number'\r\n                            value={numero}\r\n                            onChange={e=>{\r\n                                setnumero(e.target.value)\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils} noValidate>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"dd/MM/yyyy\"\r\n                            label=\"Fecha de Vencimiento\"\r\n                            value={vencimiento}\r\n                            onChange={fecha=>{\r\n                                setvencimiento(fecha)\r\n                            }}\r\n                        />\r\n                    </MuiPickersUtilsProvider   >\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            fullWidth\r\n                            label='Valor'\r\n                            type='number'\r\n                            value={valor}\r\n                            onChange={e=>{\r\n                                setvalor(e.target.value)\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button \r\n                    onClick={()=>{\r\n                        if(edit){\r\n                            seteditIndex(-1)\r\n                        }\r\n                        seteditarPrecio(false)\r\n                        resetTextFields()\r\n                        setOpen(false)\r\n                    }}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n                <Button\r\n                    disabled={!numero||!vencimiento||!valor}\r\n                    onClick={()=>{\r\n                        if(edit){\r\n                            editarCheque()\r\n                            seteditIndex(-1)\r\n                        }\r\n                        else{\r\n                            agregarCheque()\r\n                        }\r\n                        seteditarPrecio(false)\r\n                        resetTextFields()\r\n                        setOpen(false)\r\n                    }}\r\n                >\r\n                    {edit?\r\n                        'Editar'\r\n                        :\r\n                        'Agregar'\r\n                    }\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport {Dialog,DialogTitle,DialogContent,DialogActions,TextField,Button,Grid,makeStyles} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    input:{\r\n        marginBottom:theme.spacing(1),\r\n        textAlign:'center'\r\n    }\r\n}))\r\n\r\nexport const DialogEliminarCheque = ({open,setopen,datos,setDatos,index,setdeleteIndex,tipoDeElemento,total,settotal}) =>{\r\n    const classes = useStyles()\r\n    \r\n    const eliminarCheque = () =>{\r\n        settotal(parseInt(total)-datos[index].valor)\r\n        let aux = datos\r\n        console.log(aux)\r\n        aux.splice(index,1)\r\n        setDatos(aux)\r\n    }\r\n    return(\r\n        <Dialog open={open}>\r\n            <DialogTitle>\r\n                Desea Eliminar {tipoDeElemento}?\r\n            </DialogTitle>\r\n            <DialogActions>\r\n                <Button \r\n                    onClick={()=>{\r\n                        setopen(false)\r\n                        setdeleteIndex(undefined)\r\n                    }}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n                <Button\r\n                    color='error'\r\n                    onClick={()=>{\r\n                        eliminarCheque()\r\n                        setopen(false)\r\n                        setdeleteIndex(undefined)\r\n                    }}\r\n                >\r\n                    Eliminar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React, { useState,useEffect } from 'react'\r\nimport {Grid, Button,InputAdornment,Select,Input,Chip,MenuItem,Paper,FormControl, TextField,Tab,Tabs,AppBar,Typography,Box,Switch,FormControlLabel,InputLabel} from '@material-ui/core'\r\nimport {AddOutlined,AttachMoney} from '@material-ui/icons'\r\nimport { Autocomplete } from '@material-ui/lab'\r\nimport {Cheques} from './Cheques'\r\nimport {ChequesPersonales} from './ChequesPersonales'\r\nimport {content} from '../../Pages/styles/styles'\r\nimport { DialogNuevoChequePersonal } from './Dialogs/DialogNuevoChequePersonal'\r\nimport {DialogEliminarCheque} from './Dialogs/DialogEliminarCheque'\r\n\r\n\r\n\r\nexport const Step = ({efectivo,setefectivo,cheques,setcheques,addCheque,chequesPersonales,setChequesPersonales,totalChequesPersonales,setTotalChequesPersonales,setexpreso,remito,setremito,tipoDeDato,setprecio,setsumarEnvio,sumarEnvio,nombre,chequesList,tipo,cuentaTransferencia,setCuentaTransferencia,totalTransferencia,setTotalTransferencia,cuentasBancarias}) =>{\r\n    const classes = content()\r\n    const [showDialog,setshowDialog]=useState(false)\r\n    const [editIndex,seteditIndex]=useState(-1)\r\n    const [showDialogDelete,setshowDialogDelete]=useState(false)\r\n    const [deleteIndex,setdeleteIndex]=useState(undefined)\r\n    const [value,setValue]=useState(0)\r\n    const [check,setcheck]=useState(false)\r\n\r\n    const resetTextFields =() =>{\r\n        setexpreso('')\r\n        setremito('')\r\n        setprecio('')\r\n        setsumarEnvio(false)\r\n    }\r\n    const openDialogDelete = (index) =>{\r\n        setdeleteIndex(index)\r\n        setshowDialogDelete(true)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        console.log(cheques)\r\n    },[cheques])\r\n    // RENDER\r\n    switch (tipoDeDato) {\r\n        case 'Efectivo': \r\n            return(\r\n                <Grid container item xs={12} justify='center'>\r\n                    <Grid container item xs={12} justify='center'>\r\n                        <TextField\r\n                            autoFocus   \r\n                            style={{ width: '250px' }}\r\n                            value={efectivo}\r\n                            label=\"Monto\"\r\n                            variant='outlined'\r\n                            type='number'\r\n                            onChange={e=>{\r\n                                setefectivo(e.target.value)\r\n                            }}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <AttachMoney />\r\n                                </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n            case 'Transferencia': \r\n                return(\r\n                    <Grid container item xs={12} spacing={1} alignItems='center' justify='center'>\r\n                        <Grid container item xs={12} justify='center'>\r\n                            <Autocomplete\r\n                                freeSolo\r\n                                options={cuentasBancarias?Object.keys(cuentasBancarias):{}}\r\n                                disabled={!cuentasBancarias}\r\n                                getOptionLabel={(option) => option}\r\n                                onSelect={(e)=>{setCuentaTransferencia(e.target.value)}}\r\n                                onChange={(e)=>{setCuentaTransferencia(e.target.value)}}\r\n                                value={cuentaTransferencia}\r\n                                style={{ width: 300 }}\r\n                                renderInput={(params) => <TextField {...params} label=\"Cuenta de Destino\" variant=\"outlined\" />}\r\n                            />\r\n                        </Grid>\r\n                        <Grid container item xs={12} justify='center'>\r\n                            <TextField\r\n                                autoFocus   \r\n                                style={{ width: '250px' }}\r\n                                value={totalTransferencia}\r\n                                variant='outlined'\r\n                                type='number'\r\n                                label=\"Monto\"\r\n                                onChange={e=>{\r\n                                    setTotalTransferencia(e.target.value)\r\n                                }}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <AttachMoney />\r\n                                    </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                )\r\n            case 'Cheques': \r\n                return(\r\n                    <Grid container xs={12} spacing={3}>\r\n                        <Grid container item xs={12} justify='center'>\r\n                            <Button variant='contained' color='primary' startIcon={<AddOutlined/>} onClick={()=>{setshowDialog(true)}}>\r\n                                Agregar Cheque Personal\r\n                            </Button>\r\n                        </Grid>\r\n                        {\r\n                            chequesPersonales.length?\r\n                                <Grid container item xs={12} spacing={1} alignItems='center' justify='center'>\r\n                                    <ChequesPersonales cheques={chequesPersonales} seteditIndex={seteditIndex} showDialog={()=>{setshowDialog(true)}} openDialogDelete={i=>{openDialogDelete(i)}}/>\r\n                                </Grid>\r\n                                :\r\n                                null\r\n                        }\r\n                        <Grid container item xs={12} spacing={1} alignItems='center' justify='center'>\r\n                            <Cheques cheques={cheques} chequesList={chequesList} addCheque={addCheque}/>\r\n                        </Grid>\r\n                            {/* DIALOGS CHEQUES PERSONALES*/}\r\n                            <DialogNuevoChequePersonal\r\n                                open={showDialog} \r\n                                setOpen={setshowDialog} \r\n                                listaChequesPersonales={chequesPersonales}\r\n                                setListaChequesPersonales={setChequesPersonales}\r\n                                edit={editIndex!=-1} \r\n                                editIndex={editIndex} \r\n                                seteditIndex={seteditIndex}\r\n                                totalChequesPersonales={totalChequesPersonales}\r\n                                setTotalChequesPersonales={setTotalChequesPersonales}\r\n                                cliente={nombre}\r\n                            />\r\n                            <DialogEliminarCheque \r\n                                open={showDialogDelete} \r\n                                setopen={setshowDialogDelete} \r\n                                datos={chequesPersonales} \r\n                                setDatos={setChequesPersonales} \r\n                                index={deleteIndex} \r\n                                setdeleteIndex={setdeleteIndex} \r\n                                tipoDeElemento='Cheque'\r\n                                total={totalChequesPersonales}\r\n                                settotal={setTotalChequesPersonales}\r\n                            />\r\n                    </Grid>\r\n                )\r\n    }\r\n    \r\n}","import React,{useState, useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {Grid,Paper,Chip,Card,Button,StepContent,Backdrop,StepLabel,Typography,Step,Stepper,Snackbar,CircularProgress} from '@material-ui/core'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {Step as StepComponent} from '../components/Recibir-Entrega/Step'\r\nimport {database} from 'firebase'\r\nimport {formatMoney} from '../utilities'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {obtenerFecha} from '../utilities'\r\nimport {content} from './styles/styles'\r\nimport { AttachMoney, LocalAtm } from '@material-ui/icons';\r\n  \r\n  const RecibirEntrega=(props)=>{\r\n    const classes = content()\r\n\r\n\r\n    const [cheques,setcheques]=useState([])\r\n    const [total, settotal] = useState(0);\r\n\r\n    const [chequesPersonales,setChequesPersonales]=useState([])\r\n    const [totalChequesPersonales, setTotalChequesPersonales] = useState(0);\r\n\r\n    const [cuentaTransferencia,setCuentaTransferencia]=useState(undefined)\r\n    const [totalTransferencia, setTotalTransferencia] = useState(undefined);\r\n\r\n    const [efectivo,setefectivo]=useState(undefined)\r\n\r\n    const [expreso,setexpreso]=useState('')\r\n    const [remito, setremito] = useState('');\r\n\r\n    const [sumarEnvio,setsumarEnvio]=useState(false)\r\n    const [precio, setprecio] = useState(0);\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [showSnackbar, setshowSnackbar] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const steps = getSteps();\r\n\r\n    //STEPPER NAVIGATION \r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n    function getStepContent(step) {\r\n      switch (step) {\r\n        case 0:\r\n          return (\r\n            <StepComponent\r\n                expresosList={props.expresos}\r\n                efectivo={efectivo}\r\n                setefectivo={setefectivo}\r\n                cheques={cheques}\r\n                setcheques={setcheques}\r\n                addCheque={addCheque}\r\n                tipoDeDato='Efectivo'\r\n                total={total}\r\n                settotal={settotal}\r\n                nombre={props.entregas[props.history.location.search.slice(1)].proveedor}\r\n                chequesList={props.cheques}\r\n                />\r\n          );\r\n          case 1:\r\n            return (\r\n              <StepComponent\r\n                  tipoDeDato='Transferencia'\r\n                  cuentaTransferencia={cuentaTransferencia}\r\n                  setCuentaTransferencia={setCuentaTransferencia}\r\n                  totalTransferencia={totalTransferencia}\r\n                  setTotalTransferencia={setTotalTransferencia}\r\n                  cuentasBancarias={props.cuentasBancarias}\r\n                  />\r\n            );\r\n            case 2:\r\n                return (\r\n                  <StepComponent\r\n                      expresosList={props.expresos}\r\n                      efectivo={efectivo}\r\n                      setefectivo={setefectivo}\r\n                      cheques={cheques}\r\n                      setcheques={setcheques}\r\n                      addCheque={addCheque}\r\n                      chequesPersonales={chequesPersonales}\r\n                      setChequesPersonales={setChequesPersonales}\r\n                      tipoDeDato='Cheques'\r\n                      total={total}\r\n                      settotal={settotal}\r\n                      totalChequesPersonales={totalChequesPersonales}\r\n                      setTotalChequesPersonales={setTotalChequesPersonales}\r\n                      nombre={props.entregas[props.history.location.search.slice(1)].proveedor}\r\n                      chequesList={props.cheques}\r\n                      />\r\n                );\r\n        }\r\n    }\r\n    function getSteps() {\r\n        return ['Efectivo',\"Transferencia\",'Cheques'];\r\n    }\r\n    function getStepLabel(label,index) {\r\n        switch (index) {\r\n            case 0:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<AttachMoney/>} \r\n                            label={label}  \r\n                            onClick={()=>{setActiveStep(index)}}\r\n                            variant='default'\r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n            case 1:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<LocalAtm />} \r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                            label={label} \r\n                            variant='default'\r\n                            onClick={()=>{setActiveStep(index)}}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n            case 2:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<LocalAtm />} \r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                            label={label} \r\n                            variant='default'\r\n                            onClick={()=>{setActiveStep(index)}}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n        }\r\n    }\r\n\r\n    //FUNCTIONS\r\n    const recibirEntrega = async () =>{\r\n        setLoading(true)\r\n        const id = props.history.location.search.slice(1)\r\n\r\n        // AUMENTAR PRDODUCTOS\r\n        aumentarProductos(props.entregas[id].productos)\r\n\r\n        // ACTUALIZA CADA CHEQUE EN DB\r\n        let chequesList = actualizarCheques()\r\n        \r\n        // AGREGA CADA CHEQUE PERSONAL A LA LISTA \r\n        let chequesPersonalesList = agregarChequesPersonales()\r\n\r\n        // FUNCIONES DE ESTRUCTURA\r\n        const calcularDeudaActualizada = () =>{\r\n            return props.proveedores[props.entregas[id].proveedor].datos.deuda + parseFloat(calcularAdeudado())\r\n        }\r\n        const calcularPagado = () =>{\r\n            return total + totalChequesPersonales +(efectivo?parseFloat(efectivo):0) + (totalTransferencia?parseFloat(totalTransferencia):0)\r\n        }     \r\n        const calcularAdeudado = () =>{\r\n            return props.history.location.props.total - (total + totalChequesPersonales +(efectivo?parseFloat(efectivo):0)) +(totalTransferencia?parseFloat(totalTransferencia):0)\r\n        }        \r\n        const calcularTotal = () =>{\r\n            return (total + totalChequesPersonales +(efectivo?parseFloat(efectivo):0) + (totalTransferencia?parseFloat(totalTransferencia):0) )?( (efectivo?parseFloat(efectivo):0) + (totalTransferencia?parseFloat(totalTransferencia):0) ) + total + totalChequesPersonales : null\r\n        }       \r\n\r\n        // ESTRUCTURA DE LA ENTREGA\r\n        let aux={\r\n            fecha:obtenerFecha(),\r\n            articulos:props.entregas[id].productos,\r\n            proveedor:props.entregas[id].proveedor,\r\n            metodoDePago:{\r\n                facturacion:props.location.props.facturacion?props.location.props.facturacion:null,\r\n                efectivo:efectivo?efectivo:null,\r\n                cuentaTransferencia:cuentaTransferencia?cuentaTransferencia:null,\r\n                totalTransferencia:totalTransferencia?totalTransferencia:null,\r\n                cheques:chequesList,\r\n                chequesPersonales:chequesPersonalesList,\r\n                totalChequesPersonales:totalChequesPersonales,\r\n                fecha:obtenerFecha(),\r\n                total:calcularTotal(),\r\n                deudaPasada:props.proveedores[props.entregas[id].proveedor].datos.deuda,\r\n                deudaActualizada:calcularDeudaActualizada(),\r\n                pagado:calcularPagado(),\r\n                adeudado:calcularAdeudado()\r\n            },\r\n            metodoDeEnvio:expreso?{expreso:expreso,remito:remito,precio:precio}:'Particular',\r\n            total:props.history.location.props.total + (sumarEnvio?parseFloat(precio):0)\r\n        }\r\n        \r\n        // ACTUALIZA LA DEUDA DEL PROVEEDOR\r\n        actualizarDeuda(aux.total, total + totalChequesPersonales + (efectivo?parseFloat(efectivo):0) +(totalTransferencia?parseFloat(totalTransferencia):0))\r\n       \r\n        if(props.location.props.facturacion){\r\n            aux.articulos = actualizarPrecios(aux.articulos)\r\n        }\r\n\r\n\r\n        // AGREGA LA ENTREGA A DB PARA OBTENER ID\r\n        let idLink = database().ref().child(props.user.uid).child('proveedores').child(props.entregas[id].proveedor).child('entregas').push()\r\n    \r\n        // AGREGA A LISTA DE COMPRAS\r\n        agregarAListaDeCompras(aux,idLink.key)\r\n\r\n        // MODELA Y AGREGA EL PAGO AL HISTORIAL\r\n        agregarPagoAlHistorial(aux.metodoDePago,idLink.key,id)\r\n        \r\n        // MODELA Y AGREGA LA TRANSFERENCIA A LOS MOVIMIENTOS BANCARIOS\r\n        if(aux.metodoDePago.cuentaTransferencia){\r\n            guardarTransferenciaBancaria(aux.metodoDePago.cuentaTransferencia,aux.metodoDePago.totalTransferencia)\r\n        }\r\n        \r\n        // FEEDBACK DEL PROCESO\r\n        setshowSnackbar('La entrega se agregó correctamente!')\r\n\r\n        // ACTUALIZA DB ENVIANDO TODA LA INFO\r\n        idLink.update(aux)\r\n            .then(()=>{\r\n                setTimeout(() => {\r\n                    props.history.replace('/Entregas')\r\n                    database().ref().child(props.user.uid).child('entregas').child(id).remove().then(()=>{\r\n                    })\r\n                    .catch(()=>{\r\n                        setLoading(false)\r\n                        setshowSnackbar('')\r\n                     })\r\n                }, 2000);\r\n            })\r\n            .catch(()=>{\r\n                setLoading(false)\r\n            })\r\n    }\r\n    const actualizarPrecios = (articulos) =>{\r\n        let aux =articulos\r\n        aux.map(articulo=>{\r\n            articulo.precio=articulo.precio+articulo.precio*0.21\r\n            articulo.total = parseFloat(articulo.cantidad) * articulo.precio\r\n        })\r\n        return aux\r\n    }\r\n    const aumentarProductos = async articulos =>{\r\n        const aux = articulos\r\n        // RECORRE LOS ARTICULOS DEL PEDIDO\r\n        aux.map(async (articulo)=>{\r\n                const nuevaCantidad = parseInt(props.productos[articulo.producto].cantidad)+parseInt(articulo.cantidad)\r\n                await database().ref().child(props.user.uid).child('productos').child(articulo.producto).update({cantidad:nuevaCantidad})\r\n                //await database().ref().child(props.user.uid).child('productos').child(articulo.producto).child('historialDeStock').push({cantidad:nuevaCantidad,fecha:obtenerFecha()})\r\n        })\r\n    }\r\n    const actualizarCheques =() =>{\r\n        let chequesList= []\r\n        if(cheques.length){\r\n            // RECORRE LA LISTA DE CHEQUES \r\n            cheques.map(cheque=>{\r\n                // ACTUALIZA EL CHEQUE EN DB\r\n                database().ref().child(props.user.uid).child('cheques').child(cheque).update({\r\n                    destinatario:props.entregas[props.history.location.search.slice(1)].proveedor,\r\n                    egreso:obtenerFecha()\r\n                })\r\n                // GUARDA EL NUMERO DE CHEQUE\r\n                chequesList.push(props.cheques[cheque].numero)\r\n            })\r\n        }\r\n        // RETORNA UNA LISTA CON CADA NUMERO DE CHEQUE\r\n        return chequesList\r\n    }\r\n    const agregarChequesPersonales = () =>{\r\n        let chequesList= []\r\n        if(chequesPersonales.length){\r\n            // RECORRE LA LISTA DE CHEQUES \r\n            chequesPersonales.map(cheque=>{\r\n                // GUARDA EL NUMERO DE CHEQUE\r\n                chequesList.push(cheque.numero)\r\n                // ESTRUCTURA DEL CHEQUE\r\n                let auxCheque = {\r\n                    egreso:obtenerFecha(),\r\n                    destinatario:cheque.destinatario,\r\n                    numero:cheque.numero,\r\n                    vencimiento:cheque.vencimiento,\r\n                    valor:cheque.valor\r\n                }\r\n                // GUARDA EN LA LISTA DE CHQUES CADA UNO\r\n                database().ref().child(props.user.uid).child('chequesPersonales').push(auxCheque)\r\n            })\r\n        }\r\n        // RETORNA UNA LISTA CON CADA NUMERO DE CHEQUE\r\n        return chequesList\r\n    }\r\n    const actualizarDeuda = (totalPedido,totalRecibido) =>{\r\n        const id = props.history.location.search.slice(1)\r\n        const deudaPasada = props.proveedores[props.entregas[id].proveedor].datos.deuda\r\n        if(totalPedido>totalRecibido){\r\n            database().ref().child(props.user.uid).child('proveedores').child(props.entregas[id].proveedor).child('datos').update({deuda:(deudaPasada)+(totalPedido-totalRecibido)})\r\n        }\r\n        else{\r\n            database().ref().child(props.user.uid).child('proveedores').child(props.entregas[id].proveedor).child('datos').update({deuda:(deudaPasada)-(totalRecibido-totalPedido)})\r\n        }\r\n    }\r\n    const agregarPagoAlHistorial = (pago,idLink,idEntrega) =>{\r\n        let aux= {...pago,idEntrega:idLink}\r\n        database().ref().child(props.user.uid).child('proveedores').child(props.entregas[idEntrega].proveedor).child('pagos').push(aux)\r\n    }\r\n    const agregarAListaDeCompras = (entrega,idLink) =>{\r\n        let aux=entrega\r\n        aux['idEntrega']=idLink\r\n        database().ref().child(props.user.uid).child('compras').push(aux)\r\n    }\r\n    const guardarTransferenciaBancaria = async (cuenta,total) =>{\r\n        const auxDeposito ={\r\n            fecha:obtenerFecha(),\r\n            tipo:'transferencia',\r\n            total:total\r\n        }\r\n        await database().ref().child(props.user.uid).child('CuentasBancarias').child(cuenta).child('egresos').push(auxDeposito)\r\n    }\r\n\r\n    const addCheque = key =>{\r\n        const index = cheques.indexOf(key)\r\n        let aux = [...cheques]\r\n        if(index !== -1){\r\n            aux.splice(index,1)\r\n            settotal(parseFloat(total)-parseFloat(props.cheques[key].valor))\r\n        }\r\n        else{\r\n            aux.push(key)\r\n            settotal(parseFloat(total)+parseFloat(props.cheques[key].valor))\r\n        }\r\n        setcheques(aux)\r\n    }\r\n\r\n    return(\r\n        props.history.location.props?\r\n            <Layout history={props.history} page='Recibir Entrega' user={props.user.uid} blockGoBack={true}>\r\n                {/* CONTENT */}\r\n                <Paper className={classes.content}>\r\n                    {/* STEPPER */}\r\n                    <Stepper orientation='vertical' activeStep={activeStep} className={classes.stepper}>\r\n                        {steps.map((label,index)=>(\r\n                            <Step>\r\n                                {getStepLabel(label,index)}\r\n                                <StepContent>\r\n                                    <Grid container xs={12} justify='center' spacing={3}>\r\n                                        {getStepContent(index)}\r\n                                        <Grid container item xs={12} justify='center'>\r\n                                            <Paper elevation={3} variant='body1' className={classes.paperTotalRecibirEntrega}>\r\n                                                <Grid item xs={12}>\r\n                                                    <Typography variant='h6'>\r\n                                                        Total $ {formatMoney( total + totalChequesPersonales + (efectivo?parseFloat(efectivo):0) + (totalTransferencia?parseFloat(totalTransferencia):0))} / $ {formatMoney( parseFloat(props.history.location.props.total) + (sumarEnvio?precio?parseFloat(precio):0:0 ) ) }\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid container item xs={12} justify='center'>\r\n                                                    <Chip label={`$ ${formatMoney(( parseFloat(props.history.location.props.total) + (sumarEnvio?precio?parseFloat(precio):0:0 ) ) - ( total + totalChequesPersonales +(efectivo?parseFloat(efectivo):0) + (totalTransferencia?parseFloat(totalTransferencia):0)))}`}/>\r\n                                                </Grid>\r\n                                            </Paper>\r\n                                        </Grid>\r\n                                        <Grid container item xs={12} justify='center'>\r\n                                            <Grid item>\r\n                                                <Button\r\n                                                    disabled={activeStep===0}\r\n                                                    onClick={handleBack}\r\n                                                >\r\n                                                    Volver\r\n                                                </Button>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Button\r\n                                                    variant=\"contained\"\r\n                                                    color=\"primary\"\r\n                                                    onClick={activeStep === steps.length - 1 ? recibirEntrega : handleNext}\r\n                                                >\r\n                                                    {activeStep === steps.length - 1 ? 'Finalizar' : 'Siguiente'}\r\n                                                </Button>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </StepContent>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                </Paper>\r\n                \r\n                {/* BACKDROP & SNACKBAR */}\r\n                <Backdrop className={classes.backdrop} open={loading}>\r\n                    <CircularProgress color=\"inherit\" />\r\n                    <Snackbar open={showSnackbar} autoHideDuration={2000} onClose={()=>{setshowSnackbar('')}}>\r\n                        <Alert severity=\"success\" variant='filled'>\r\n                            {showSnackbar}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </Backdrop>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/Entregas'/>\r\n    )\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        expresos:state.expresos,\r\n        entregas:state.entregas,\r\n        productos:state.productos,\r\n        proveedores:state.proveedores,\r\n        cheques:state.cheques,\r\n        cuentasBancarias:state.CuentasBancarias\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(RecibirEntrega)","import React,{useState,useEffect} from 'react'\r\nimport {Dialog,DialogTitle,DialogContent,DialogActions,TextField,Button,Grid,makeStyles,FormControl,Select,Input,MenuItem,List,ListItem,ListItemText, Typography,IconButton} from '@material-ui/core'\r\nimport {EditOutlined} from '@material-ui/icons'\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {MuiPickersUtilsProvider,KeyboardTimePicker,KeyboardDatePicker,} from '@material-ui/pickers';\r\nimport {content} from '../../../Pages/styles/styles'\r\n\r\nexport const DialogNuevoCheque = ({open,setOpen,datos,setdatos,edit,editIndex,seteditIndex,total,settotal,cliente}) =>{\r\n    const classes = content()\r\n    const [numero,setnumero]=useState(undefined)\r\n    const [banco,setbanco]=useState(undefined)\r\n    const [vencimiento,setvencimiento]=useState(undefined)\r\n    const [valor,setvalor]=useState(undefined)\r\n    const [editarPrecio,seteditarPrecio]=useState(false)\r\n    \r\n    \r\n    // FUNCTIONS\r\n    const resetTextFields = () =>{\r\n        setnumero('')\r\n        setbanco('')\r\n        setvencimiento(undefined)\r\n        setvalor('')\r\n    }\r\n    const agregarCheque = () =>{\r\n        let aux = datos\r\n        aux.push({\r\n            nombre:cliente,\r\n            numero:numero,\r\n            banco:banco,\r\n            vencimiento:vencimiento.toLocaleDateString(),\r\n            valor:valor\r\n        })\r\n        settotal(parseFloat(total)+parseFloat(valor))\r\n        setdatos(aux)\r\n    }\r\n    const editarCheque = () =>{\r\n        let aux = datos\r\n        let nuevoTotal = parseFloat(total) - parseFloat(aux[editIndex].valor) + parseFloat(valor)\r\n        const auxVencimiento = vencimiento === (convertirVencimiento(datos[editIndex].vencimiento)) ? convertirVencimiento(vencimiento):vencimiento.toLocaleDateString()\r\n        settotal(nuevoTotal)\r\n        aux[editIndex]={\r\n            nombre:cliente,\r\n            numero:numero,\r\n            banco:banco,\r\n            vencimiento:auxVencimiento,\r\n            valor:valor\r\n        }\r\n        setdatos(aux)\r\n    }\r\n    const convertirVencimiento= (vencimiento)=>{\r\n        return `${vencimiento.slice(vencimiento.indexOf('/')+1,vencimiento.lastIndexOf('/'))}/${vencimiento.slice(0,vencimiento.indexOf('/'))}${vencimiento.slice(vencimiento.lastIndexOf('/'))}`\r\n    }\r\n    \r\n    // FILL FOR EDIT\r\n    useEffect(()=>{\r\n        if(edit){\r\n            setnumero(datos[editIndex].numero)\r\n            setbanco(datos[editIndex].banco)\r\n            setvencimiento(convertirVencimiento(datos[editIndex].vencimiento))\r\n            setvalor(datos[editIndex].valor)\r\n        }\r\n    },[edit])\r\n\r\n    // CONTENT\r\n    return(\r\n        <Dialog open={open} maxWidth='md'>\r\n            <DialogTitle>\r\n                {edit?\r\n                    'Editar Cheque'\r\n                    :\r\n                    'Ingresa los datos del cheque'\r\n                }\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <Grid container direction='column' alignItems='center' spacing={2}>\r\n                    <Grid item>\r\n                        <TextField\r\n                            fullWidth\r\n                            label='Numero'\r\n                            type='number'\r\n                            value={numero}\r\n                            onChange={e=>{\r\n                                setnumero(e.target.value)\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            fullWidth\r\n                            label='Banco'\r\n                            value={banco}\r\n                            onChange={e=>{\r\n                                setbanco(e.target.value)\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils} noValidate>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"dd/MM/yyyy\"\r\n                            label=\"Fecha de Vencimiento\"\r\n                            value={vencimiento}\r\n                            onChange={fecha=>{\r\n                                setvencimiento(fecha)\r\n                            }}\r\n                        />\r\n                    </MuiPickersUtilsProvider   >\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            fullWidth\r\n                            label='Valor'\r\n                            type='number'\r\n                            value={valor}\r\n                            onChange={e=>{\r\n                                setvalor(e.target.value)\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button \r\n                    onClick={()=>{\r\n                        if(edit){\r\n                            seteditIndex(-1)\r\n                        }\r\n                        seteditarPrecio(false)\r\n                        resetTextFields()\r\n                        setOpen(false)\r\n                    }}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n                <Button\r\n                    disabled={!numero||!banco||!vencimiento||!valor}\r\n                    onClick={()=>{\r\n                        if(edit){\r\n                            editarCheque()\r\n                            seteditIndex(-1)\r\n                        }\r\n                        else{\r\n                            agregarCheque()\r\n                        }\r\n                        seteditarPrecio(false)\r\n                        resetTextFields()\r\n                        setOpen(false)\r\n                    }}\r\n                >\r\n                    {edit?\r\n                        'Editar'\r\n                        :\r\n                        'Agregar'\r\n                    }\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport {Dialog,DialogTitle,DialogContent,DialogActions,TextField,Button,Grid,makeStyles} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    input:{\r\n        marginBottom:theme.spacing(1),\r\n        textAlign:'center'\r\n    }\r\n}))\r\n\r\nexport const DialogEliminarCheque = ({open,setopen,datos,setDatos,index,setdeleteIndex,tipoDeElemento,total,settotal}) =>{\r\n    const classes = useStyles()\r\n    \r\n    const eliminarCheque = () =>{\r\n        settotal(parseInt(total)-datos[index].valor)\r\n        let aux = datos\r\n        console.log(aux)\r\n        aux.splice(index,1)\r\n        setDatos(aux)\r\n    }\r\n    return(\r\n        <Dialog open={open}>\r\n            <DialogTitle>\r\n                Desea Eliminar {tipoDeElemento}?\r\n            </DialogTitle>\r\n            <DialogActions>\r\n                <Button \r\n                    onClick={()=>{\r\n                        setopen(false)\r\n                        setdeleteIndex(undefined)\r\n                    }}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n                <Button\r\n                    color='error'\r\n                    onClick={()=>{\r\n                        eliminarCheque()\r\n                        setopen(false)\r\n                        setdeleteIndex(undefined)\r\n                    }}\r\n                >\r\n                    Eliminar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React from 'react'\r\nimport {Grid,Paper,List,ListItem,ListItemText,ListItemSecondaryAction,IconButton,makeStyles,TableContainer,Table,TableCell,TableRow,TableHead,TableBody} from '@material-ui/core'\r\nimport {EditOutlined,DeleteOutlineOutlined} from '@material-ui/icons'\r\nimport {content} from '../../Pages/styles/styles'\r\n\r\nexport const Cheques = ({cheques,seteditIndex,showDialog,openDialogDelete}) =>{\r\n    const classes = content()\r\n\r\n    const openDialog = index =>{\r\n        seteditIndex(index)\r\n        showDialog()\r\n    }\r\n\r\n    return (\r\n        <Grid item>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className={classes.titleDetallesCard}>Nombre</TableCell>\r\n                            <TableCell className={classes.titleDetallesCard}>Valor</TableCell>\r\n                            <TableCell className={classes.titleDetallesCard} align=\"right\">Banco</TableCell>\r\n                            <TableCell className={classes.titleDetallesCard} align=\"right\">Numero</TableCell>\r\n                            <TableCell className={classes.titleDetallesCard} align=\"right\">Vencimiento</TableCell>\r\n                            <TableCell className={classes.titleDetallesCard} align=\"right\" padding='checkbox'></TableCell>\r\n                            <TableCell className={classes.titleDetallesCard} align=\"right\" padding='checkbox'></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {cheques.map((cheque,i)=>(\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {cheque.nombre}\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">$ {cheque.valor}</TableCell>\r\n                                <TableCell align=\"right\">{cheque.banco}</TableCell>\r\n                                <TableCell align=\"right\">{cheque.numero}</TableCell>\r\n                                <TableCell align=\"right\">{cheque.vencimiento}</TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <IconButton className={classes.icon} edge=\"end\" aria-label=\"delete\" onClick={()=>{openDialog(i)}}>\r\n                                        <EditOutlined />\r\n                                    </IconButton>\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <IconButton className={classes.icon} edge=\"end\" aria-label=\"delete\" onClick={()=>{openDialogDelete(i)}}>\r\n                                        <DeleteOutlineOutlined color='error'/>\r\n                                    </IconButton>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Grid>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport {Grid, Button,InputAdornment,Select,Input,Chip,MenuItem,Paper,FormControl, TextField,Tab,Tabs,AppBar,Typography,Box,Switch,FormControlLabel,InputLabel} from '@material-ui/core'\r\nimport {AddOutlined, AttachMoney} from '@material-ui/icons'\r\nimport {Autocomplete} from '@material-ui/lab'\r\nimport {DialogNuevoCheque} from './Dialogs/DialogNuevoCheque'\r\nimport {DialogEliminarCheque} from './Dialogs/DialogEliminarCheque'\r\nimport {Cheques} from './Cheques'\r\nimport {content} from '../../Pages/styles/styles'\r\n\r\nexport const Step = ({efectivo,setefectivo,cheques,setcheques,expreso,setexpreso,remito,setremito,tipoDeDato,expresosList,total,settotal,precio,setprecio,setsumarEnvio,sumarEnvio,nombre,cuentaTransferencia,setCuentaTransferencia,totalTransferencia,setTotalTransferencia,cuentasBancarias}) =>{\r\n    const classes = content()\r\n    const [showDialog,setshowDialog]=useState(false)\r\n    const [editIndex,seteditIndex]=useState(-1)\r\n    const [showDialogDelete,setshowDialogDelete]=useState(false)\r\n    const [deleteIndex,setdeleteIndex]=useState(undefined)\r\n    const [value,setValue]=useState(0)\r\n    const [check,setcheck]=useState(false)\r\n\r\n    const openDialogDelete = (index) =>{\r\n        setdeleteIndex(index)\r\n        setshowDialogDelete(true)\r\n    }\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    const TabPanel=(props)=>{\r\n        const { children, value, index, ...other } = props;\r\n      \r\n        return (\r\n          <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n          >\r\n            {value === index && (\r\n              <Box p={3}>\r\n                <Typography>{children}</Typography>\r\n              </Box>\r\n            )}\r\n          </div>\r\n        )\r\n    }\r\n    \r\n\r\n    const resetTextFields =() =>{\r\n        setexpreso('')\r\n        setremito('')\r\n        setprecio('')\r\n        setsumarEnvio(false)\r\n    }\r\n    \r\n    const renderStep = () =>{\r\n        switch (tipoDeDato) {\r\n            case 'Metodo De Pago': \r\n                return(\r\n                    <Grid container xs={12}>\r\n                        <Grid container item xs={12} justify='center'>\r\n                            <Grid item>\r\n                            <AppBar position=\"static\">\r\n                                <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n                                    <Tab label=\"Efectivo\" />\r\n                                    <Tab label=\"Transferencia\" />\r\n                                    <Tab label=\"Cheques\" />\r\n                                </Tabs>\r\n                            </AppBar>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container item xs={12} justify='center'>\r\n                            <Grid item>\r\n                                <TabPanel value={value} index={0}>\r\n                                        <Grid item xs={12}>\r\n                                            <Typography variant='h6'>\r\n                                                Ingrese la cantidad\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <TextField\r\n                                                autoFocus   \r\n                                                style={{ width: '250px' }}\r\n                                                value={efectivo}\r\n                                                variant='outlined'\r\n                                                type='number'\r\n                                                onChange={e=>{\r\n                                                    setefectivo(e.target.value)\r\n                                                }}\r\n                                                InputProps={{\r\n                                                    startAdornment: (\r\n                                                    <InputAdornment position=\"start\">\r\n                                                        <AttachMoney />\r\n                                                    </InputAdornment>\r\n                                                    ),\r\n                                                }}\r\n                                            />\r\n                                        </Grid>\r\n                                </TabPanel>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TabPanel value={value} index={1}>\r\n                                    <Grid container xs={12} spacing={3} justify='center'>\r\n                                        <Grid item xs={12}>\r\n                                            <Autocomplete\r\n                                                freeSolo\r\n                                                options={cuentasBancarias?Object.keys(cuentasBancarias):{}}\r\n                                                disabled={!cuentasBancarias}\r\n                                                getOptionLabel={(option) => option}\r\n                                                onSelect={(e)=>{setCuentaTransferencia(e.target.value)}}\r\n                                                value={cuentaTransferencia}\r\n                                                style={{ width: 300 }}\r\n                                                renderInput={(params) => <TextField {...params} label=\"Cuenta de Destino\" variant=\"outlined\" />}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <TextField\r\n                                                autoFocus   \r\n                                                style={{ width: '250px' }}\r\n                                                value={totalTransferencia}\r\n                                                variant='outlined'\r\n                                                type='number'\r\n                                                label='Monto'\r\n                                                onChange={e=>{\r\n                                                    setTotalTransferencia(e.target.value)\r\n                                                }}\r\n                                                InputProps={{\r\n                                                    startAdornment: (\r\n                                                    <InputAdornment position=\"start\">\r\n                                                        <AttachMoney />\r\n                                                    </InputAdornment>\r\n                                                    ),\r\n                                                }}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </TabPanel>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TabPanel value={value} index={2}>\r\n                                    <Grid container justify='center' spacing={3}>\r\n                                        <Grid container item xs={12} justify='center'>\r\n                                            <Button variant='contained' color='primary' startIcon={<AddOutlined/>} onClick={()=>{setshowDialog(true)}}>\r\n                                                Agregar Cheque\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        {cheques.length?\r\n                                            <Grid container item xs={12} spacing={1} alignItems='center' justify='center'>\r\n                                                <Cheques cheques={cheques} seteditIndex={seteditIndex} showDialog={()=>{setshowDialog(true)}} openDialogDelete={i=>{openDialogDelete(i)}}/>\r\n                                            </Grid>\r\n                                            :\r\n                                            null\r\n                                        }\r\n\r\n                                        {/* DIALOGS CHEQUES*/}\r\n                                        <DialogNuevoCheque \r\n                                            open={showDialog} \r\n                                            setOpen={setshowDialog} \r\n                                            datos={cheques} \r\n                                            setdatos={setcheques}\r\n                                            edit={editIndex!=-1} \r\n                                            editIndex={editIndex} \r\n                                            seteditIndex={seteditIndex}\r\n                                            total={total}\r\n                                            settotal={settotal}\r\n                                            cliente={nombre}\r\n                                        />\r\n                                        <DialogEliminarCheque \r\n                                            open={showDialogDelete} \r\n                                            setopen={setshowDialogDelete} \r\n                                            datos={cheques} \r\n                                            setDatos={setcheques} \r\n                                            index={deleteIndex} \r\n                                            setdeleteIndex={setdeleteIndex} \r\n                                            tipoDeElemento='Cheque'\r\n                                            total={total}\r\n                                            settotal={settotal}\r\n                                        />\r\n                                    </Grid>\r\n                                </TabPanel>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                )\r\n            case 'Metodo De Envio':\r\n                return(\r\n                    <Grid container>\r\n                        <Grid container item xs={12} justify='center'>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Switch\r\n                                        color='primary'\r\n                                        checked={check}\r\n                                        onChange={e=>{\r\n                                            resetTextFields()\r\n                                            setcheck(e.target.checked)\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label=\"Enviado con expreso\"\r\n                            />\r\n                        </Grid>\r\n                        {check &&\r\n                            <Grid container item xs={12} direction='column' alignItems='center' spacing={3}>\r\n                                <Grid item>\r\n                                    <Autocomplete\r\n                                        freeSolo\r\n                                        options={expresosList?expresosList:[]}\r\n                                        getOptionLabel={(option) => option}\r\n                                        onSelect={(e)=>{setexpreso(e.target.value)}}\r\n                                        onChange={(e)=>{setexpreso(e.target.value)}}\r\n                                        style={{ width: '250px' }}\r\n                                        renderInput={(params) => <TextField {...params} label=\"Expreso\" variant=\"outlined\" />}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <TextField \r\n                                        style={{width:'250px'}}\r\n                                        variant='outlined'\r\n                                        value={remito}\r\n                                        disabled={!check}\r\n                                        onChange={e=>{setremito(e.target.value)}}\r\n                                        label='Nro de remito'\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <TextField \r\n                                        variant='outlined'\r\n                                        style={{width:'250px'}}\r\n                                        value={precio}\r\n                                        disabled={!check}\r\n                                        type='number'\r\n                                        onChange={e=>{setprecio(e.target.value)}}\r\n                                        label='Precio del envio'\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        }\r\n                    </Grid>\r\n                )\r\n        }\r\n    }\r\n\r\n    return( renderStep() )\r\n}","import React,{useState, useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {Grid,Paper,Chip,Card,Button,StepContent,Backdrop,StepLabel,Typography,Step,Stepper,Snackbar,CircularProgress} from '@material-ui/core'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {Step as StepComponent} from '../components/Enviar-Pedido/Step'\r\nimport {database} from 'firebase'\r\nimport {filtrarCotizaciones, formatMoney,obtenerFecha} from '../utilities'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {content} from './styles/styles'\r\nimport { AttachMoney, LocalShipping } from '@material-ui/icons';\r\n \r\n  // COMPONENT\r\n  const EnviarPedido=(props)=>{\r\n    const classes = content()\r\n    \r\n    const [cheques,setcheques]=useState([])\r\n    const [total, settotal] = useState(0);\r\n    const [efectivo,setefectivo]=useState(undefined)\r\n    \r\n    const [cuentaTransferencia,setCuentaTransferencia]=useState(undefined)\r\n    const [totalTransferencia, setTotalTransferencia] = useState(undefined);\r\n\r\n    const [expreso,setexpreso]=useState('')\r\n    const [remito, setremito] = useState('');\r\n    const [precio, setprecio] = useState(0);\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [showSnackbar, setshowSnackbar] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [sumarEnvio,setsumarEnvio]=useState(false)\r\n    const steps = getSteps();\r\n\r\n    // STEPPER NAVIGATION\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    }\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    }\r\n    function getStepContent(step) {\r\n      switch (step) {\r\n        case 0:\r\n        return (\r\n                <StepComponent\r\n                    expresosList={props.clientes[props.pedidos[props.history.location.search.slice(1)].cliente].datos.expresos}\r\n                    tipoDeDato='Metodo De Envio'\r\n                    precio={precio}\r\n                    setprecio={setprecio}\r\n                    expreso={expreso}\r\n                    setexpreso={setexpreso}\r\n                    remito={remito}\r\n                    setremito={setremito}\r\n                    sumarEnvio={sumarEnvio}\r\n                    setsumarEnvio={setsumarEnvio}\r\n                />\r\n        );\r\n        case 1:\r\n          return (\r\n            <StepComponent\r\n                expresosList={props.clientes[props.pedidos[props.history.location.search.slice(1)].cliente].datos.expresos}\r\n                efectivo={efectivo}\r\n                setefectivo={setefectivo}\r\n                cheques={cheques}\r\n                setcheques={setcheques}\r\n                tipoDeDato='Metodo De Pago'\r\n                total={total}\r\n                settotal={settotal}\r\n                nombre={props.pedidos[props.history.location.search.slice(1)].cliente}\r\n                cuentaTransferencia={cuentaTransferencia}\r\n                setCuentaTransferencia={setCuentaTransferencia}\r\n                totalTransferencia={totalTransferencia}\r\n                setTotalTransferencia={setTotalTransferencia}\r\n                cuentasBancarias={props.cuentasBancarias}\r\n                cotizaciones={filtrarCotizaciones(props.dolares)}\r\n            />\r\n          );\r\n      }\r\n    }\r\n    function getSteps() {\r\n        return ['Metodo De Envio', 'Metodo De Pago'];\r\n    }\r\n    function getStepLabel(label,index) {\r\n        switch (index) {\r\n            case 0:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<LocalShipping/>} \r\n                            label={label}  \r\n                            onClick={()=>{setActiveStep(index)}}\r\n                            variant='default'\r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n            case 1:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<AttachMoney/>} \r\n                            label={label}  \r\n                            onClick={()=>{setActiveStep(index)}}\r\n                            variant='default'\r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n        }\r\n    }\r\n\r\n    // FUNCTIONS \r\n    const enviarPedido = async () =>{\r\n        setLoading(true)\r\n        const id = props.history.location.search.slice(1)\r\n\r\n        // DESCONTAR PRODUCTOS\r\n        await descontarProductos(id)\r\n        \r\n        // AGREGA CADA CHEQUE A DB\r\n        let chequesList = guardarCheques()\r\n        \r\n        // FUNCIONES DE ESTRUCTURA\r\n        const calcularDeudaActualizada = () =>{\r\n            return props.clientes[props.pedidos[id].cliente].datos.deuda + parseFloat(calcularAdeudado())\r\n        }\r\n        const calcularPagado = () =>{\r\n            return total + (efectivo?parseFloat(efectivo):0) + (totalTransferencia?parseFloat(totalTransferencia):0)\r\n        }     \r\n        const calcularAdeudado = () =>{\r\n            return props.history.location.props.total - (total + (efectivo?parseFloat(efectivo):0) + (totalTransferencia?parseFloat(totalTransferencia):0))\r\n        }        \r\n        const calcularTotal = () =>{\r\n            return ((efectivo?parseFloat(efectivo):0) + total + (totalTransferencia?parseFloat(totalTransferencia):0))?((efectivo?parseFloat(efectivo):0) + total + (totalTransferencia?parseFloat(totalTransferencia):0)):null\r\n        }        \r\n        // ESTRUCTURA DEL PEDIDO\r\n        let aux={\r\n            fecha:obtenerFecha(),\r\n            cliente:props.pedidos[id].cliente,\r\n            articulos:props.pedidos[id].productos,\r\n            metodoDePago:{\r\n                facturacion:props.location.props.facturacion?props.location.props.facturacion:null,\r\n                efectivo:efectivo?efectivo:null,\r\n                cuentaTransferencia:cuentaTransferencia?cuentaTransferencia:null,\r\n                totalTransferencia:totalTransferencia?totalTransferencia:null,\r\n                cheques:chequesList,\r\n                fecha:obtenerFecha(),\r\n                total:calcularTotal(),\r\n                deudaPasada:props.clientes[props.pedidos[id].cliente].datos.deuda,\r\n                deudaActualizada: calcularDeudaActualizada(),\r\n                pagado:calcularPagado(),\r\n                adeudado:calcularAdeudado()\r\n            },\r\n            cotizacion:props.pedidos[id].cotizacion,\r\n            metodoDeEnvio:expreso?{expreso:expreso,remito:remito,precio:precio}:'Particular',\r\n            total:props.history.location.props.total,\r\n        }\r\n\r\n        // ACTUALIZA LA DEUDA DEL CLIENTE\r\n        actualizarDeuda(aux.total, total + (efectivo?parseFloat(efectivo):0) +(totalTransferencia?parseFloat(totalTransferencia):0) )\r\n        \r\n        //ACTUALIZA LOS PRECIOS PARA FACTURACION\r\n        if(props.location.props.facturacion){\r\n            aux.articulos = actualizarPrecios(aux.articulos)\r\n        }\r\n\r\n        \r\n        //AGREGA LA VENTA AL LISTADO DE FACTURACION\r\n        agregarAListaDeIva(aux.total)\r\n\r\n        // AGREGA EL PEDIDO A DB PARA OBTENER ID\r\n        let idLink = database().ref().child(props.user.uid).child('clientes').child(props.pedidos[id].cliente).child('pedidos').push()\r\n        \r\n        // AGREGA LA FACTURA A LISTA DE VENTAS\r\n        agregarAListaDeVentas(aux,idLink.key)\r\n\r\n        // MODELA Y AGREGA EL PAGO AL HISTORIAL\r\n        agregarPagoAlHistorial(aux.metodoDePago,idLink.key,id)\r\n\r\n        // MODELA Y AGREGA LA TRANSFERENCIA A LOS MOVIMIENTOS BANCARIOS\r\n        if(aux.metodoDePago.cuentaTransferencia){\r\n            guardarTransferenciaBancaria(aux.metodoDePago.cuentaTransferencia,aux.metodoDePago.totalTransferencia)\r\n        }\r\n\r\n        // FEEDBACK DEL PROCESO\r\n        setshowSnackbar('El pedido se envió correctamente!')\r\n        \r\n        // ACTUALIZA DB ENVIANDO TODA LA INFO\r\n        idLink.update(aux) \r\n            .then(()=>{\r\n                props.history.replace('/Pedidos')\r\n                database().ref().child(props.user.uid).child('pedidos').child(id).remove().then(()=>{\r\n                    setTimeout(() => {\r\n                        if(expreso){\r\n                            database().ref().child(props.user.uid).child('expresos').child(expreso).child('envios').push({fecha:obtenerFecha(),id:idLink.key,remito:remito,cliente:props.location.props.nombre}).then(()=>{\r\n                                setLoading(false)\r\n                            }) \r\n                        }\r\n                    }, 2000);\r\n                })\r\n                .catch(()=>{\r\n                    setLoading(false)\r\n                })\r\n            })\r\n            .catch(()=>{\r\n                setLoading(false)\r\n            })\r\n    }\r\n\r\n    const actualizarPrecios = (articulos) =>{\r\n        let aux =articulos\r\n        aux.map(articulo=>{\r\n            articulo.precio=articulo.precio+articulo.precio*0.21\r\n            articulo.total = parseFloat(articulo.cantidad) * articulo.precio\r\n        })\r\n        return aux\r\n    }\r\n    \r\n    const descontarProductos = async id =>{\r\n        const articulos = props.pedidos[id].productos\r\n        // RECORRE LOS ARTICULOS DEL PEDIDO\r\n        articulos.map(async articulo=>{\r\n            const nuevaCantidad = parseInt(props.productos[articulo.producto].cantidad)-parseInt(articulo.cantidad)\r\n            await database().ref().child(props.user.uid).child('productos').child(articulo.producto).update({cantidad:nuevaCantidad})\r\n            //await database().ref().child(props.user.uid).child('productos').child(articulo.producto).child('historialDeStock').push({cantidad:nuevaCantidad,fecha:obtenerFecha()})\r\n        })\r\n    }\r\n    const guardarCheques =() =>{\r\n        let chequesList= []\r\n        if(cheques.length){\r\n            // RECORRE LA LISTA DE CHEQUES \r\n            cheques.map(cheque=>{\r\n                // GUARDA EL NUMERO DE CHEQUE\r\n                chequesList.push(cheque.numero)\r\n                // ESTRUCTURA DEL CHEQUE\r\n                let auxCheque = {\r\n                    ingreso:obtenerFecha(),\r\n                    nombre:cheque.nombre,\r\n                    numero:cheque.numero,\r\n                    vencimiento:cheque.vencimiento,\r\n                    banco:cheque.banco,\r\n                    valor:cheque.valor\r\n                }\r\n                // GUARDA EN LA LISTA DE CHQUES CADA UNO\r\n                database().ref().child(props.user.uid).child('cheques').push(auxCheque)\r\n            })\r\n        }\r\n        // RETORNA UNA LISTA CON CADA NUMERO DE CHEQUE\r\n        return chequesList\r\n    }\r\n    const actualizarDeuda = (totalPedido,totalRecibido) =>{\r\n        const id = props.history.location.search.slice(1)\r\n        const deudaPasada = props.clientes[props.pedidos[id].cliente].datos.deuda\r\n        if(totalPedido>totalRecibido){\r\n            database().ref().child(props.user.uid).child('clientes').child(props.pedidos[id].cliente).child('datos').update({deuda:(deudaPasada)+(totalPedido-totalRecibido)})\r\n        }\r\n        else{\r\n            database().ref().child(props.user.uid).child('clientes').child(props.pedidos[id].cliente).child('datos').update({deuda:(deudaPasada)-(totalRecibido-totalPedido)})\r\n        }\r\n    }\r\n    const agregarAListaDeIva = (aux) =>{\r\n        if(props.history.location.props.facturacion){\r\n            database().ref().child(props.user.uid).child('iva').child('ventas').push({\r\n                fecha:obtenerFecha(),\r\n                iva:aux-(aux/1.21),\r\n                total:aux\r\n            })\r\n        }\r\n    }    \r\n    const agregarAListaDeVentas = (pedido,idLink) =>{\r\n        let aux=pedido\r\n        aux['idPedido']=idLink\r\n        database().ref().child(props.user.uid).child('ventas').push(aux) \r\n    }\r\n    const agregarPagoAlHistorial = (pago,idLink,idPedido) =>{\r\n        // AGREGA EL ID DEL PEDIDO AL PAGO\r\n        let aux= {...pago,idPedido:idLink}\r\n        database().ref().child(props.user.uid).child('clientes').child(props.pedidos[idPedido].cliente).child('pagos').push(aux)\r\n    }\r\n    const guardarTransferenciaBancaria = async (cuenta,total) =>{\r\n        console.log(cuenta,total)\r\n        const auxDeposito ={\r\n            fecha:obtenerFecha(),\r\n            tipo:'transferencia',\r\n            total:total\r\n        }\r\n        await database().ref().child(props.user.uid).child('CuentasBancarias').child(cuenta).child('ingresos').push(auxDeposito)\r\n    }\r\n    return(\r\n        props.history.location.props?\r\n            <Layout history={props.history} page='Enviar Pedido' user={props.user.uid} blockGoBack={true}>\r\n                {/* CONTENT */}\r\n                <Paper className={classes.content}>\r\n                    {/* STEPPER */}\r\n                    <Stepper orientation='vertical' activeStep={activeStep} className={classes.stepper}>\r\n                        {steps.map((label,index)=>(\r\n                            <Step>\r\n                                {getStepLabel(label,index)}\r\n                                <StepContent>\r\n                                    <Grid container xs={12} justify='center' spacing={3}>\r\n                                        {getStepContent(index)}\r\n                                        {activeStep==1 &&\r\n                                            <Grid container item xs={12} justify='center'>\r\n                                                <Paper elevation={3} variant='body1' className={classes.paperTotalEnviarPedido}>\r\n                                                    <Grid item xs={12}>\r\n                                                        <Typography variant='h6'>\r\n                                                            Total $ {formatMoney( total + (efectivo?parseFloat(efectivo):0) + (totalTransferencia?parseFloat(totalTransferencia):0))} / $ {formatMoney( parseFloat(props.history.location.props.total) + (sumarEnvio?precio?parseFloat(precio):0:0 ) ) }\r\n                                                        </Typography>\r\n                                                    </Grid>\r\n                                                    <Grid container item xs={12} justify='center'>\r\n                                                        <Chip label={`$ ${formatMoney(( parseFloat(props.history.location.props.total) + (sumarEnvio?precio?parseFloat(precio):0:0 ) ) - ( total + (efectivo?parseFloat(efectivo):0) + (totalTransferencia?parseFloat(totalTransferencia):0)))}`}/>\r\n                                                    </Grid>\r\n                                                </Paper>\r\n                                            </Grid>\r\n                                        }\r\n                                        <Grid container item xs={12} justify='center'>\r\n                                            <Grid item>\r\n                                                <Button\r\n                                                    disabled={activeStep===0}\r\n                                                    onClick={handleBack}\r\n                                                >\r\n                                                    Volver\r\n                                                </Button>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Button\r\n                                                    variant=\"contained\"\r\n                                                    color=\"primary\"\r\n                                                    onClick={activeStep === steps.length - 1 ? enviarPedido : handleNext}\r\n                                                >\r\n                                                    {activeStep === steps.length - 1 ? 'Finalizar' : 'Siguiente'}\r\n                                                </Button>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </StepContent>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                </Paper>\r\n\r\n                {/* BACKDROP & SNACKBAR */}\r\n                <Backdrop className={classes.backdrop} open={loading}>\r\n                    <CircularProgress color=\"inherit\" />\r\n                </Backdrop>\r\n                <Snackbar open={showSnackbar} autoHideDuration={2000} onClose={()=>{setshowSnackbar('')}}>\r\n                    <Alert severity=\"success\" variant='filled'>\r\n                        {showSnackbar}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/Pedidos'/>\r\n    )\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        expresos:state.expresos,\r\n        pedidos:state.pedidos,\r\n        productos:state.productos,\r\n        clientes:state.clientes,\r\n        cuentasBancarias:state.CuentasBancarias,\r\n        dolares:state.dolares\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(EnviarPedido)","import React from 'react'\r\nimport {Stepper, Step, StepLabel,Grid,List,ListItem,ListItemText,ListItemSecondaryAction,IconButton,Paper, Card, CardHeader} from '@material-ui/core'\r\nimport {Edit,Delete} from '@material-ui/icons'\r\nimport {content} from '../../Pages/styles/styles'\r\n\r\nexport const StepperNuevoProducto = ({cadenaDeProduccion,seteditIndex,setshowDialog,setshowDialogDelete,setdeleteIndex}) =>{\r\n    const classes = content()\r\n\r\n    return(\r\n        <Stepper activeStep={-1} alternativeLabel>\r\n            {cadenaDeProduccion.map((proceso,i) => (\r\n                <Step key={proceso.proceso}>\r\n                    <StepLabel>\r\n                        <Grid container xs={12} justify='center'>\r\n                            <Grid container item xs={12} justify='center'>\r\n                                <Card className={classes.cardHeaderStep}>\r\n                                    <CardHeader \r\n                                        title={proceso.proceso}\r\n                                        subheader={proceso.proveedor?proceso.proveedor:null}\r\n                                        action={\r\n                                            <>\r\n                                                <IconButton onClick={()=>{\r\n                                                    seteditIndex(i)\r\n                                                    setshowDialog(true)\r\n                                                }}>\r\n                                                    <Edit/>\r\n                                                </IconButton>\r\n                                                <IconButton onClick={()=>{\r\n                                                    setdeleteIndex(i)\r\n                                                    setshowDialogDelete(true)\r\n                                                }}>\r\n                                                    <Delete/>\r\n                                                </IconButton>\r\n                                            </>\r\n                                        }\r\n                                        />\r\n                                </Card>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </StepLabel>\r\n                </Step>\r\n            ))}\r\n        </Stepper>\r\n    )\r\n}","import React from 'react'\r\nimport {Card,Paper,List,ListItem,ListItemText,ListItemSecondaryAction,IconButton,makeStyles} from '@material-ui/core'\r\nimport {EditOutlined,DeleteOutlineOutlined} from '@material-ui/icons'\r\n\r\nexport const Subproductos = ({subproductos,seteditIndex,showDialog,openDialogDelete}) =>{\r\n\r\n    const openDialog = index =>{\r\n        seteditIndex(index)\r\n        showDialog()\r\n    }\r\n    return (\r\n        <Card style={{width:'300px'}}>\r\n            <Paper elevation={3}>\r\n                <List>\r\n                    {console.log(subproductos)}\r\n                    {subproductos.map((subproducto,i)=>(\r\n                        <ListItem>\r\n                            <ListItemText primary={subproducto.nombre} secondary={subproducto.cantidad}/>\r\n                            <IconButton edge=\"end\" aria-label=\"delete\" onClick={()=>{openDialog(i)}}>\r\n                                <EditOutlined />\r\n                            </IconButton>\r\n                            <ListItemSecondaryAction>\r\n                                <IconButton edge=\"end\" aria-label=\"delete\" onClick={()=>{openDialogDelete(i)}}>\r\n                                    <DeleteOutlineOutlined color='error'/>\r\n                                </IconButton>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Paper>\r\n        </Card>\r\n    )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport {Dialog,DialogTitle,DialogContent,Checkbox,FormGroup,FormControlLabel,DialogActions,FormLabel,TextField,Button,Grid,Select,FormControl,Input,MenuItem,List,ListItem,ListItemText, Typography,IconButton} from '@material-ui/core'\r\nimport {Autocomplete} from '@material-ui/lab'\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {MuiPickersUtilsProvider,KeyboardTimePicker,KeyboardDatePicker,} from '@material-ui/pickers';\r\nimport {content} from '../../../Pages/styles/styles'\r\n\r\nexport const DialogAgregarProceso = ({edit,setEdit,open,setOpen,proveedoresList,cadenaDeProduccion,setcadenaDeProduccion}) =>{\r\n    const classes = content()\r\n    const [nombre, setNombre] = useState(undefined)\r\n    const [proveedor, setProveedor] = useState(undefined)\r\n    const [isProcesoPropio, setisProcesoPropio] = useState(false)\r\n    const [step, setStep] = useState(0)\r\n    \r\n    // FUNCTIONS\r\n    \r\n    // FILL FOR EDIT\r\n    useEffect(()=>{\r\n        if(edit!=-1){\r\n            setNombre(cadenaDeProduccion[edit].proceso)\r\n            setProveedor(cadenaDeProduccion[edit].proveedor)\r\n            setisProcesoPropio(cadenaDeProduccion[edit].isProcesoPropio)\r\n        }\r\n    },[edit])\r\n\r\n    // CONTENT\r\n    return(\r\n        <Dialog open={open} maxWidth='md'>\r\n            <DialogTitle>\r\n                {edit!=-1?\r\n                    'Editar Proceso'\r\n                    :\r\n                    'Agregar Proceso'\r\n                }\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <Grid container direction='column' alignItems='center' spacing={2}>\r\n                    <Grid item>\r\n                        <Autocomplete\r\n                            freeSolo\r\n                            options={['Fundido','Mecanizado','Pintado','Ensamblado']}\r\n                            getOptionLabel={(option) => option}\r\n                            value={nombre}\r\n                            onSelect={(e)=>{setNombre(e.target.value)}}\r\n                            onChange={(e)=>{setNombre(e.target.value)}}\r\n                            style={{ width: 300 }}\r\n                            renderInput={(params) => <TextField {...params} label=\"Tipo de Proceso\" variant=\"outlined\" />}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <FormControl component=\"fieldset\">\r\n                            <FormGroup aria-label=\"position\" row>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox color=\"primary\" disabled={proveedor} checked={isProcesoPropio} onChange={()=>{setisProcesoPropio(!isProcesoPropio)}} />}\r\n                                    label=\"Proceso Propio\"\r\n                                />\r\n                            </FormGroup>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        {console.log(proveedoresList)}\r\n                        <Autocomplete\r\n                            freeSolo\r\n                            options={proveedoresList?Object.keys(proveedoresList):{}}\r\n                            disabled={!proveedoresList || isProcesoPropio}\r\n                            getOptionLabel={(option) => option}\r\n                            value={proveedor}\r\n                            onSelect={(e)=>{setProveedor(e.target.value)}}\r\n                            onChange={(e)=>{setProveedor(e.target.value)}}\r\n                            style={{ width: 300 }}\r\n                            renderInput={(params) => <TextField {...params} label=\"Proveedor Encargado\" variant=\"outlined\" />}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button \r\n                    onClick={()=>{\r\n                        if(edit!=-1){\r\n                            setEdit(-1)\r\n                        }\r\n                        setOpen(false)\r\n                    }}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n                <Button\r\n                    disabled={!nombre || (!proveedor && !isProcesoPropio)}\r\n                    onClick={()=>{\r\n                        if(edit!=-1){\r\n                            let aux = cadenaDeProduccion\r\n                            aux[edit]={proceso:nombre,proveedor:proveedor?proveedor:null,isProcesoPropio:isProcesoPropio}\r\n                            setcadenaDeProduccion(aux)\r\n                        }\r\n                        else{\r\n                            let proceso = {proceso:nombre,proveedor:proveedor?proveedor:null,isProcesoPropio:isProcesoPropio}\r\n                            let aux = cadenaDeProduccion\r\n                            aux.push(proceso)\r\n                            setcadenaDeProduccion(aux)\r\n                        }\r\n                        setNombre(undefined)\r\n                        setProveedor(undefined)\r\n                        setisProcesoPropio(false)\r\n                        setEdit(-1)\r\n                        setOpen(false)\r\n                    }}\r\n                >\r\n                    {edit!=-1?\r\n                        'Editar'\r\n                        :\r\n                        'Agregar'\r\n                    }\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport {Dialog,DialogTitle,DialogContent,DialogActions,TextField,Button,Grid,makeStyles} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    input:{\r\n        marginBottom:theme.spacing(1),\r\n        textAlign:'center'\r\n    }\r\n}))\r\n\r\nexport const DialogEliminarElemento = ({open,setopen,datos,setDatos,index,setdeleteIndex,tipoDeElemento}) =>{\r\n    const classes = useStyles()\r\n    \r\n    const eliminarElemento = () =>{\r\n        let aux = datos\r\n        aux.splice(index,1)\r\n        setDatos(aux)\r\n    }\r\n    return(\r\n        <Dialog open={open}>\r\n            <DialogTitle>\r\n                Desea Eliminar El {tipoDeElemento}?\r\n            </DialogTitle>\r\n            <DialogActions>\r\n                <Button \r\n                    onClick={()=>{\r\n                        setopen(false)\r\n                        setdeleteIndex(undefined)\r\n                    }}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n                <Button\r\n                    color='error'\r\n                    onClick={()=>{\r\n                        eliminarElemento()\r\n                        setopen(false)\r\n                        setdeleteIndex(undefined)\r\n                    }}\r\n                >\r\n                    Eliminar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport {Dialog,DialogTitle,DialogContent,DialogActions,TextField,Button,Grid,makeStyles,FormControl,InputLabel,Select,Input,MenuItem} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    input:{\r\n        marginBottom:theme.spacing(1),\r\n        textAlign:'center'\r\n    }\r\n}))\r\n\r\nexport const DialogNuevoSubproducto = ({open,setOpen,subproductos,setSubproductos,subproductosList,edit,editIndex,seteditIndex}) =>{\r\n    const classes = useStyles()\r\n\r\n    const [nombre,setnombre]=useState(undefined)\r\n    const [cantidad,setCantidad]=useState(undefined)\r\n    \r\n\r\n    const resetTextFields = () =>{\r\n        setnombre(undefined)\r\n        setCantidad(undefined)\r\n    }\r\n    const agregarSubproducto = () =>{\r\n        let aux = subproductos\r\n        aux.push({\r\n            nombre:nombre?nombre:null,\r\n            cantidad:cantidad?cantidad:null,\r\n        })\r\n        setSubproductos(aux)\r\n    }\r\n\r\n    const editarSubproducto = () =>{\r\n        let aux = subproductos\r\n        aux[editIndex]={nombre:nombre,cantidad:cantidad}\r\n        setSubproductos(aux)\r\n    }\r\n    useEffect(()=>{\r\n        if(edit){\r\n            setnombre(subproductos[editIndex].nombre)\r\n            setCantidad(subproductos[editIndex].cantidad)\r\n        }\r\n    },[edit])\r\n    return(\r\n        <Dialog open={open}>\r\n            <DialogTitle>\r\n                {edit?\r\n                    'Editar Subproducto'\r\n                    :\r\n                    'Agregar Nuevo Subproducto'\r\n                }\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <Grid container direction='column'>\r\n                    <Grid item className={classes.input}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id=\"demo-mutiple-name-label\">Subproductos</InputLabel>\r\n                            <Select\r\n                                value={nombre}\r\n                                onChange={(e)=>{setnombre(e.target.value)}}\r\n                                input={<Input />}\r\n                            >\r\n                                {subproductosList.map(subproducto => (\r\n                                    <MenuItem key={subproducto.nombre} value={subproducto.nombre}>\r\n                                        {subproducto.nombre}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item className={classes.input}>\r\n                        <TextField\r\n                            color='primary'\r\n                            label='Cantidad'\r\n                            value={cantidad}\r\n                            onChange={e=>{setCantidad(e.target.value)}}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button \r\n                    onClick={()=>{\r\n                        if(edit){\r\n                            seteditIndex(-1)\r\n                        }\r\n                        resetTextFields()\r\n                        setOpen(false)\r\n                    }}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n                <Button\r\n                    disabled={ cantidad && nombre ?false:true}\r\n                    onClick={()=>{\r\n                        if(edit){\r\n                            editarSubproducto()\r\n                            seteditIndex(-1)\r\n                        }\r\n                        else{\r\n                            agregarSubproducto()\r\n                        }\r\n                        resetTextFields()\r\n                        setOpen(false)\r\n                    }}\r\n                >\r\n                    {edit?\r\n                        'Editar'\r\n                        :\r\n                        'Agregar'\r\n                    }\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport {Grid, Button,Switch,InputLabel,Select,Input,MenuItem,Paper,FormControl, TextField,Tab,Tabs,AppBar,Typography,Box,FormControlLabel} from '@material-ui/core'\r\nimport {AddOutlined} from '@material-ui/icons'\r\nimport {content} from '../../Pages/styles/styles'\r\nimport { StepperNuevoProducto } from './StepperNuevoProducto'\r\nimport {Subproductos} from './Subproductos'\r\nimport {DialogAgregarProceso} from './Dialogs/DialogAgregarProceso'\r\nimport {DialogEliminarElemento} from './Dialogs/DialogEliminarElemento'\r\nimport {DialogNuevoSubproducto} from './Dialogs/DialogNuevoSubproducto'\r\nimport Empty from '../../images/Empty.png'\r\n\r\nexport const Step = ({tipoDeDato,nombre,setnombre,precio,setprecio,cantidad,setcantidad,proveedoresList,disableCantidad,cadenaDeProduccion,setcadenaDeProduccion,isSubproducto,setIsSubproducto,subproductos,setSubproductos,subproductosList}) =>{\r\n    const classes = content()\r\n    const [showDialog,setshowDialog]=useState(false)\r\n    const [editIndex,seteditIndex]=useState(-1)\r\n    const [showDialogDelete,setshowDialogDelete]=useState(false)\r\n    const [deleteIndex,setdeleteIndex]=useState(undefined)\r\n\r\n    const openDialogDelete = (index) =>{\r\n        setdeleteIndex(index)\r\n        setshowDialogDelete(true)\r\n    }\r\n\r\n    const renderStep = () =>{\r\n        switch (tipoDeDato) {\r\n            case 'Detalles': \r\n                return(\r\n                    <Grid container item xs={12} direction='column' alignItems='center' spacing={3}>\r\n                        <Grid item>\r\n                            {console.log(isSubproducto)}\r\n                            <FormControlLabel \r\n                                control={\r\n                                    <Switch\r\n                                        checked={Boolean(isSubproducto)}\r\n                                        value={isSubproducto}\r\n                                        color='default'\r\n                                        onChange={e=>{\r\n                                            setIsSubproducto(!isSubproducto)\r\n                                        }}\r\n                                    />\r\n                                } \r\n                                label=\"Subproducto\" />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <TextField\r\n                                value={nombre}\r\n                                label=\"Nombre\"\r\n                                onChange={e=>{\r\n                                    setnombre(e.target.value)\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <TextField\r\n                                value={precio}\r\n                                onChange={e=>{\r\n                                    setprecio(e.target.value)\r\n                                }}\r\n                                disabled={!nombre}\r\n                                type='number'\r\n                                label=\"Precio\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <TextField\r\n                                value={cantidad}\r\n                                disabled={disableCantidad}\r\n                                onChange={e=>{\r\n                                    setcantidad(e.target.value)\r\n                                }}\r\n                                type='number'\r\n                                label=\"Cantidad\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                )\r\n            case 'Cadena De Produccion':\r\n                return(\r\n                    <Grid container item xs={12} justify='center' spacing={3}>\r\n                        <Grid item>\r\n                            <Button \r\n                                color='primary'\r\n                                variant='contained'\r\n                                onClick={()=>{\r\n                                setshowDialog(true)\r\n                            }}>\r\n                                Agregar Proceso\r\n                            </Button>\r\n                        </Grid>\r\n                        {cadenaDeProduccion.length?\r\n                            <Grid container item xs={12} justify='center'>\r\n                                <Grid item xs={12}>\r\n                                    <StepperNuevoProducto cadenaDeProduccion={cadenaDeProduccion} seteditIndex={seteditIndex} setshowDialog={setshowDialog} setshowDialogDelete={setshowDialogDelete} setdeleteIndex={setdeleteIndex}/>\r\n                                </Grid>\r\n                            </Grid>\r\n                            :\r\n                            <Grid container iterm xs={12} justify='center'>\r\n                                <Grid item>\r\n                                    <img src={Empty} alt=\"\" height='300px'/>\r\n                                </Grid>\r\n                                <Grid container item xs={12} justify='center'>\r\n                                    <Typography variant='h4'>No Posee Cadena de Produccion</Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        }\r\n                        <DialogAgregarProceso\r\n                            edit={editIndex}\r\n                            setEdit={seteditIndex}\r\n                            open={showDialog}\r\n                            setOpen={setshowDialog}\r\n                            proveedoresList={proveedoresList}\r\n                            cadenaDeProduccion={cadenaDeProduccion}\r\n                            setcadenaDeProduccion={setcadenaDeProduccion}\r\n                        />\r\n                        <DialogEliminarElemento open={showDialogDelete} setopen={setshowDialogDelete} datos={cadenaDeProduccion} setDatos={setcadenaDeProduccion} index={deleteIndex} setdeleteIndex={setdeleteIndex} tipoDeElemento='Proceso'/>\r\n                    </Grid>\r\n                )\r\n            case 'Componentes': \r\n                return(\r\n                    <Grid container item xs={12} justify='center' spacing={3}>\r\n                        <Grid container item xs={12} justify='center' >\r\n                            <Button variant='contained' color='primary' startIcon={<AddOutlined/>} onClick={()=>{setshowDialog(true)}}>\r\n                                Agregar Subproducto\r\n                            </Button>\r\n                        </Grid>\r\n                        {subproductos.length?\r\n                            <Grid container item xs={12} justify='center' >\r\n                                <Subproductos subproductos={subproductos} seteditIndex={seteditIndex} showDialog={()=>{setshowDialog(true)}} openDialogDelete={i=>{openDialogDelete(i)}}/>\r\n                            </Grid>\r\n                            :\r\n                            <Grid container xs={12} justify='center' spacing={2}>\r\n                                <Grid container item xs={12} justify='center'>\r\n                                    <Typography variant='h5'>No Posee Componentes</Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <img src={Empty} alt=\"\" height='200px'/>\r\n                                </Grid>\r\n                            </Grid>\r\n                        }\r\n                        <DialogNuevoSubproducto open={showDialog} setOpen={setshowDialog} subproductos={subproductos} setSubproductos={setSubproductos} subproductosList={subproductosList} edit={editIndex!=-1} editIndex={editIndex} seteditIndex={seteditIndex}/>\r\n                        <DialogEliminarElemento open={showDialogDelete} setopen={setshowDialogDelete} datos={subproductos} setDatos={setSubproductos} index={deleteIndex} setdeleteIndex={setdeleteIndex} tipoDeElemento='Subproducto'/>\r\n                    </Grid>\r\n                )\r\n            \r\n        }\r\n    }\r\n\r\n    return( renderStep() )\r\n}","import React,{useState, useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {makeStyles,Paper,Chip,Card,Button,StepContent,Backdrop,StepLabel,Grid,Step,Stepper,Link as LinkComponent,Snackbar,CircularProgress,Typography} from '@material-ui/core'\r\nimport {List,Link as LinkIcon, AccountTree} from '@material-ui/icons'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {Redirect} from 'react-router-dom'\r\nimport {Step as StepComponent} from '../components/Nuevo-Producto/Step'\r\nimport {database} from 'firebase'\r\nimport {content} from './styles/styles'\r\nimport {checkSearchProducto} from '../utilities'\r\nimport {getProductosList,getSubproductosList,getAllProductosList} from '../utilities'\r\n\r\n  \r\n// COMPONENT  \r\nconst NuevoProducto=(props)=>{\r\n    const classes = content()\r\n    \r\n    const [isSubproducto,setIsSubproducto]=useState(undefined)\r\n    \r\n    const [nombre,setnombre]=useState('')\r\n    const [precio,setprecio]=useState(0)\r\n    const [cantidad,setcantidad]=useState(0)\r\n    const [cadenaDeProduccion,setcadenaDeProduccion]=useState([])\r\n    const [subproductos,setSubproductos]=useState([])\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [showSnackbar, setshowSnackbar] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const steps = getSteps();\r\n\r\n    // STEPPER NAVIGATION\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n    function getStepContent(step) {\r\n      switch (step) {\r\n        case 0:\r\n          return (\r\n            <StepComponent \r\n                tipoDeDato='Detalles'\r\n                nombre={nombre}\r\n                setnombre={setnombre}\r\n                precio={precio}\r\n                setprecio={setprecio}\r\n                cantidad={cantidad}\r\n                setcantidad={setcantidad}\r\n                disableCantidad={props.history.location.searchx?true:false}\r\n                isSubproducto={isSubproducto}\r\n                setIsSubproducto={setIsSubproducto}\r\n            /> \r\n        );\r\n        case 1:\r\n            return (\r\n            <StepComponent \r\n                tipoDeDato='Cadena De Produccion'\r\n                cadenaDeProduccion={cadenaDeProduccion}\r\n                setcadenaDeProduccion={setcadenaDeProduccion}\r\n                proveedoresList={props.proveedores}\r\n            /> \r\n        );\r\n        case 2:\r\n            return (\r\n            <StepComponent \r\n                tipoDeDato='Componentes'\r\n                subproductos={subproductos}\r\n                setSubproductos={setSubproductos}\r\n                subproductosList={getAllProductosList(props.productos)}\r\n            /> \r\n        );\r\n      }\r\n    }\r\n    const setDisabled=(step)=>{\r\n        switch (step) {\r\n            case 0:\r\n                if(isSubproducto){\r\n                    if(!nombre){\r\n                        return true\r\n                    }\r\n                }\r\n                else{\r\n                    if(!nombre || !precio){\r\n                        return true\r\n                    }\r\n                }\r\n                break;\r\n            case 1:\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function getSteps() {\r\n        return ['Detalles','Cadena De Produccion','Componentes' ];\r\n    }\r\n\r\n    // FUNCTIONS\r\n    const guardarProducto = () =>{\r\n        setLoading(true)\r\n        let aux={[nombre]:{\r\n            cantidad:parseInt(cantidad),\r\n            precio:parseFloat(precio),\r\n            nombre:nombre,\r\n            cadenaDeProduccion:cadenaDeProduccion.length?cadenaDeProduccion:null,\r\n            isSubproducto:isSubproducto?isSubproducto:null,\r\n            subproductos:subproductos\r\n        }}\r\n        if(props.history.location.search){\r\n            let newAux = props.productos[checkSearchProducto(props.history.location.search)]\r\n            if(newAux.historialDeCadenas){\r\n                aux[nombre]['historialDeCadenas']=newAux.historialDeCadenas\r\n            }\r\n            \r\n            // COPIA PEDIDOS E HISTORIAL\r\n            database().ref().child(props.user.uid).child('productos').child(props.history.location.search.slice(1)).remove()\r\n            .then(()=>{\r\n                database().ref().child(props.user.uid).child('productos').update(aux)\r\n                .then(()=>{\r\n                    setshowSnackbar(props.history.location.search?'El Producto Se Edito Correctamente!':'El Producto Se Agrego Correctamente!')\r\n                        setTimeout(() => {\r\n                            setLoading(false)\r\n                            props.history.replace('/Productos')\r\n                        }, 2000);\r\n                })\r\n                .catch(()=>{\r\n                    setLoading(false)\r\n                })\r\n            })\r\n            .catch(()=>{\r\n                setLoading(false)\r\n            })\r\n        }\r\n        else{\r\n            database().ref().child(props.user.uid).child('productos').update(aux)\r\n                .then(()=>{\r\n                    setshowSnackbar(props.history.location.search?'El Producto Se Edito Correctamente!':'El Producto Se Agrego Correctamente!')\r\n                    setTimeout(() => {\r\n                        props.history.replace('/Productos')\r\n                    }, 2000);\r\n                })\r\n                .catch(()=>{\r\n                    setLoading(false)\r\n                })\r\n        }\r\n    }\r\n    function getStepLabel(label,index) {\r\n        switch (index) {\r\n            case 0:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<List/>} \r\n                            label={label}  \r\n                            onClick={()=>{if(nombre){setActiveStep(index)}}}\r\n                            variant='default'\r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n            case 1:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<LinkIcon/>} \r\n                            label={label}  \r\n                            onClick={()=>{if(nombre){setActiveStep(index)}}}\r\n                            variant='default'\r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n            case 2:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<AccountTree/>} \r\n                            label={label}  \r\n                            onClick={()=>{if(nombre){setActiveStep(index)}}}\r\n                            variant='default'\r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n        }\r\n    }\r\n\r\n    // FILL FOR EDIT\r\n    useEffect(()=>{\r\n        if(props.history.location.search){\r\n            const {nombre,precio,cantidad,cadenaDeProduccion,subproductos,isSubproducto} = props.productos[checkSearchProducto(props.history.location.search)]\r\n            nombre&&setnombre(nombre)\r\n            precio&&setprecio(precio)\r\n            cantidad&&setcantidad(cantidad)\r\n            cadenaDeProduccion&&setcadenaDeProduccion(cadenaDeProduccion)\r\n            isSubproducto&&setIsSubproducto(isSubproducto)\r\n            subproductos&&setSubproductos(subproductos)\r\n        }\r\n    },[])\r\n    return(\r\n        <Layout history={props.history} page={props.history.location.search?'Editar Producto':'Nuevo Producto'} user={props.user.uid} blockGoBack={true}>\r\n            <Paper className={classes.content}>\r\n                {/* STEPPER */}\r\n                <Stepper orientation='vertical' activeStep={activeStep} className={classes.stepper}>\r\n                    {steps.map((label,index)=>(\r\n                        <Step>\r\n                            {getStepLabel(label,index)}\r\n                            <StepContent>\r\n                                <Grid container xs={12} justify='center' spacing={3}>\r\n                                    {getStepContent(index)}\r\n                                    <Grid container item xs={12} justify='center'>\r\n                                        <Grid item>\r\n                                            <Button\r\n                                                disabled={activeStep===0}\r\n                                                onClick={handleBack}\r\n                                            >\r\n                                                Volver\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                disabled={setDisabled(activeStep)}\r\n                                                onClick={activeStep === steps.length - 1 ? guardarProducto : handleNext}\r\n                                            >\r\n                                                {activeStep === steps.length - 1 ? `${props.history.location.search?'Guardar Edicion':'Guardar Producto'}` : 'Siguiente'}\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </StepContent>\r\n                        </Step>\r\n                    ))}\r\n                </Stepper>\r\n                {/* BACKDROP & SNACKBAR */}\r\n                <Backdrop className={classes.backdrop} open={loading}>\r\n                    <CircularProgress color=\"inherit\" />\r\n                    <Snackbar open={showSnackbar} autoHideDuration={2000} onClose={()=>{setshowSnackbar('')}}>\r\n                        <Alert severity=\"success\" variant='filled'>\r\n                            {showSnackbar}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </Backdrop>\r\n            </Paper>\r\n        </Layout>\r\n    )\r\n}\r\n\r\n// REDUX STATE TO PROPS\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        productos:state.productos,\r\n        proveedores:state.proveedores,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(NuevoProducto)","import React from 'react'\r\nimport {Grid,makeStyles} from '@material-ui/core'\r\nimport {LocalGasStationOutlined} from '@material-ui/icons'\r\nimport {Layout} from './Layout'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      height:'100vh'\r\n    },\r\n    icon:{\r\n        color:theme.palette.primary.contrastText\r\n    }\r\n  }))\r\nexport const PantallaDeCarga = () =>{\r\n    const classes = useStyles()\r\n    return (\r\n        <Layout hiddenAppBar={true}>\r\n            <Grid container className={classes.root} justify='center' alignItems='center'>\r\n                <Grid container item xs={12} justify='center' spacing={3}>\r\n                    <Grid item>\r\n                        <LocalGasStationOutlined className={classes.icon}/>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <LocalGasStationOutlined className={classes.icon}/>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <LocalGasStationOutlined className={classes.icon}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Layout>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport {Typography,Avatar,TextField,Button,makeStyles,Grid,Grow} from '@material-ui/core'\r\nimport {Alert,AlertTitle} from '@material-ui/lab'\r\nimport {LockOutlined} from '@material-ui/icons'\r\nimport {Link as LinkRouter} from 'react-router-dom'\r\nimport {PantallaDeCarga} from '../Pages/PantallaDeCarga'\r\nimport logo from '../images/logo.png'\r\nimport {auth} from 'firebase'\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n      margin: theme.spacing(0, 4),\r\n      padding:theme.spacing(1),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.dark,\r\n        color: theme.palette.primary.contrastText\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2)\r\n    },\r\n    background:{\r\n      background:theme.palette.primary.main,\r\n      color:theme.palette.primary.contrastText\r\n    },\r\n    link:{\r\n      color:theme.palette.primary.contrastText,\r\n      '& .MuiLink-underlineHover':{\r\n        textDecoration:'none',\r\n        color:theme.palette.primary.contrastText,\r\n      }\r\n    },\r\n    root:{\r\n        width:'100%',\r\n    },\r\n    title:{\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    checkBox:{\r\n        color: theme.palette.primary.contrastText,\r\n        '& .MuiIconButton-label':{\r\n            color: theme.palette.primary.contrastText,\r\n        }\r\n    },\r\n    linkButtons:{\r\n        display:'flex',\r\n        flexDirection:'column'\r\n    },\r\n    logo:{\r\n      width:'100%'\r\n    }\r\n}));\r\n\r\n\r\n\r\nexport const FormSignIn = ({history})=>{\r\n  const classes = useStyles()\r\n    let [inputUser,setInputUser]=useState(undefined)\r\n    let [loading,setloading]=useState(false)\r\n    let [emailSended,setEmailSended]=useState(false)\r\n    let [resetConfirmation,setResetConfirmation]=useState(false)\r\n    let [inputPassword,setInputPassword]=useState(undefined)\r\n    let [userError,setUserError]=useState(undefined)\r\n    let [passwordError,setPasswordError]=useState(undefined)\r\n    \r\n\r\n    const logIn=async()=>{\r\n      setUserError(null)\r\n      setPasswordError(null)\r\n      if(inputUser && inputPassword){\r\n          setloading(true)\r\n          await auth().signInWithEmailAndPassword(inputUser,inputPassword)\r\n          .then(()=>{\r\n            setloading(false)\r\n          })\r\n          .catch(error=>{\r\n            setloading(false)\r\n            switch (error.code) {\r\n              case 'auth/user-not-found':\r\n                setUserError('Usuario No Encontrado')\r\n                break;\r\n              case 'auth/wrong-password':\r\n                setPasswordError('La clave es incorrecta')\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n          })\r\n        }\r\n        else{\r\n          if(!inputUser){\r\n            setUserError('Ingresa el Usuario')\r\n          }\r\n          if(!inputPassword){\r\n            setPasswordError('Ingresa la clave')\r\n          }\r\n        }\r\n    }\r\n    const sendPasswordReset=()=>{\r\n      if(!inputUser){\r\n        setEmailSended(false)\r\n        setUserError('Ingrese el correo para recuperar la clave')\r\n      }\r\n      else{\r\n        setResetConfirmation(true)\r\n      }\r\n    }\r\n    return(\r\n        <div className={classes.root}>\r\n          {loading?\r\n            <PantallaDeCarga/>\r\n            :\r\n            <div className={classes.paper}>\r\n                <Grid container justify='center' >\r\n                  <Grid item xs={12} sm={10} md={8}>\r\n                    <img src={logo} className={classes.logo}/>\r\n                  </Grid>\r\n                </Grid>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlined/>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\" className={classes.title}>\r\n                    Inicia Sesion\r\n                </Typography>\r\n                <form className={classes.form} noValidate>\r\n                <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                color='primary'\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email\"\r\n                error={userError}\r\n                helperText={userError?userError:null}\r\n                name=\"email\"\r\n                value={inputUser}\r\n                onChange={e=>{setInputUser(e.target.value)}}\r\n                autoFocus\r\n                />\r\n                <TextField\r\n                variant=\"outlined\"\r\n                color='primary'\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                value={inputPassword}\r\n                helperText={passwordError?passwordError:null}\r\n                error={passwordError}\r\n                onChange={e=>{setInputPassword(e.target.value)}}\r\n                label=\"contraseña\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                />\r\n                {resetConfirmation?\r\n                  <Grow in={true}>\r\n                    <Button\r\n                      fullWidth\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.submit}\r\n                      onClick={e=>{\r\n                        auth().languageCode='es'\r\n                        auth().sendPasswordResetEmail(inputUser).then(()=>{\r\n                            setResetConfirmation(false)\r\n                            setEmailSended(true)\r\n                        })\r\n                        .catch(()=>{\r\n\r\n                        })\r\n                      }}\r\n                    >\r\n                    Enviar mail de recuperacion!\r\n                    </Button>\r\n                  </Grow>\r\n                  :\r\n                  null\r\n                }\r\n                {emailSended?\r\n                  <Grow in={true}>\r\n                    <Alert variant=\"outlined\" severity=\"success\">\r\n                      <AlertTitle>Listo!</AlertTitle>\r\n                        Revisa tu casilla de correo para generar una nueva clave\r\n                      </Alert>\r\n                  </Grow>\r\n                  :\r\n                  null\r\n                }\r\n                <Button\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                type='submit'\r\n                className={classes.submit}\r\n                onClick={e=>{logIn()}}\r\n                >\r\n                Ingresar!\r\n                </Button>\r\n                <div className={classes.linkButtons}>\r\n                    <Button variant=\"text\" className={classes.link} onClick={()=>{\r\n                      sendPasswordReset()\r\n                    }}>\r\n                        Recuperar Contraseña\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n            </div>\r\n          }\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport foto from '../images/Valvulas.png'\r\nimport {Layout} from './Layout'\r\nimport {FormSignIn} from '../components/FormSignIn'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100vh',\r\n    position:'absolute',\r\n    top:0,\r\n    left:0,\r\n    right:0,\r\n    bottom:0\r\n  },\r\n  image: {\r\n    backgroundColor:theme.palette.secondary.main\r\n  },\r\n  img:{\r\n    objectFit:'cover',\r\n    width:\"100%\",\r\n    height:\"100%\",\r\n    filter: 'grayscale(0.5) drop-shadow(2px 4px 6px black)'\r\n  },\r\n  paper: {\r\n    width:\"100%\",\r\n    height:\"100%\",\r\n    backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.main,\r\n    borderRadius:'0',\r\n    display:'flex',\r\n    alignItems:'center'\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n    '& .MuiOutlinedInput-input':{\r\n      color:theme.palette.primary.contrastText,\r\n    },\r\n    '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline':{\r\n      borderColor: theme.palette.primary.contrastText\r\n    },\r\n    '& .MuiFormLabel-root.Mui-focused':{\r\n      color:theme.palette.secondary.contrastText\r\n    },\r\n    '& .MuiOutlinedInput-notchedOutline':{\r\n      borderColor: theme.palette.secondary.dark,\r\n    },\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    color:theme.palette.primary.contrastText,\r\n    '&.MuiButton-outlined':{\r\n      border: `1px solid ${theme.palette.primary.contrastText}`\r\n    },\r\n  },\r\n  background:{\r\n    background:theme.palette.primary.main,\r\n    color:theme.palette.primary.contrastText\r\n  },\r\n  link:{\r\n    color:theme.palette.primary.contrastText\r\n  }\r\n}));\r\n\r\n\r\nexport const SignInPage=({history})=> {\r\n    const classes = useStyles();\r\n    return (\r\n      <Layout hiddenAppBar={true}>\r\n        <Grid container className={classes.root}>\r\n            <Grid item xs={false} sm={5} md={7} className={classes.image}>\r\n              <img src={foto} alt=\"\" className={classes.img}/>\r\n            </Grid>\r\n            <Grid item xs={12} sm={7} md={5}>\r\n              <Paper elevation={6} className={classes.paper}>\r\n                <FormSignIn history={history}/>\r\n              </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Layout>\r\n    );\r\n}","const reducer = (state,action) =>{\r\n    return state\r\n}\r\nexport default reducer","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { Layout } from './Layout'\r\nimport {content} from './styles/styles'\r\nimport {Paper} from '@material-ui/core'\r\n\r\nexport const NotFound = (props) =>{\r\n    const classes = content()\r\n    return(\r\n        <Layout history={props.history} page='Not Found' >\r\n            <Paper className={classes.content}>\r\n                <h1>la pagina no se encuentra disponible</h1>\r\n                <Link to='/'>\r\n                    Vuelve al Home\r\n                </Link>\r\n            </Paper>\r\n        </Layout>\r\n    )\r\n}","import React from 'react'\r\nimport {Grid,Paper,List,ListItem,ListItemText,ListItemSecondaryAction,IconButton,makeStyles,TableContainer,Table,TableCell,TableRow,TableHead,TableBody} from '@material-ui/core'\r\nimport {EditOutlined,DeleteOutlineOutlined} from '@material-ui/icons'\r\nimport {content} from '../../Pages/styles/styles'\r\n\r\nexport const ChequesPersonales = ({cheques,seteditIndex,showDialog,openDialogDelete}) =>{\r\n    const classes = content()\r\n\r\n    const openDialog = index =>{\r\n        seteditIndex(index)\r\n        showDialog()\r\n    }\r\n\r\n    return (\r\n        <Grid item>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className={classes.titleDetallesCard}>Valor</TableCell>\r\n                            <TableCell className={classes.titleDetallesCard} align=\"right\">Numero</TableCell>\r\n                            <TableCell className={classes.titleDetallesCard} align=\"right\">Vencimiento</TableCell>\r\n                            <TableCell className={classes.titleDetallesCard} align=\"right\" padding='checkbox'></TableCell>\r\n                            <TableCell className={classes.titleDetallesCard} align=\"right\" padding='checkbox'></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {cheques.map((cheque,i)=>(\r\n                            <TableRow>\r\n                                <TableCell align=\"right\">$ {cheque.valor}</TableCell>\r\n                                <TableCell align=\"right\">{cheque.numero}</TableCell>\r\n                                <TableCell align=\"right\">{cheque.vencimiento}</TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <IconButton className={classes.icon} edge=\"end\" aria-label=\"delete\" onClick={()=>{openDialog(i)}}>\r\n                                        <EditOutlined />\r\n                                    </IconButton>\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <IconButton className={classes.icon} edge=\"end\" aria-label=\"delete\" onClick={()=>{openDialogDelete(i)}}>\r\n                                        <DeleteOutlineOutlined color='error'/>\r\n                                    </IconButton>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Grid>\r\n    )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport {Dialog,DialogTitle,DialogContent,DialogActions,TextField,Button,Grid,makeStyles,FormControl,Select,Input,MenuItem,List,ListItem,ListItemText, Typography,IconButton} from '@material-ui/core'\r\nimport {EditOutlined} from '@material-ui/icons'\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {MuiPickersUtilsProvider,KeyboardTimePicker,KeyboardDatePicker} from '@material-ui/pickers';\r\nimport {content} from '../../../Pages/styles/styles'\r\n\r\nexport const DialogNuevoCheque = ({open,setOpen,datos,setdatos,edit,editIndex,seteditIndex,total,settotal,cliente}) =>{\r\n    const classes = content()\r\n    const [numero,setnumero]=useState(undefined)\r\n    const [banco,setbanco]=useState(undefined)\r\n    const [vencimiento,setvencimiento]=useState(undefined)\r\n    const [valor,setvalor]=useState(undefined)\r\n    const [editarPrecio,seteditarPrecio]=useState(false)\r\n    \r\n    \r\n    // FUNCTIONS\r\n    const resetTextFields = () =>{\r\n        setnumero('')\r\n        setbanco('')\r\n        setvencimiento(undefined)\r\n        setvalor('')\r\n    }\r\n    const agregarCheque = () =>{\r\n        let aux = datos\r\n        aux.push({\r\n            nombre:cliente,\r\n            numero:numero,\r\n            banco:banco,\r\n            vencimiento:vencimiento.toLocaleDateString(),\r\n            valor:valor\r\n        })\r\n        console.log(parseFloat(total),parseFloat(valor))\r\n        settotal(parseFloat(total)+parseFloat(valor))\r\n        setdatos(aux)\r\n    }\r\n    const editarCheque = () =>{\r\n        let aux = datos\r\n        let nuevoTotal = parseFloat(total) - parseFloat(aux[editIndex].valor) + parseFloat(valor)\r\n        const auxVencimiento = vencimiento === (convertirVencimiento(datos[editIndex].vencimiento)) ? convertirVencimiento(vencimiento):vencimiento.toLocaleDateString()\r\n        settotal(nuevoTotal)\r\n        aux[editIndex]={\r\n            nombre:cliente,\r\n            numero:numero,\r\n            banco:banco,\r\n            vencimiento:auxVencimiento,\r\n            valor:valor\r\n        }\r\n        setdatos(aux)\r\n    }\r\n    const convertirVencimiento= (vencimiento)=>{\r\n        return `${vencimiento.slice(vencimiento.indexOf('/')+1,vencimiento.lastIndexOf('/'))}/${vencimiento.slice(0,vencimiento.indexOf('/'))}${vencimiento.slice(vencimiento.lastIndexOf('/'))}`\r\n    }\r\n\r\n    // FILL FOR EDIT\r\n    useEffect(()=>{\r\n        if(edit){\r\n            setnumero(datos[editIndex].numero)\r\n            setbanco(datos[editIndex].banco)\r\n            setvencimiento(convertirVencimiento(datos[editIndex].vencimiento))\r\n            setvalor(datos[editIndex].valor)\r\n        }\r\n    },[edit])\r\n\r\n    // CONTENT\r\n    return(\r\n        <Dialog open={open} maxWidth='md'>\r\n            <DialogTitle>\r\n                {edit?\r\n                    'Editar Cheque'\r\n                    :\r\n                    'Ingresa los datos del cheque'\r\n                }\r\n            </DialogTitle>\r\n            <DialogContent>\r\n            <Grid container direction='column' alignItems='center' spacing={2}>\r\n                    <Grid item>\r\n                        <TextField\r\n                            fullWidth\r\n                            label='Numero'\r\n                            type='number'\r\n                            value={numero}\r\n                            onChange={e=>{\r\n                                setnumero(e.target.value)\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            fullWidth\r\n                            label='Banco'\r\n                            value={banco}\r\n                            onChange={e=>{\r\n                                setbanco(e.target.value)\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils} noValidate>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"dd/MM/yyyy\"\r\n                            fullWidth\r\n                            label=\"Fecha de Vencimiento\"\r\n                            value={vencimiento}\r\n                            onChange={fecha=>{\r\n                                setvencimiento(fecha)\r\n                            }}\r\n                        />\r\n                    </MuiPickersUtilsProvider   >\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            fullWidth\r\n                            label='Valor'\r\n                            type='number'\r\n                            value={valor}\r\n                            onChange={e=>{\r\n                                setvalor(e.target.value)\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button \r\n                    onClick={()=>{\r\n                        if(edit){\r\n                            seteditIndex(-1)\r\n                        }\r\n                        seteditarPrecio(false)\r\n                        resetTextFields()\r\n                        setOpen(false)\r\n                    }}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n                <Button\r\n                    disabled={!numero||!banco||!vencimiento||!valor}\r\n                    onClick={()=>{\r\n                        if(edit){\r\n                            editarCheque()\r\n                            seteditIndex(-1)\r\n                        }\r\n                        else{\r\n                            agregarCheque()\r\n                        }\r\n                        seteditarPrecio(false)\r\n                        resetTextFields()\r\n                        setOpen(false)\r\n                    }}\r\n                >\r\n                    {edit?\r\n                        'Editar'\r\n                        :\r\n                        'Agregar'\r\n                    }\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport {Dialog,DialogTitle,DialogContent,DialogActions,TextField,Button,Grid,makeStyles} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    input:{\r\n        marginBottom:theme.spacing(1),\r\n        textAlign:'center'\r\n    }\r\n}))\r\n\r\nexport const DialogEliminarCheque = ({open,setopen,datos,setDatos,index,setdeleteIndex,tipoDeElemento,total,settotal}) =>{\r\n    const classes = useStyles()\r\n    \r\n    const eliminarCheque = () =>{\r\n        settotal(parseInt(total)-datos[index].valor)\r\n        let aux = datos\r\n        console.log(aux)\r\n        aux.splice(index,1)\r\n        setDatos(aux)\r\n    }\r\n    return(\r\n        <Dialog open={open}>\r\n            <DialogTitle>\r\n                Desea Eliminar {tipoDeElemento}?\r\n            </DialogTitle>\r\n            <DialogActions>\r\n                <Button \r\n                    onClick={()=>{\r\n                        setopen(false)\r\n                        setdeleteIndex(undefined)\r\n                    }}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n                <Button\r\n                    color='error'\r\n                    onClick={()=>{\r\n                        eliminarCheque()\r\n                        setopen(false)\r\n                        setdeleteIndex(undefined)\r\n                    }}\r\n                >\r\n                    Eliminar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport {Dialog,DialogTitle,DialogContent,DialogActions,TextField,Button,Grid,makeStyles,FormControl,Select,Input,MenuItem,List,ListItem,ListItemText, Typography,IconButton} from '@material-ui/core'\r\nimport {EditOutlined} from '@material-ui/icons'\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {MuiPickersUtilsProvider,KeyboardTimePicker,KeyboardDatePicker,} from '@material-ui/pickers';\r\nimport {content} from '../../../Pages/styles/styles'\r\n\r\nexport const DialogNuevoChequePersonal = ({open,setOpen,listaCheques,setListaCheques,listaChequesPersonales,setListaChequesPersonales,totalChequesPersonales,setTotalChequesPersonales,edit,editIndex,seteditIndex,cliente}) =>{\r\n    const classes = content()\r\n    const [numero,setnumero]=useState(undefined)\r\n    const [vencimiento,setvencimiento]=useState(undefined)\r\n    const [valor,setvalor]=useState(undefined)\r\n    const [editarPrecio,seteditarPrecio]=useState(false)\r\n    \r\n    \r\n    // FUNCTIONS\r\n    const resetTextFields = () =>{\r\n        setnumero('')\r\n        setvencimiento(undefined)\r\n        setvalor('')\r\n    }\r\n    const agregarCheque = () =>{\r\n        let aux = listaChequesPersonales\r\n        aux.push({\r\n            destinatario:cliente,\r\n            numero:numero,\r\n            vencimiento:vencimiento.toLocaleDateString(),\r\n            valor:valor\r\n        })\r\n        setTotalChequesPersonales(parseFloat(totalChequesPersonales)+parseFloat(valor))\r\n        setListaChequesPersonales(aux)\r\n    }\r\n    const editarCheque = () =>{\r\n        let aux = listaChequesPersonales\r\n        let nuevoTotal = parseFloat(totalChequesPersonales) - parseFloat(aux[editIndex].valor) + parseFloat(valor)\r\n        const auxVencimiento = vencimiento === (convertirVencimiento(listaChequesPersonales[editIndex].vencimiento)) ? convertirVencimiento(vencimiento):vencimiento.toLocaleDateString()\r\n        setTotalChequesPersonales(nuevoTotal)\r\n        aux[editIndex]={\r\n            destinatario:cliente,\r\n            numero:numero,\r\n            vencimiento:auxVencimiento,\r\n            valor:valor\r\n        }\r\n        setListaChequesPersonales(aux)\r\n    }\r\n    const convertirVencimiento= (vencimiento)=>{\r\n        return `${vencimiento.slice(vencimiento.indexOf('/')+1,vencimiento.lastIndexOf('/'))}/${vencimiento.slice(0,vencimiento.indexOf('/'))}${vencimiento.slice(vencimiento.lastIndexOf('/'))}`\r\n    }\r\n    \r\n    // FILL FOR EDIT\r\n    useEffect(()=>{\r\n        if(edit){\r\n            setnumero(listaChequesPersonales[editIndex].numero)\r\n            setvencimiento(convertirVencimiento(listaChequesPersonales[editIndex].vencimiento))\r\n            setvalor(listaChequesPersonales[editIndex].valor)\r\n        }\r\n    },[edit])\r\n\r\n    // CONTENT\r\n    return(\r\n        <Dialog open={open} maxWidth='md'>\r\n            <DialogTitle>\r\n                {edit?\r\n                    'Editar Cheque'\r\n                    :\r\n                    'Ingresa los datos del cheque'\r\n                }\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <Grid container direction='column' alignItems='center' spacing={2}>\r\n                    <Grid item>\r\n                        <TextField\r\n                            fullWidth\r\n                            label='Numero'\r\n                            type='number'\r\n                            value={numero}\r\n                            onChange={e=>{\r\n                                setnumero(e.target.value)\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils} noValidate>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"dd/MM/yyyy\"\r\n                            label=\"Fecha de Vencimiento\"\r\n                            value={vencimiento}\r\n                            onChange={fecha=>{\r\n                                setvencimiento(fecha)\r\n                            }}\r\n                        />\r\n                    </MuiPickersUtilsProvider   >\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            fullWidth\r\n                            label='Valor'\r\n                            type='number'\r\n                            value={valor}\r\n                            onChange={e=>{\r\n                                setvalor(e.target.value)\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button \r\n                    onClick={()=>{\r\n                        if(edit){\r\n                            seteditIndex(-1)\r\n                        }\r\n                        seteditarPrecio(false)\r\n                        resetTextFields()\r\n                        setOpen(false)\r\n                    }}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n                <Button\r\n                    disabled={!numero||!vencimiento||!valor}\r\n                    onClick={()=>{\r\n                        if(edit){\r\n                            editarCheque()\r\n                            seteditIndex(-1)\r\n                        }\r\n                        else{\r\n                            agregarCheque()\r\n                        }\r\n                        seteditarPrecio(false)\r\n                        resetTextFields()\r\n                        setOpen(false)\r\n                    }}\r\n                >\r\n                    {edit?\r\n                        'Editar'\r\n                        :\r\n                        'Agregar'\r\n                    }\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport {Grid, Button,makeStyles,Select,Input,Chip,MenuItem,Paper,InputAdornment, TextField,Tab,Tabs,AppBar,Typography,Box,Switch,FormControlLabel} from '@material-ui/core'\r\nimport {AddOutlined,AttachMoney} from '@material-ui/icons'\r\nimport { Autocomplete } from '@material-ui/lab'\r\nimport {ChequesPersonales} from './ChequesPersonales'\r\nimport {DialogNuevoCheque} from './Dialogs/DialogNuevoCheque'\r\nimport {DialogEliminarCheque} from './Dialogs/DialogEliminarCheque'\r\nimport {DialogNuevoChequePersonal} from './Dialogs/DialogNuevoChequePersonal'\r\nimport {DialogEliminarChequePersonal} from './Dialogs/DialogEliminarChequePersonal'\r\nimport {Cheques as ChequesProveedor} from '../Recibir-Entrega/Cheques'\r\nimport {Cheques, Cheques  as ChequesCliente} from '../Enviar-Pedido/Cheques'\r\nimport {content} from '../../Pages/styles/styles'\r\n\r\nexport const Step = ({datos,setdatos,total,settotal,tipoDeDato,cliente,addCheque,chequesList,tipo,cuentaTransferencia,setCuentaTransferencia,totalTransferencia,setTotalTransferencia,cuentasBancarias}) =>{\r\n    const classes = content()\r\n    const [showDialog,setshowDialog]=useState(false)\r\n    const [editIndex,seteditIndex]=useState(-1)\r\n    const [showDialogDelete,setshowDialogDelete]=useState(false)\r\n    const [deleteIndex,setdeleteIndex]=useState(undefined)\r\n\r\n    const openDialogDelete = (index) =>{\r\n        setdeleteIndex(index)\r\n        setshowDialogDelete(true)\r\n    }\r\n\r\n    const renderStep = () =>{\r\n        switch (tipoDeDato) {\r\n            case 'Efectivo': \r\n                return(\r\n                    <Grid container>\r\n                        <Grid container item xs={12} justify='center'>\r\n                            <Typography variant='h6'>\r\n                                Ingrese la cantidad\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid container item xs={12} justify='center'>\r\n                            <TextField\r\n                                autoFocus   \r\n                                style={{ width: '250px' }}\r\n                                value={datos}\r\n                                variant='outlined'\r\n                                type='number'\r\n                                onChange={e=>{\r\n                                    setdatos(e.target.value)\r\n                                }}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                        <AttachMoney />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                )\r\n                case 'Transferencia': \r\n                return(\r\n                    <Grid container item xs={12} spacing={1} alignItems='center' justify='center'>\r\n                        <Grid container item xs={12} justify='center'>\r\n                            <Autocomplete\r\n                                freeSolo\r\n                                options={cuentasBancarias?Object.keys(cuentasBancarias):{}}\r\n                                disabled={!cuentasBancarias}\r\n                                getOptionLabel={(option) => option}\r\n                                onSelect={(e)=>{setCuentaTransferencia(e.target.value)}}\r\n                                onChange={(e)=>{setCuentaTransferencia(e.target.value)}}\r\n                                value={cuentaTransferencia}\r\n                                style={{ width: 300 }}\r\n                                renderInput={(params) => <TextField {...params} label=\"Cuenta de Destino\" variant=\"outlined\" />}\r\n                            />\r\n                        </Grid>\r\n                        <Grid container item xs={12} justify='center'>\r\n                            <TextField\r\n                                autoFocus   \r\n                                style={{ width: '250px' }}\r\n                                value={totalTransferencia}\r\n                                variant='outlined'\r\n                                type='number'\r\n                                label=\"Monto\"\r\n                                onChange={e=>{\r\n                                    setTotalTransferencia(e.target.value)\r\n                                }}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <AttachMoney />\r\n                                    </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                )\r\n            case 'Cheques':\r\n                console.log(tipo)\r\n                if(tipo == 'Cliente'){\r\n                    return(\r\n                        <Grid container justify='center' spacing={3}>\r\n                            <Grid container item xs={12} justify='center'>\r\n                                <Button variant='contained' color='primary' startIcon={<AddOutlined/>} onClick={()=>{setshowDialog(true)}}>\r\n                                    Agregar Cheque\r\n                                </Button>\r\n                            </Grid>\r\n                            {datos.length?\r\n                                <Grid container item xs={12} spacing={1} alignItems='center' justify='center'>\r\n                                    <Cheques cheques={datos} seteditIndex={seteditIndex} showDialog={()=>{setshowDialog(true)}} openDialogDelete={i=>{openDialogDelete(i)}}/>\r\n                                </Grid>\r\n                                :\r\n                                null\r\n                            }\r\n\r\n                            {/* DIALOGS */}\r\n                            <DialogNuevoCheque \r\n                                open={showDialog} \r\n                                setOpen={setshowDialog} \r\n                                datos={datos} \r\n                                setdatos={setdatos}\r\n                                edit={editIndex!=-1} \r\n                                editIndex={editIndex} \r\n                                seteditIndex={seteditIndex}\r\n                                total={total}\r\n                                settotal={settotal}\r\n                                cliente={cliente}\r\n                            />\r\n                            <DialogEliminarCheque \r\n                                open={showDialogDelete} \r\n                                setopen={setshowDialogDelete} \r\n                                datos={datos} \r\n                                setDatos={setdatos} \r\n                                index={deleteIndex} \r\n                                setdeleteIndex={setdeleteIndex} \r\n                                tipoDeElemento='Cheque'\r\n                                total={total}\r\n                                settotal={settotal}\r\n                            />\r\n                        </Grid>\r\n                    )\r\n                }\r\n                else{\r\n                    return(\r\n                        <Grid container item xs={12} spacing={1} alignItems='center' justify='center'>\r\n                            <ChequesProveedor cheques={datos} chequesList={chequesList} addCheque={addCheque}/>\r\n                        </Grid>\r\n                    )\r\n                }\r\n            case 'Cheques Personales':\r\n                return(\r\n                    <Grid container xs={12} spacing={3}>\r\n                        <Grid container item xs={12} justify='center'>\r\n                            <Button variant='contained' color='primary' startIcon={<AddOutlined/>} onClick={()=>{setshowDialog(true)}}>\r\n                                Agregar Cheque Personal\r\n                            </Button>\r\n                        </Grid>\r\n                        {\r\n                        datos.length?\r\n                            <Grid container item xs={12} spacing={1} alignItems='center' justify='center'>\r\n                                <ChequesPersonales cheques={datos} seteditIndex={seteditIndex} showDialog={()=>{setshowDialog(true)}} openDialogDelete={i=>{openDialogDelete(i)}}/>\r\n                            </Grid>\r\n                            :\r\n                            null\r\n                        }\r\n                        {/* DIALOGS */}\r\n                        <DialogNuevoChequePersonal \r\n                            open={showDialog} \r\n                            setOpen={setshowDialog} \r\n                            listaChequesPersonales={datos} \r\n                            setListaChequesPersonales={setdatos}\r\n                            edit={editIndex!=-1} \r\n                            editIndex={editIndex} \r\n                            seteditIndex={seteditIndex}\r\n                            totalChequesPersonales={total}\r\n                            setTotalChequesPersonales={settotal}\r\n                            cliente={cliente}\r\n                        />\r\n                        <DialogEliminarCheque\r\n                            open={showDialogDelete} \r\n                            setopen={setshowDialogDelete} \r\n                            datos={datos} \r\n                            setDatos={setdatos} \r\n                            index={deleteIndex} \r\n                            setdeleteIndex={setdeleteIndex} \r\n                            tipoDeElemento='Cheque'\r\n                            total={total}\r\n                            settotal={settotal}\r\n                        />\r\n                    </Grid>\r\n                )\r\n        }\r\n    }\r\n\r\n    return( renderStep() )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport {Dialog,DialogTitle,DialogContent,DialogActions,TextField,Button,Grid,makeStyles} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    input:{\r\n        marginBottom:theme.spacing(1),\r\n        textAlign:'center'\r\n    }\r\n}))\r\n\r\nexport const DialogEliminarChequePersonal = ({open,setopen,datos,setDatos,index,setdeleteIndex,tipoDeElemento,total,settotal}) =>{\r\n    const classes = useStyles()\r\n    \r\n    const eliminarCheque = () =>{\r\n        settotal(parseInt(total)-datos[index].valor)\r\n        let aux = datos\r\n        console.log(aux)\r\n        aux.splice(index,1)\r\n        setDatos(aux)\r\n    }\r\n    return(\r\n        <Dialog open={open}>\r\n            <DialogTitle>\r\n                Desea Eliminar {tipoDeElemento}?\r\n            </DialogTitle>\r\n            <DialogActions>\r\n                <Button \r\n                    onClick={()=>{\r\n                        setopen(false)\r\n                        setdeleteIndex(undefined)\r\n                    }}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n                <Button\r\n                    color='error'\r\n                    onClick={()=>{\r\n                        eliminarCheque()\r\n                        setopen(false)\r\n                        setdeleteIndex(undefined)\r\n                    }}\r\n                >\r\n                    Eliminar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React,{useState, useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {Chip,Paper,ListItem,Card,Button,StepContent,Backdrop,StepLabel,Grid,Step,Stepper,Link as LinkComponent,Snackbar,CircularProgress,Typography} from '@material-ui/core'\r\nimport {AttachMoney,LocalAtm} from '@material-ui/icons'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {Redirect} from 'react-router-dom'\r\nimport {Step as StepComponent} from '../components/Nuevo-Pago/Step'\r\nimport {database} from 'firebase'\r\nimport {checkSearch, formatMoney,fechaDetallada,obtenerFecha} from '../utilities'\r\nimport {content} from './styles/styles'\r\n  \r\nconst NuevoPagoProveedor=(props)=>{\r\n    const classes = content()\r\n    \r\n    const [cheques,setcheques]=useState([])\r\n    const [total,settotal]=useState(0)\r\n    \r\n    const [chequesPersonales,setChequesPersonales]=useState([])\r\n    const [totalChequesPersonales, setTotalChequesPersonales] = useState(0);\r\n    \r\n    const [efectivo,setefectivo]=useState(undefined)\r\n\r\n    const [cuentaTransferencia,setCuentaTransferencia]=useState(undefined)\r\n    const [totalTransferencia, setTotalTransferencia] = useState(undefined);\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [showSnackbar, setshowSnackbar] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const steps = getSteps();\r\n\r\n    // STEPPER NAVIGATION\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n    function getStepContent(step) {\r\n      switch (step) {\r\n        case 0:\r\n          return (\r\n            <StepComponent \r\n                tipoDeDato='Efectivo'\r\n                datos={efectivo}\r\n                setdatos={setefectivo}\r\n                total={total}\r\n                settotal={settotal}\r\n                chequesList={props.cheques}\r\n                tipo='Proveedor'\r\n            /> \r\n            );\r\n        case 1:\r\n            return (\r\n                <StepComponent\r\n                    tipoDeDato='Transferencia'\r\n                    cuentaTransferencia={cuentaTransferencia}\r\n                    setCuentaTransferencia={setCuentaTransferencia}\r\n                    totalTransferencia={totalTransferencia}\r\n                    setTotalTransferencia={setTotalTransferencia}\r\n                    cuentasBancarias={props.cuentasBancarias}\r\n                    />\r\n            );\r\n        case 2:\r\n            return (\r\n                <StepComponent \r\n                tipoDeDato='Cheques'\r\n                datos={cheques}\r\n                setdatos={setcheques}\r\n                total={total}\r\n                settotal={settotal}\r\n                cliente={checkSearch(props.history.location.search)}\r\n                addCheque={addCheque}\r\n                chequesList={props.cheques}\r\n                tipo='Proveedor'\r\n            /> \r\n          );\r\n          case 3:\r\n            return (\r\n                <StepComponent \r\n                tipoDeDato='Cheques Personales'\r\n                datos={chequesPersonales}\r\n                setdatos={setChequesPersonales}\r\n                total={totalChequesPersonales}\r\n                settotal={setTotalChequesPersonales}\r\n                cliente={checkSearch(props.history.location.search)}\r\n                addCheque={addCheque}\r\n                chequesList={props.cheques}\r\n                tipo='Proveedor'\r\n            /> \r\n          );\r\n      }\r\n    }\r\n    function getSteps() {\r\n        return ['Efectivo','Transferencia', 'Cheques', 'Cheques Personales'];\r\n    }\r\n    const setDisabled=(step)=>{\r\n        switch (step) {\r\n            case 0:\r\n                    \r\n                break;\r\n            case 1:\r\n                    return efectivo || cheques.length ? false : true\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function getStepLabel(label,index) {\r\n        switch (index) {\r\n            case 0:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<AttachMoney/>} \r\n                            label={label}  \r\n                            onClick={()=>{setActiveStep(index)}}\r\n                            variant='default'\r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n            case 1:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<LocalAtm />} \r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                            label={label} \r\n                            variant='default'\r\n                            onClick={()=>{setActiveStep(index)}}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n            case 2:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<LocalAtm />} \r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                            label={label} \r\n                            variant='default'\r\n                            onClick={()=>{setActiveStep(index)}}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n            case 3:\r\n                    return (\r\n                        <StepLabel>\r\n                            <Chip \r\n                                avatar={<LocalAtm />} \r\n                                className={activeStep==index?classes.iconLabelSelected:null}\r\n                                label={label} \r\n                                variant='default'\r\n                                onClick={()=>{setActiveStep(index)}}\r\n                            />\r\n                        </StepLabel>\r\n                    );\r\n        }\r\n    }\r\n\r\n    // FUNCTIONS\r\n    const guardarPago = () =>{\r\n        setLoading(true)\r\n\r\n        // ACTUALIZA CADA CHEQUE EN DB\r\n        const chequesList = actualizarCheques()\r\n\r\n        // AGREGA CADA CHEQUE PERSONAL A LA LISTA \r\n        let chequesPersonalesList = agregarChequesPersonales()\r\n\r\n        // FUNCIONES DE ESTRUCTURA\r\n        const calcularDeudaActualizada = () =>{\r\n            return (getDeudaPasada() - calcularTotal())\r\n        }\r\n        const calcularTotal = () =>{\r\n            return efectivo||cheques?total+totalChequesPersonales+(efectivo?parseFloat(efectivo):0) + (totalTransferencia?parseFloat(totalTransferencia):0):null\r\n        }\r\n        const getDeudaPasada = () =>{\r\n            return props.proveedores[checkSearch(props.history.location.search)].datos.deuda\r\n        }\r\n        // ESTRUCTURA DEL PAGO\r\n        let aux={\r\n            efectivo:efectivo?efectivo:null,\r\n            cheques:chequesList.length?chequesList:null,\r\n            cuentaTransferencia:cuentaTransferencia?cuentaTransferencia:null,\r\n            totalTransferencia:totalTransferencia?totalTransferencia:null,\r\n            chequesPersonales:chequesPersonalesList,\r\n            totalChequesPersonales:totalChequesPersonales,\r\n            fecha:obtenerFecha(),\r\n            pagado:calcularTotal(),\r\n            total:calcularTotal(),\r\n            deudaPasada:getDeudaPasada(),\r\n            deudaActualizada:calcularDeudaActualizada(),\r\n        }\r\n\r\n        // ACTUALIZA LA DEUDA CON EL PROVEEDOR \r\n        actualizarDeuda()\r\n        \r\n        // MODELA Y AGREGA LA TRANSFERENCIA A LOS MOVIMIENTOS BANCARIOS\r\n        if(aux.cuentaTransferencia){\r\n            guardarTransferenciaBancaria(aux.cuentaTransferencia,aux.totalTransferencia)\r\n        }\r\n\r\n        // ENVIA TODO A DB\r\n        if(aux){\r\n            database().ref().child(props.user.uid).child('proveedores').child(checkSearch(props.history.location.search)).child('pagos').push(aux)\r\n            .then(()=>{\r\n                    setshowSnackbar('El pago se agregó correctamente!')\r\n                setTimeout(() => {\r\n                    props.history.replace(`/Historial-Proveedor?${checkSearch(props.history.location.search)}`)\r\n                }, 2000);\r\n            })\r\n            .catch(()=>{\r\n                setLoading(false)\r\n            })\r\n        }\r\n    }\r\n    const actualizarCheques = () =>{\r\n        let chequesList =[]\r\n        if(cheques.length){\r\n            // RECORRE LA LISTA DE CHEQUES \r\n            cheques.map(cheque=>{\r\n                // ACTUALIZA EL CHEQUE EN DB\r\n                database().ref().child(props.user.uid).child('cheques').child(cheque).update({\r\n                    egreso:obtenerFecha(),\r\n                    destinatario:props.proveedores[checkSearch(props.history.location.search)].datos.nombre,\r\n                })\r\n                // GUARDA EL NUMERO DE CHEQUE\r\n                chequesList.push(props.cheques[cheque].numero)\r\n            })\r\n        }\r\n        // RETORNA UNA LISTA CON CADA NUMERO DE CHEQUE\r\n        return chequesList\r\n    }\r\n    const agregarChequesPersonales = () =>{\r\n        let chequesList= []\r\n        if(chequesPersonales.length){\r\n            // RECORRE LA LISTA DE CHEQUES \r\n            chequesPersonales.map(cheque=>{\r\n                // GUARDA EL NUMERO DE CHEQUE\r\n                chequesList.push(cheque.numero)\r\n                // ESTRUCTURA DEL CHEQUE\r\n                let auxCheque = {\r\n                    egreso:obtenerFecha(),\r\n                    destinatario:cheque.destinatario,\r\n                    numero:cheque.numero,\r\n                    vencimiento:cheque.vencimiento,\r\n                    valor:cheque.valor\r\n                }\r\n                // GUARDA EN LA LISTA DE CHQUES CADA UNO\r\n                database().ref().child(props.user.uid).child('chequesPersonales').push(auxCheque)\r\n            })\r\n        }\r\n        // RETORNA UNA LISTA CON CADA NUMERO DE CHEQUE\r\n        return chequesList\r\n    }\r\n    const actualizarDeuda = () =>{\r\n        let deudaActual = props.proveedores[checkSearch(props.history.location.search)].datos.deuda\r\n        deudaActual-=total+totalChequesPersonales+(efectivo?parseFloat(efectivo):0)+(totalTransferencia?parseFloat(totalTransferencia):0)\r\n        database().ref().child(props.user.uid).child('proveedores').child(checkSearch(props.history.location.search)).child('datos').update({deuda:deudaActual})\r\n    }\r\n    const guardarTransferenciaBancaria = async (cuenta,total) =>{\r\n        const auxDeposito ={\r\n            fecha:obtenerFecha(),\r\n            tipo:'transferencia',\r\n            total:total\r\n        }\r\n        await database().ref().child(props.user.uid).child('CuentasBancarias').child(cuenta).child('egresos').push(auxDeposito)\r\n    }\r\n    \r\n    const addCheque = key =>{\r\n        const index = cheques.indexOf(key)\r\n        let aux = [...cheques]\r\n        if(index !== -1){\r\n            aux.splice(index,1)\r\n            settotal(parseFloat(total)-parseFloat(props.cheques[key].valor))\r\n        }\r\n        else{\r\n            aux.push(key)\r\n            settotal(parseFloat(total)+parseFloat(props.cheques[key].valor))\r\n        }\r\n        setcheques(aux)\r\n    }\r\n    return(\r\n        <Layout history={props.history} page='Nuevo Pago' user={props.user.uid} blockGoBack={true}>\r\n            {/* CONTENT */}\r\n            <Paper className={classes.content}>\r\n                    {/* STEPPER */}\r\n                    <Stepper orientation='vertical' activeStep={activeStep} className={classes.stepper}>\r\n                        {steps.map((label,index)=>(\r\n                            <Step>\r\n                                {getStepLabel(label,index)}\r\n                                <StepContent>\r\n                                    <Grid container xs={12} justify='center' spacing={3}>\r\n                                        {getStepContent(index)}\r\n                                        <Grid container item xs={12} justify='center'>\r\n                                            <Paper elevation={3} variant='body1' className={classes.paperTotalRecibirEntrega}>\r\n                                                <Grid item xs={12}>\r\n                                                    <Typography variant='h6'>\r\n                                                        Total $ {formatMoney( total + totalChequesPersonales +(efectivo?parseFloat(efectivo):0) + (totalTransferencia?parseFloat(totalTransferencia):0)) }/ $ {formatMoney(props.proveedores[checkSearch(props.location.search)].datos.deuda) } \r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid container item xs={12} justify='center'>\r\n                                                    <Chip label={`$ ${formatMoney( parseFloat(props.proveedores[checkSearch(props.location.search)].datos.deuda) - ( total + totalChequesPersonales +(efectivo?parseFloat(efectivo):0) + (totalTransferencia?parseFloat(totalTransferencia):0)) ) }`}/>\r\n                                                </Grid>\r\n                                            </Paper>\r\n                                        </Grid>\r\n                                        <Grid container item xs={12} justify='center'>\r\n                                            <Grid item>\r\n                                                <Button\r\n                                                    disabled={activeStep===0}\r\n                                                    onClick={handleBack}\r\n                                                >\r\n                                                    Volver\r\n                                                </Button>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Button\r\n                                                    variant=\"contained\"\r\n                                                    color=\"primary\"\r\n                                                    onClick={activeStep === steps.length - 1 ? guardarPago : handleNext}\r\n                                                >\r\n                                                    {activeStep === steps.length - 1 ? 'Finalizar' : 'Siguiente'}\r\n                                                </Button>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </StepContent>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                </Paper>\r\n\r\n            {/* BACKDROP & SNACKBAR */}\r\n            <Backdrop className={classes.backdrop} open={loading}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n            <Snackbar open={showSnackbar} autoHideDuration={2000} onClose={()=>{setshowSnackbar('')}}>\r\n                <Alert severity=\"success\" variant='filled'>\r\n                    {showSnackbar}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Layout>\r\n    )\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        proveedores:state.proveedores,\r\n        cheques:state.cheques,\r\n        cuentasBancarias:state.CuentasBancarias\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(NuevoPagoProveedor)","import React,{useState, useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {Chip,Paper,ListItem,Card,Button,StepContent,Backdrop,StepLabel,Grid,Step,Stepper,Link as LinkComponent,Snackbar,CircularProgress,Typography} from '@material-ui/core'\r\nimport {AttachMoney,LocalAtm} from '@material-ui/icons'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {Redirect} from 'react-router-dom'\r\nimport {Step as StepComponent} from '../components/Nuevo-Pago/Step'\r\nimport {database} from 'firebase'\r\nimport {checkSearch, formatMoney,obtenerFecha} from '../utilities'\r\nimport {content} from './styles/styles'\r\n  \r\nconst NuevoPagoCliente=(props)=>{\r\n    const classes = content()\r\n\r\n    const [cheques,setcheques]=useState([])\r\n    const [total,settotal]=useState(0)\r\n    \r\n    const [efectivo,setefectivo]=useState(undefined)\r\n\r\n    const [cuentaTransferencia,setCuentaTransferencia]=useState(undefined)\r\n    const [totalTransferencia, setTotalTransferencia] = useState(undefined);\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [showSnackbar, setshowSnackbar] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const steps = getSteps();\r\n\r\n    // STEPPER NAVIGATION\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n    function getStepContent(step) {\r\n      switch (step) {\r\n        case 0:\r\n          return (\r\n            <StepComponent \r\n                tipoDeDato='Efectivo'\r\n                datos={efectivo}\r\n                setdatos={setefectivo}\r\n                total={total}\r\n                settotal={settotal}\r\n                tipo='Cliente'\r\n            /> \r\n            );\r\n        case 1:\r\n            return (\r\n                <StepComponent\r\n                    tipoDeDato='Transferencia'\r\n                    cuentaTransferencia={cuentaTransferencia}\r\n                    setCuentaTransferencia={setCuentaTransferencia}\r\n                    totalTransferencia={totalTransferencia}\r\n                    setTotalTransferencia={setTotalTransferencia}\r\n                    cuentasBancarias={props.cuentasBancarias}\r\n                    />\r\n            );\r\n        case 2:\r\n            return (\r\n                <StepComponent \r\n                tipoDeDato='Cheques'\r\n                datos={cheques}\r\n                setdatos={setcheques}\r\n                total={total}\r\n                settotal={settotal}\r\n                cliente={checkSearch(props.history.location.search)}\r\n                tipo='Cliente'\r\n            /> \r\n          );\r\n      }\r\n    }\r\n    function getSteps() {\r\n        return ['Efectivo','Transferencia', 'Cheques'];\r\n    }\r\n    const setDisabled=(step)=>{\r\n        switch (step) {\r\n            case 0:\r\n                    \r\n                break;\r\n            case 2:\r\n                    return efectivo || cheques.length ? false : true\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function getStepLabel(label,index) {\r\n        switch (index) {\r\n            case 0:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<AttachMoney/>} \r\n                            label={label}  \r\n                            onClick={()=>{setActiveStep(index)}}\r\n                            variant='default'\r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n            case 1:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<LocalAtm />} \r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                            label={label} \r\n                            variant='default'\r\n                            onClick={()=>{setActiveStep(index)}}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n            case 2:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<LocalAtm />} \r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                            label={label} \r\n                            variant='default'\r\n                            onClick={()=>{setActiveStep(index)}}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n        }\r\n    }\r\n\r\n    // FUNCTIONS\r\n    const guardarPago = () =>{\r\n        setLoading(true)\r\n\r\n        // ACTUALIZA CADA CHEQUE EN DB\r\n        const chequesList = guardarCheques()\r\n\r\n        // FUNCIONES DE ESTRUCTURA\r\n        const calcularDeudaActualizada = () =>{\r\n            return (getDeudaPasada() - calcularTotal())\r\n        }\r\n        const calcularTotal = () =>{\r\n            return efectivo||cheques? total + (efectivo?parseFloat(efectivo):0) + (totalTransferencia?parseFloat(totalTransferencia):0) :null\r\n        }\r\n        const getDeudaPasada = () =>{\r\n            return props.clientes[checkSearch(props.history.location.search)].datos.deuda\r\n        }\r\n        // ESTRUCTURA DEL PAGO\r\n        let aux={\r\n            efectivo:efectivo?efectivo:null,\r\n            cheques:chequesList.length?chequesList:null,\r\n            cuentaTransferencia:cuentaTransferencia?cuentaTransferencia:null,\r\n            totalTransferencia:totalTransferencia?totalTransferencia:null,\r\n            fecha:obtenerFecha(),\r\n            pagado:calcularTotal(),\r\n            total:calcularTotal(),\r\n            deudaPasada:getDeudaPasada(),\r\n            deudaActualizada:calcularDeudaActualizada(),\r\n        }\r\n\r\n        // ACTUALIZA LA DEUDA DEL CLIENTE \r\n        actualizarDeuda()\r\n\r\n        // MODELA Y AGREGA LA TRANSFERENCIA A LOS MOVIMIENTOS BANCARIOS\r\n        if(aux.cuentaTransferencia){\r\n            guardarTransferenciaBancaria(aux.cuentaTransferencia,aux.totalTransferencia)\r\n        }\r\n\r\n        // ENVIA TODO A DB\r\n        if(aux){\r\n            database().ref().child(props.user.uid).child('clientes').child(checkSearch(props.history.location.search)).child('pagos').push(aux)\r\n            .then(()=>{\r\n                    setshowSnackbar('El pago se agregó correctamente!')\r\n                setTimeout(() => {\r\n                    props.history.replace(`/Historial-Cliente?${checkSearch(props.history.location.search)}`)\r\n                }, 2000);\r\n            })\r\n            .catch(()=>{\r\n                setLoading(false)\r\n            })\r\n        }\r\n    }\r\n    const guardarCheques = () =>{\r\n        let chequesList =[]\r\n        if(cheques.length){\r\n            // RECORRE LA LISTA DE CHEQUES \r\n            cheques.map(cheque=>{\r\n                // GUARDA EL NUMERO DE CHEQUE\r\n                chequesList.push(cheque.numero)\r\n                // ESTRUCTURA DEL CHEQUE\r\n                let auxCheque = {\r\n                    ingreso:obtenerFecha(),\r\n                    nombre:cheque.nombre,\r\n                    numero:cheque.numero,\r\n                    vencimiento:cheque.vencimiento,\r\n                    banco:cheque.banco,\r\n                    valor:cheque.valor\r\n                }\r\n                // GUARDA EN LA LISTA DE CHQUES CADA UNO\r\n                database().ref().child(props.user.uid).child('cheques').push(auxCheque)\r\n            })\r\n        }\r\n        // RETORNA UNA LISTA CON CADA NUMERO DE CHEQUE\r\n        return chequesList\r\n    }\r\n    const actualizarDeuda = () =>{\r\n        let deudaActual = props.clientes[checkSearch(props.history.location.search)].datos.deuda\r\n        deudaActual-=total+(efectivo?parseFloat(efectivo):0) + (totalTransferencia?parseFloat(totalTransferencia):0)\r\n        database().ref().child(props.user.uid).child('clientes').child(checkSearch(props.history.location.search)).child('datos').update({deuda:deudaActual})\r\n    }\r\n    const guardarTransferenciaBancaria = async (cuenta,total) =>{\r\n        const auxDeposito ={\r\n            fecha:obtenerFecha(),\r\n            tipo:'transferencia',\r\n            total:total\r\n        }\r\n        await database().ref().child(props.user.uid).child('CuentasBancarias').child(cuenta).child('ingresos').push(auxDeposito)\r\n    }\r\n    return(\r\n        <Layout history={props.history} page='Nuevo Pago' user={props.user.uid} blockGoBack={true}>\r\n            {/* CONTENT */}\r\n            <Paper className={classes.content}>\r\n                    {/* STEPPER */}\r\n                    <Stepper orientation='vertical' activeStep={activeStep} className={classes.stepper}>\r\n                        {steps.map((label,index)=>(\r\n                            <Step>\r\n                                {getStepLabel(label,index)}\r\n                                <StepContent>\r\n                                    <Grid container xs={12} justify='center' spacing={3}>\r\n                                        {getStepContent(index)}\r\n                                        <Grid container item xs={12} justify='center'>\r\n                                            <Paper elevation={3} variant='body1' className={classes.paperTotalRecibirEntrega}>\r\n                                                <Grid item xs={12}>\r\n                                                    <Typography variant='h6'>\r\n                                                        Total $ {formatMoney( total + (efectivo?parseFloat(efectivo):0) + (totalTransferencia?parseFloat(totalTransferencia):0)) }/ $ {formatMoney(props.clientes[checkSearch(props.location.search)].datos.deuda) } \r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid container item xs={12} justify='center'>\r\n                                                    <Chip label={`$ ${formatMoney( parseFloat(props.clientes[checkSearch(props.location.search)].datos.deuda) - ( total + (efectivo?parseFloat(efectivo):0) + (totalTransferencia?parseFloat(totalTransferencia):0)) ) }`}/>\r\n                                                </Grid>\r\n                                            </Paper>\r\n                                        </Grid>\r\n                                        <Grid container item xs={12} justify='center'>\r\n                                            <Grid item>\r\n                                                <Button\r\n                                                    disabled={activeStep===0}\r\n                                                    onClick={handleBack}\r\n                                                >\r\n                                                    Volver\r\n                                                </Button>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Button\r\n                                                    variant=\"contained\"\r\n                                                    color=\"primary\"\r\n                                                    onClick={activeStep === steps.length - 1 ? guardarPago : handleNext}\r\n                                                >\r\n                                                    {activeStep === steps.length - 1 ? 'Finalizar' : 'Siguiente'}\r\n                                                </Button>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </StepContent>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                </Paper>\r\n\r\n            {/* BACKDROP & SNACKBAR */}\r\n            <Backdrop className={classes.backdrop} open={loading}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n            <Snackbar open={showSnackbar} autoHideDuration={2000} onClose={()=>{setshowSnackbar('')}}>\r\n                <Alert severity=\"success\" variant='filled'>\r\n                    {showSnackbar}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Layout>\r\n    )\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        clientes:state.clientes,\r\n        cuentasBancarias:state.CuentasBancarias\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(NuevoPagoCliente)","import React,{useState} from 'react'\r\nimport {Grid,Card,CardHeader,CardContent,Collapse,CardActions,Button,FormControlLabel,Switch,IconButton,List,ListItemText,ListItem} from '@material-ui/core'\r\nimport {ExpandMore,ExpandLess,Edit} from '@material-ui/icons'\r\nimport {Link} from 'react-router-dom'\r\nimport {Alert} from '@material-ui/lab'\r\nimport {content} from '../../Pages/styles/styles'\r\nimport { formatMoney } from '../../utilities'\r\n\r\n\r\nexport const CardStep = ({proceso,id,activeStep,iniciarProceso,index}) =>{\r\n    const classes = content()\r\n    \r\n    const [expanded,setExpanded] = useState(false)\r\n    const [facturacion,setFacturacion] = useState(false)\r\n\r\n    return(\r\n        <Card className={classes.cardCadenaStep}>\r\n            <CardHeader \r\n                title={proceso.proceso} subheader={proceso.fechaDeInicio} className={proceso.fechaDeEntrega?classes.cardHeaderCadenaStepGreen:(proceso.fechaDeInicio?classes.cardHeaderCadenaStepActive:null)}\r\n                action={\r\n                    <IconButton onClick={()=>{setExpanded(!expanded)}}>\r\n                        {expanded?\r\n                            <ExpandLess/>\r\n                            :\r\n                            <ExpandMore/>\r\n                        }\r\n                    </IconButton>\r\n                }    \r\n            />\r\n            <Collapse in={expanded} timeout='auto' unmountOnExit>\r\n                {(activeStep()==index) && !proceso.fechaDeInicio?\r\n                    <CardActions>\r\n                        <Grid container item xs={12} justify='center'>\r\n                            <Grid item>\r\n                                <Button color='primary' variant='contained' onClick={()=>{iniciarProceso(id,activeStep())}}> Iniciar Proceso</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardActions>\r\n                    :\r\n                    null\r\n                }\r\n                {console.log(proceso)}\r\n                {(activeStep()==index) && proceso.fechaDeInicio ?\r\n                    <CardActions>\r\n                        <Grid container item xs={12} justify='center'>\r\n                            <Grid container item xs={12} justify='center'>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            color='primary'\r\n                                            checked={facturacion}\r\n                                            disabled={proceso.isProcesoPropio}\r\n                                            onChange={e=>{\r\n                                                setFacturacion(!facturacion)\r\n                                            }}\r\n                                        />\r\n                                    }\r\n                                    label=\"Facturacion\"\r\n                                />\r\n                            </Grid>\r\n                            {proceso.isProcesoPropio?\r\n                                <Grid item>\r\n                                    <Link \r\n                                        style={{color:'#fff',textDecoration:'none',cursor:'pointer'}}\r\n                                        to={{pathname:'/Finalizar-Proceso-Propio',search:`${id}`}\r\n                                    }>\r\n                                        <Button color='primary' variant='contained'> Finalizar Proceso Propio</Button>\r\n                                    </Link>\r\n                                </Grid>\r\n                                :\r\n                                <Grid item>\r\n                                    <Link \r\n                                        style={{color:'#fff',textDecoration:'none',cursor:'pointer'}}\r\n                                        to={{pathname:'/Finalizar-Proceso',search:`${id}`,props:{facturacion:facturacion}}\r\n                                    }>\r\n                                        <Button color='primary' variant='contained'> Finalizar Proceso</Button>\r\n                                    </Link>\r\n                                </Grid>\r\n                            }\r\n                        </Grid>\r\n                    </CardActions>\r\n                    :\r\n                    null\r\n                }\r\n                <CardContent>\r\n                    <Grid container xs={12}>\r\n                        {proceso.fechaDeEntrega?\r\n                            <Grid container item xs={12} justify='center'>\r\n                                <Alert variant=\"filled\" severity=\"success\" className={classes.alertCheque}>\r\n                                    retirado el {proceso.fechaDeEntrega}\r\n                                </Alert>\r\n                            </Grid>\r\n                            :\r\n                            null\r\n                        }\r\n                        <Grid container item xs={12} justify='flex-start'>\r\n                            <List>\r\n                                {proceso.precio?\r\n                                    <ListItem>\r\n                                        <ListItemText primary={`$ ${formatMoney(proceso.precio)}`} secondary='Precio'/>\r\n                                    </ListItem>\r\n                                    :\r\n                                    null\r\n                                }\r\n                                <ListItem>\r\n                                    <ListItemText \r\n                                        primary={\r\n                                            <Link \r\n                                                style={{color:'#fff',textDecoration:'none',cursor:'pointer'}}\r\n                                                to={{pathname:'/Proveedor',search:`${proceso.isProcesoPropio?'Tota':proceso.proveedor}`}\r\n                                            }>\r\n                                                {proceso.isProcesoPropio?'Tota':proceso.proveedor}\r\n                                            </Link>\r\n                                        } \r\n                                        secondary='Proveedor Asociado'/>\r\n                                </ListItem>\r\n                            </List>\r\n                            {proceso.idEntrega?\r\n                                <Grid container item xs={12} justify='center'>\r\n                                    <Link \r\n                                            style={{color:'#fff',textDecoration:'none',cursor:'pointer'}}\r\n                                            to={{pathname:'/Proveedor',search:`${proceso.proveedor}`,props:{searchEntrega:`${proceso.idEntrega}`}}\r\n                                        }>\r\n                                        <Button variant='contained' color='primary'>\r\n                                            Ver Entrega\r\n                                        </Button>\r\n                                    </Link>\r\n                                </Grid>\r\n                                :\r\n                                null\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Collapse>\r\n        </Card>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React,{useState} from 'react'\r\nimport {Grid,Card,CardHeader,CardContent,Collapse,Stepper,Step,StepLabel,IconButton,List,ListItemText,ListItem} from '@material-ui/core'\r\nimport {ExpandMore,ExpandLess} from '@material-ui/icons'\r\nimport {CardStep} from './CardStep'\r\nimport {Link} from 'react-router-dom'\r\nimport {Alert} from '@material-ui/lab'\r\nimport {content} from '../../Pages/styles/styles'\r\nimport { checkSearch } from '../../utilities'\r\n\r\n\r\nexport const Cadena = ({cadena,id,iniciarProceso}) =>{\r\n    const classes = content()\r\n    \r\n    const [expanded,setExpanded] = useState(false)\r\n\r\n    //STEPPER NAVIGATION\r\n    const getStep = () =>{\r\n        let index = 0\r\n        cadena.procesos.map((proceso,i)=>{\r\n            if(proceso.fechaDeEntrega){\r\n                index=i+1\r\n            }\r\n        })\r\n        return index\r\n    }\r\n\r\n    return(\r\n        <Grid container item xs={12}>\r\n            <Card className={classes.cardCadena}>\r\n                <CardHeader \r\n                    title={\r\n                        <Link \r\n                            style={{color:'#fff',textDecoration:'none',cursor:'pointer'}}\r\n                            to={{pathname:'/Productos',search:`${checkSearch('-'+cadena.producto)}`}\r\n                        }>\r\n                            {cadena.producto}\r\n                        </Link>\r\n                    } subheader={`${cadena.cantidad?`${cadena.cantidad} u. -`:''} ${cadena.fechaDeInicio}`} className={classes.cardHeaderCadena}\r\n                    action={\r\n                        <IconButton onClick={()=>{setExpanded(!expanded)}}>\r\n                            {expanded?\r\n                                <ExpandLess/>\r\n                                :\r\n                                <ExpandMore/>\r\n                            }\r\n                        </IconButton>\r\n                    }    \r\n                />\r\n                <Collapse in={expanded} timeout='auto' unmountOnExit>\r\n                    <CardContent>\r\n                        <Stepper activeStep={getStep()} alternativeLabel>\r\n                            {cadena.procesos.map((proceso,i) => (\r\n                                <Step key={proceso.proceso}>\r\n                                    <StepLabel>\r\n                                        <Grid container xs={12}>\r\n                                            <Grid container item xs={12} justify='center'>\r\n                                                <CardStep proceso={proceso} id={id} iniciarProceso={iniciarProceso} index={i} activeStep={getStep}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </StepLabel>\r\n                                </Step>\r\n                            ))}\r\n                        </Stepper>\r\n                    </CardContent>\r\n                </Collapse>\r\n            </Card>\r\n        </Grid>\r\n    )\r\n}","import React,{useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {content} from './styles/styles'\r\nimport {Paper,Grid,Typography,Backdrop,CircularProgress,Snackbar,CardContent,List,ListItem,ListItemText} from '@material-ui/core'\r\nimport {Alert} from '@material-ui/lab'\r\nimport {database} from 'firebase'\r\nimport Empty from '../images/Empty.png'\r\nimport {Cadena} from '../components/Cadenas-De-Produccion/Cadena'\r\nimport { obtenerFecha } from '../utilities'\r\n\r\n//COMPONENT\r\nconst CadenasDeProduccion=(props)=>{\r\n    const classes = content()\r\n    const [showSnackbar, setshowSnackbar] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const iniciarProceso = (id,step) =>{\r\n        setLoading(true)\r\n        let aux= props.cadenasActivas[id].procesos\r\n        aux[step]={...aux[step],fechaDeInicio:obtenerFecha()}\r\n        database().ref().child(props.user.uid).child('cadenasActivas').child(id).child('procesos').update(aux)\r\n        .then(()=>{\r\n            setshowSnackbar('El Proceso Inicio Correctamente!')\r\n            setTimeout(() => {\r\n                setLoading(false)\r\n            }, 2000);\r\n        })\r\n        .catch(()=>{\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    return(\r\n        //Layout\r\n        <Layout history={props.history} page=\"Cadenas De Produccion\" user={props.user.uid}>\r\n            <Paper className={classes.content}>\r\n                <Grid container xs={12} justify='center' spacing={2}>\r\n                    {props.cadenasActivas?\r\n                        Object.keys(props.cadenasActivas).map(cadena=>(\r\n                            <Cadena cadena={props.cadenasActivas[cadena]} id={cadena} iniciarProceso={iniciarProceso}/>\r\n                        ))\r\n                        :\r\n                        <Grid container xs={12} justify='center' spacing={2}>\r\n                            <Grid item>\r\n                                <img src={Empty} alt=\"\" height='500px'/>\r\n                            </Grid>\r\n                            <Grid container item xs={12} justify='center'>\r\n                                <Typography variant='h5'>No hay Cadenas de Produccion Activas</Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    }\r\n                </Grid>\r\n            </Paper>\r\n\r\n            {/* BACKDROP & SNACKBAR */}\r\n            <Backdrop className={classes.backdrop} open={loading}>\r\n                <CircularProgress color=\"inherit\" />\r\n                <Snackbar open={showSnackbar} autoHideDuration={2000} onClose={()=>{setshowSnackbar('')}}>\r\n                    <Alert severity=\"success\" variant='filled'>\r\n                        {showSnackbar}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </Backdrop>\r\n        </Layout>\r\n    )\r\n}\r\n\r\n//REDUX STATE TO PROPS\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        cadenasActivas:state.cadenasActivas\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(CadenasDeProduccion)","import React,{useState} from 'react'\r\nimport {Grid,Card,CardHeader,CardContent,Collapse,Stepper,Step,StepLabel,IconButton,List,ListItemText,ListItem} from '@material-ui/core'\r\nimport {ExpandMore,ExpandLess} from '@material-ui/icons'\r\nimport {CardStep} from '../Cadenas-De-Produccion/CardStep'\r\nimport {Link} from 'react-router-dom'\r\nimport {Alert} from '@material-ui/lab'\r\nimport {content} from '../../Pages/styles/styles'\r\nimport { checkSearch } from '../../utilities'\r\n\r\n\r\nexport const Cadena = ({cadena,id,iniciarProceso,generateChartCadena}) =>{\r\n    const classes = content()\r\n    \r\n    const [expanded,setExpanded] = useState(false)\r\n\r\n    //STEPPER NAVIGATION\r\n    const getStep = () =>{\r\n        let index = 0\r\n        cadena.procesos.map((proceso,i)=>{\r\n            if(proceso.fechaDeEntrega){\r\n                index=i+1\r\n            }\r\n        })\r\n        return index\r\n    }\r\n\r\n    return(\r\n        <Grid container item xs={12}>\r\n            <Card className={classes.cardCadena}>\r\n                <CardHeader \r\n                    title={\r\n                        <Link \r\n                            style={{color:'#fff',textDecoration:'none',cursor:'pointer'}}\r\n                            to={{pathname:'/Productos',search:`${checkSearch('-'+cadena.producto)}`}\r\n                        }>\r\n                            {cadena.producto}\r\n                        </Link>\r\n                    } subheader={`${cadena.cantidad?`${cadena.cantidad} u. -`:''} ${cadena.fechaDeInicio}`} className={classes.cardHeaderCadena}\r\n                    action={\r\n                        <IconButton onClick={()=>{setExpanded(!expanded)}}>\r\n                            {expanded?\r\n                                <ExpandLess/>\r\n                                :\r\n                                <ExpandMore/>\r\n                            }\r\n                        </IconButton>\r\n                    }    \r\n                />\r\n                <Collapse in={expanded} timeout='auto' unmountOnExit>\r\n                    <CardContent>\r\n                        {generateChartCadena(id)}\r\n                        <Stepper activeStep={getStep()} alternativeLabel>\r\n                            {cadena.procesos.map((proceso,i) => (\r\n                                <Step key={proceso.proceso}>\r\n                                    <StepLabel>\r\n                                        <Grid container xs={12}>\r\n                                            <Grid container item xs={12} justify='center'>\r\n                                                <CardStep proceso={proceso} id={id} iniciarProceso={iniciarProceso} index={i} activeStep={getStep}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </StepLabel>\r\n                                </Step>\r\n                            ))}\r\n                        </Stepper>\r\n                    </CardContent>\r\n                </Collapse>\r\n            </Card>\r\n        </Grid>\r\n    )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {Paper,Grid,Typography,Card,CardContent,TableRow,TableCell,TableBody,TableContainer,Button} from '@material-ui/core'\r\nimport {MenuCheques} from '../components/Historial/MenuCheques'\r\nimport {AddOutlined} from '@material-ui/icons'\r\nimport {DialogConfirmDelete} from '../components/Cliente/DialogConfirmDelete'\r\nimport {Link} from 'react-router-dom'\r\nimport {formatMoney} from '../utilities'\r\nimport {content} from './styles/styles'\r\nimport {Cadena} from '../components/Historial-De-Produccion/Cadena'\r\nimport {checkSearch,checkSearchProducto} from '../utilities'\r\nimport ApexCharts from 'react-apexcharts';\r\nimport Empty from '../images/Empty.png'\r\n\r\n// COMPONENT\r\nconst HistorialDeProduccion=(props)=>{\r\n    const classes = content()\r\n    const [historial,setHistorial]= useState(props.productos[checkSearchProducto(props.location.search)].historialDeCadenas)\r\n   \r\n    const generateChartCadena = (key) => {\r\n        let data=[]\r\n\r\n        historial[key].procesos.map((proceso,i)=>{\r\n            const inicio = new Date(`${proceso.fechaDeInicio.split('/')[1]}-${proceso.fechaDeInicio.split('/')[0]}-${proceso.fechaDeInicio.split('/')[2]}`)\r\n            const entrega = new Date(`${proceso.fechaDeEntrega.split('/')[1]}-${proceso.fechaDeEntrega.split('/')[0]}-${proceso.fechaDeEntrega.split('/')[2]}`)\r\n            data.push({x:proceso.proceso,y:[new Date(inicio).getTime(),new Date(entrega).getTime()]})\r\n        })\r\n\r\n        // Define la configuración del gráfico\r\n        const options = {\r\n            plotOptions:{\r\n                bar:{\r\n                    horizontal:true\r\n                }\r\n            },\r\n            xaxis:{\r\n                type:'datetime'\r\n            }\r\n\r\n        };\r\n        console.log(data)\r\n        // Renderiza el gráfico\r\n        return (\r\n            <Card>\r\n                <CardContent>\r\n                    <ApexCharts options={options} type='rangeBar' series={[{data:data}]} width={600}/>\r\n                </CardContent>\r\n            </Card>)\r\n    }\r\n    return(\r\n        <Layout history={props.history} page={`Historial De Produccion ${checkSearchProducto(props.location.search)}`} user={props.user.uid}>\r\n            {/* CONTENT */}            \r\n            <Paper className={classes.content}>\r\n                <Grid container xs={12} justify='center'>\r\n                    {historial? \r\n                        <Grid container item xs={12} spacing={3}>\r\n                            {Object.keys(historial).reverse().map(key=>(\r\n                                <Cadena cadena={historial[key]} id={key} generateChartCadena={generateChartCadena}/>\r\n                            ))}\r\n                        </Grid>\r\n                        :\r\n                        <Grid container xs={12} justify='center' spacing={2}>\r\n                            <Grid container item xs={12} justify='center'>\r\n                                <Typography variant='h5'>{checkSearchProducto(props.location.search)} no tiene historial de produccion</Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <img src={Empty} alt=\"\" height='600px'/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    }\r\n                </Grid>\r\n            </Paper>\r\n        </Layout>\r\n    )\r\n}\r\n\r\n// REDUX STATE TO PROPS\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        productos:state.productos\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(HistorialDeProduccion)","import React,{useState,useEffect} from 'react'\r\nimport {Dialog,DialogTitle,DialogContent,DialogActions,TextField,Button,Grid,makeStyles} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    input:{\r\n        marginBottom:theme.spacing(1),\r\n        textAlign:'center'\r\n    }\r\n}))\r\n\r\nexport const DialogEliminarCheque = ({open,setopen,datos,setDatos,index,setdeleteIndex,tipoDeElemento,total,settotal}) =>{\r\n    const classes = useStyles()\r\n    \r\n    const eliminarCheque = () =>{\r\n        settotal(parseInt(total)-datos[index].valor)\r\n        let aux = datos\r\n        console.log(aux)\r\n        aux.splice(index,1)\r\n        setDatos(aux)\r\n    }\r\n    return(\r\n        <Dialog open={open}>\r\n            <DialogTitle>\r\n                Desea Eliminar {tipoDeElemento}?\r\n            </DialogTitle>\r\n            <DialogActions>\r\n                <Button \r\n                    onClick={()=>{\r\n                        setopen(false)\r\n                        setdeleteIndex(undefined)\r\n                    }}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n                <Button\r\n                    color='error'\r\n                    onClick={()=>{\r\n                        eliminarCheque()\r\n                        setopen(false)\r\n                        setdeleteIndex(undefined)\r\n                    }}\r\n                >\r\n                    Eliminar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React from 'react'\r\nimport {Grid,Paper,List,ListItem,ListItemText,ListItemSecondaryAction,IconButton,makeStyles,TableContainer,Table,TableCell,TableRow,TableHead,TableBody} from '@material-ui/core'\r\nimport {EditOutlined,DeleteOutlineOutlined} from '@material-ui/icons'\r\nimport {content} from '../../Pages/styles/styles'\r\n\r\nexport const ChequesPersonales = ({cheques,seteditIndex,showDialog,openDialogDelete}) =>{\r\n    const classes = content()\r\n\r\n    const openDialog = index =>{\r\n        seteditIndex(index)\r\n        showDialog()\r\n    }\r\n\r\n    return (\r\n        <Grid item>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className={classes.titleDetallesCard}>Valor</TableCell>\r\n                            <TableCell className={classes.titleDetallesCard} align=\"right\">Numero</TableCell>\r\n                            <TableCell className={classes.titleDetallesCard} align=\"right\">Vencimiento</TableCell>\r\n                            <TableCell className={classes.titleDetallesCard} align=\"right\" padding='checkbox'></TableCell>\r\n                            <TableCell className={classes.titleDetallesCard} align=\"right\" padding='checkbox'></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {cheques.map((cheque,i)=>(\r\n                            <TableRow>\r\n                                <TableCell align=\"right\">$ {cheque.valor}</TableCell>\r\n                                <TableCell align=\"right\">{cheque.numero}</TableCell>\r\n                                <TableCell align=\"right\">{cheque.vencimiento}</TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <IconButton className={classes.icon} edge=\"end\" aria-label=\"delete\" onClick={()=>{openDialog(i)}}>\r\n                                        <EditOutlined />\r\n                                    </IconButton>\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <IconButton className={classes.icon} edge=\"end\" aria-label=\"delete\" onClick={()=>{openDialogDelete(i)}}>\r\n                                        <DeleteOutlineOutlined color='error'/>\r\n                                    </IconButton>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Grid>\r\n    )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport {Dialog,DialogTitle,DialogContent,DialogActions,TextField,Button,Grid,makeStyles,FormControl,Select,Input,MenuItem,List,ListItem,ListItemText, Typography,IconButton} from '@material-ui/core'\r\nimport {EditOutlined} from '@material-ui/icons'\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {MuiPickersUtilsProvider,KeyboardTimePicker,KeyboardDatePicker,} from '@material-ui/pickers';\r\nimport {content} from '../../../Pages/styles/styles'\r\n\r\nexport const DialogNuevoChequePersonal = ({open,setOpen,listaCheques,setListaCheques,listaChequesPersonales,setListaChequesPersonales,totalChequesPersonales,setTotalChequesPersonales,edit,editIndex,seteditIndex,cliente}) =>{\r\n    const classes = content()\r\n    const [numero,setnumero]=useState(undefined)\r\n    const [vencimiento,setvencimiento]=useState(undefined)\r\n    const [valor,setvalor]=useState(undefined)\r\n    const [editarPrecio,seteditarPrecio]=useState(false)\r\n    \r\n    \r\n    // FUNCTIONS\r\n    const resetTextFields = () =>{\r\n        setnumero('')\r\n        setvencimiento(undefined)\r\n        setvalor('')\r\n    }\r\n    const agregarCheque = () =>{\r\n        let aux = listaChequesPersonales\r\n        aux.push({\r\n            destinatario:cliente,\r\n            numero:numero,\r\n            vencimiento:vencimiento.toLocaleDateString(),\r\n            valor:valor\r\n        })\r\n        setTotalChequesPersonales(parseFloat(totalChequesPersonales)+parseFloat(valor))\r\n        setListaChequesPersonales(aux)\r\n    }\r\n    const editarCheque = () =>{\r\n        let aux = listaChequesPersonales\r\n        let nuevoTotal = parseFloat(totalChequesPersonales) - parseFloat(aux[editIndex].valor) + parseFloat(valor)\r\n        const auxVencimiento = vencimiento === (convertirVencimiento(listaChequesPersonales[editIndex].vencimiento)) ? convertirVencimiento(vencimiento):vencimiento.toLocaleDateString()\r\n        setTotalChequesPersonales(nuevoTotal)\r\n        aux[editIndex]={\r\n            destinatario:cliente,\r\n            numero:numero,\r\n            vencimiento:auxVencimiento,\r\n            valor:valor\r\n        }\r\n        setListaChequesPersonales(aux)\r\n    }\r\n    const convertirVencimiento= (vencimiento)=>{\r\n        return `${vencimiento.slice(vencimiento.indexOf('/')+1,vencimiento.lastIndexOf('/'))}/${vencimiento.slice(0,vencimiento.indexOf('/'))}${vencimiento.slice(vencimiento.lastIndexOf('/'))}`\r\n    }\r\n    \r\n    // FILL FOR EDIT\r\n    useEffect(()=>{\r\n        if(edit){\r\n            setnumero(listaChequesPersonales[editIndex].numero)\r\n            setvencimiento(convertirVencimiento(listaChequesPersonales[editIndex].vencimiento))\r\n            setvalor(listaChequesPersonales[editIndex].valor)\r\n        }\r\n    },[edit])\r\n\r\n    // CONTENT\r\n    return(\r\n        <Dialog open={open} maxWidth='md'>\r\n            <DialogTitle>\r\n                {edit?\r\n                    'Editar Cheque'\r\n                    :\r\n                    'Ingresa los datos del cheque'\r\n                }\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <Grid container direction='column' alignItems='center' spacing={2}>\r\n                    <Grid item>\r\n                        <TextField\r\n                            fullWidth\r\n                            label='Numero'\r\n                            type='number'\r\n                            value={numero}\r\n                            onChange={e=>{\r\n                                setnumero(e.target.value)\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils} noValidate>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"dd/MM/yyyy\"\r\n                            label=\"Fecha de Vencimiento\"\r\n                            value={vencimiento}\r\n                            onChange={fecha=>{\r\n                                setvencimiento(fecha)\r\n                            }}\r\n                        />\r\n                    </MuiPickersUtilsProvider   >\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            fullWidth\r\n                            label='Valor'\r\n                            type='number'\r\n                            value={valor}\r\n                            onChange={e=>{\r\n                                setvalor(e.target.value)\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button \r\n                    onClick={()=>{\r\n                        if(edit){\r\n                            seteditIndex(-1)\r\n                        }\r\n                        seteditarPrecio(false)\r\n                        resetTextFields()\r\n                        setOpen(false)\r\n                    }}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n                <Button\r\n                    disabled={!numero||!vencimiento||!valor}\r\n                    onClick={()=>{\r\n                        if(edit){\r\n                            editarCheque()\r\n                            seteditIndex(-1)\r\n                        }\r\n                        else{\r\n                            agregarCheque()\r\n                        }\r\n                        seteditarPrecio(false)\r\n                        resetTextFields()\r\n                        setOpen(false)\r\n                    }}\r\n                >\r\n                    {edit?\r\n                        'Editar'\r\n                        :\r\n                        'Agregar'\r\n                    }\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React, { useState,useEffect } from 'react'\r\nimport {Grid, Button,InputAdornment,Select,Input,Chip,MenuItem,Paper,FormControl, TextField,Tab,Tabs,AppBar,Typography,Box,Switch,FormControlLabel,InputLabel} from '@material-ui/core'\r\nimport {AddOutlined,AttachMoney, List} from '@material-ui/icons'\r\nimport {DialogEliminarCheque} from './Dialogs/DialogEliminarCheque'\r\nimport {ChequesPersonales} from './ChequesPersonales'\r\nimport {DialogNuevoChequePersonal} from './Dialogs/DialogNuevoChequePersonal'\r\nimport { Autocomplete } from '@material-ui/lab'\r\nimport {Cheques} from '../Recibir-Entrega/Cheques'\r\nimport {content} from '../../Pages/styles/styles'\r\n\r\nexport const Step = ({tipoDeDato,precio,setPrecio,cantidad,setCantidad,efectivo,setEfectivo,cheques,cliente,addCheque,total,settotal,chequesList,cuentaTransferencia,setCuentaTransferencia,totalTransferencia,setTotalTransferencia,cuentasBancarias,chequesPersonales,setChequesPersonales,totalChequesPersonales,setTotalChequesPersonales}) =>{\r\n    const classes = content()\r\n    const [showDialog,setshowDialog]=useState(false)\r\n    const [editIndex,seteditIndex]=useState(-1)\r\n    const [showDialogDelete,setshowDialogDelete]=useState(false)\r\n    const [deleteIndex,setdeleteIndex]=useState(undefined)\r\n    // RENDER\r\n\r\n    const openDialogDelete = (index) =>{\r\n        setdeleteIndex(index)\r\n        setshowDialogDelete(true)\r\n    }\r\n\r\n    switch (tipoDeDato) {\r\n        case 'Detalles': \r\n            return(\r\n                <Grid container item xs={12} justify='center'>\r\n                    <Grid item>\r\n                        <Typography variant='h6'>\r\n                            Cantidad Recibida\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid container item xs={12} justify='center'>\r\n                        <TextField\r\n                            autoFocus\r\n                            style={{ width: '250px' }}\r\n                            value={cantidad}\r\n                            variant='outlined'\r\n                            type='number'\r\n                            onChange={e=>{\r\n                                setCantidad(e.target.value)\r\n                            }}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <List/>\r\n                                </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography variant='h6'>\r\n                            Precio Final\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid container item xs={12} justify='center'>\r\n                        <TextField\r\n                            style={{ width: '250px' }}\r\n                            value={precio}\r\n                            variant='outlined'\r\n                            type='number'\r\n                            onChange={e=>{\r\n                                setPrecio(e.target.value)\r\n                            }}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <AttachMoney />\r\n                                </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n            case 'Transferencia': \r\n                return(\r\n                    <Grid container item xs={12} spacing={1} alignItems='center' justify='center'>\r\n                        <Grid container item xs={12} justify='center'>\r\n                            <Autocomplete\r\n                                freeSolo\r\n                                options={cuentasBancarias?Object.keys(cuentasBancarias):{}}\r\n                                disabled={!cuentasBancarias}\r\n                                getOptionLabel={(option) => option}\r\n                                onSelect={(e)=>{setCuentaTransferencia(e.target.value)}}\r\n                                onChange={(e)=>{setCuentaTransferencia(e.target.value)}}\r\n                                value={cuentaTransferencia}\r\n                                style={{ width: 300 }}\r\n                                renderInput={(params) => <TextField {...params} label=\"Cuenta Bancaria\" variant=\"outlined\" />}\r\n                            />\r\n                        </Grid>\r\n                        <Grid container item xs={12} justify='center'>\r\n                            <TextField\r\n                                autoFocus   \r\n                                style={{ width: '250px' }}\r\n                                value={totalTransferencia}\r\n                                variant='outlined'\r\n                                type='number'\r\n                                label=\"Monto\"\r\n                                onChange={e=>{\r\n                                    setTotalTransferencia(e.target.value)\r\n                                }}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <AttachMoney />\r\n                                    </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                )\r\n            case 'Metodo De Pago': \r\n                return(\r\n                <Grid container item xs={12} justify='center' spacing={3}>\r\n                    <Grid item>\r\n                        <Typography variant='h6'>\r\n                            Efectivo\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid container item xs={12} justify='center'>\r\n                        <TextField\r\n                            autoFocus\r\n                            style={{ width: '250px' }}\r\n                            value={efectivo}\r\n                            variant='outlined'\r\n                            type='number'\r\n                            onChange={e=>{\r\n                                setEfectivo(e.target.value)\r\n                            }}\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <AttachMoney />\r\n                                </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid container item xs={12} spacing={1} alignItems='center' justify='center'>\r\n                        <Grid item>\r\n                            <Typography variant='h6'>\r\n                                Efectivo\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Cheques cheques={cheques} chequesList={chequesList} addCheque={addCheque}/>\r\n                    </Grid>\r\n                </Grid>\r\n                )\r\n                case 'Cheques Personales':\r\n                    return(\r\n                        <Grid container xs={12} spacing={3}>\r\n                            <Grid container item xs={12} justify='center'>\r\n                                <Button variant='contained' color='primary' startIcon={<AddOutlined/>} onClick={()=>{setshowDialog(true)}}>\r\n                                    Agregar Cheque Personal\r\n                                </Button>\r\n                            </Grid>\r\n                            {\r\n                            chequesPersonales.length?\r\n                                <Grid container item xs={12} spacing={1} alignItems='center' justify='center'>\r\n                                    <ChequesPersonales cheques={chequesPersonales} seteditIndex={seteditIndex} showDialog={()=>{setshowDialog(true)}} openDialogDelete={i=>{openDialogDelete(i)}}/>\r\n                                </Grid>\r\n                                :\r\n                                null\r\n                            }\r\n                            {/* DIALOGS */}\r\n                            <DialogNuevoChequePersonal \r\n                                open={showDialog} \r\n                                setOpen={setshowDialog} \r\n                                listaChequesPersonales={chequesPersonales} \r\n                                setListaChequesPersonales={setChequesPersonales}\r\n                                edit={editIndex!=-1} \r\n                                editIndex={editIndex} \r\n                                seteditIndex={seteditIndex}\r\n                                totalChequesPersonales={totalChequesPersonales}\r\n                                setTotalChequesPersonales={setTotalChequesPersonales}\r\n                                cliente={cliente}\r\n                            />\r\n                            <DialogEliminarCheque\r\n                                open={showDialogDelete} \r\n                                setopen={setshowDialogDelete} \r\n                                datos={chequesPersonales} \r\n                                setDatos={setChequesPersonales} \r\n                                index={deleteIndex} \r\n                                setdeleteIndex={setdeleteIndex} \r\n                                tipoDeElemento='Cheque'\r\n                                total={totalChequesPersonales}\r\n                                settotal={setTotalChequesPersonales}\r\n                            />\r\n                        </Grid>\r\n                    )\r\n    }\r\n    \r\n}","import React,{useState, useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {Grid,Paper,Chip,Card,Button,StepContent,Backdrop,StepLabel,Typography,Step,Stepper,Snackbar,CircularProgress} from '@material-ui/core'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {Step as StepComponent} from '../components/Finalizar-Proceso/Step'\r\nimport {database} from 'firebase'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {checkSearch, formatMoney,fechaDetallada,obtenerFecha} from '../utilities'\r\nimport {content} from './styles/styles'\r\nimport { AttachMoney, List, LocalAtm } from '@material-ui/icons';\r\n  \r\n  const FinalizarEntrega=(props)=>{\r\n    const classes = content()\r\n\r\n    const [cheques,setcheques]=useState([])\r\n    const [total, settotal] = useState(0);\r\n\r\n    const [chequesPersonales,setChequesPersonales]=useState([])\r\n    const [totalChequesPersonales, setTotalChequesPersonales] = useState(0);\r\n\r\n    const [cuentaTransferencia,setCuentaTransferencia]=useState(undefined)\r\n    const [totalTransferencia, setTotalTransferencia] = useState(undefined);\r\n\r\n    const [efectivo,setEfectivo]=useState(undefined)\r\n\r\n    const [precio, setPrecio] = useState(undefined);\r\n    const [cantidad, setCantidad] = useState(props.cadenasActivas[props.location.search.slice(1)].cantidad?props.cadenasActivas[props.location.search.slice(1)].cantidad:undefined);\r\n\r\n    const [facturacion, setFacturacion] = useState(props.location.props.facturacion?props.location.props.facturacion:false);\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [showSnackbar, setshowSnackbar] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const steps = getSteps();\r\n\r\n    //STEPPER NAVIGATION \r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n    function getStepContent(step) {\r\n      switch (step) {\r\n        case 0:\r\n          return (\r\n            <StepComponent\r\n                tipoDeDato='Detalles'\r\n                precio={precio}      \r\n                cantidad={cantidad}      \r\n                setPrecio={setPrecio}      \r\n                setCantidad={setCantidad}\r\n                setEfectivo={setEfectivo}    \r\n            />\r\n          );\r\n          case 1:\r\n            return (\r\n              <StepComponent\r\n                  tipoDeDato='Transferencia'\r\n                  cuentaTransferencia={cuentaTransferencia}\r\n                  setCuentaTransferencia={setCuentaTransferencia}\r\n                  totalTransferencia={totalTransferencia}\r\n                  setTotalTransferencia={setTotalTransferencia}\r\n                  cuentasBancarias={props.cuentasBancarias}\r\n                  />\r\n            );\r\n          case 2:\r\n            return (\r\n              <StepComponent\r\n                tipoDeDato='Metodo De Pago'\r\n                efectivo={efectivo}\r\n                setEfectivo={setEfectivo}\r\n                cheques={cheques}\r\n                setcheques={setcheques}\r\n                addCheque={addCheque}\r\n                total={total}\r\n                settotal={settotal}\r\n                chequesList={props.cheques}\r\n                  />\r\n            );\r\n        case 3:\r\n            return (\r\n                    <StepComponent \r\n                        tipoDeDato='Cheques Personales'\r\n                        chequesPersonales={chequesPersonales}\r\n                        setChequesPersonales={setChequesPersonales}\r\n                        totalChequesPersonales={totalChequesPersonales}\r\n                        setTotalChequesPersonales={setTotalChequesPersonales}\r\n                        cliente={props.cadenasActivas[props.location.search.slice(1)].procesos[checkStepProceso(props.history.location.search.slice(1))].proveedor}\r\n                        addCheque={addCheque}\r\n                        chequesList={props.cheques}\r\n                        tipo='Proveedor'\r\n                    />\r\n          );\r\n        }\r\n    }\r\n    function getSteps() {\r\n        return ['Detalles',\"Transferencia\",'Metodo De Pago','Cheques Personales'];\r\n    }\r\n    function getStepLabel(label,index) {\r\n        switch (index) {\r\n            case 0:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<List/>} \r\n                            label={label}  \r\n                            onClick={()=>{setActiveStep(index)}}\r\n                            variant='default'\r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n            case 1:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<LocalAtm />} \r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                            label={label} \r\n                            variant='default'\r\n                            onClick={()=>{setActiveStep(index)}}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n            case 2:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<AttachMoney />} \r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                            label={label} \r\n                            variant='default'\r\n                            onClick={()=>{setActiveStep(index)}}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n            case 3:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<AttachMoney />} \r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                            label={label} \r\n                            variant='default'\r\n                            onClick={()=>{setActiveStep(index)}}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n        }\r\n    }\r\n\r\n\r\n    //FUNCTIONS\r\n    const checkStepProceso = (id) =>{\r\n        let aux = props.cadenasActivas[id].procesos\r\n        let index = 0\r\n        aux.map((proceso,i)=>{\r\n            if(proceso.fechaDeInicio){\r\n                index = i\r\n            }\r\n        })\r\n        return index\r\n    }\r\n    const finalizarProceso = async () =>{\r\n        const id = props.history.location.search.slice(1)\r\n        const step = checkStepProceso(id)\r\n        const cadena = props.cadenasActivas[id].procesos\r\n\r\n        setLoading(true)\r\n        \r\n        // ACTUALIZA CADA CHEQUE EN DB\r\n        let chequesList = actualizarCheques(cadena[step].proveedor)\r\n        \r\n        // AGREGA CADA CHEQUE PERSONAL A LA LISTA \r\n        let chequesPersonalesList = agregarChequesPersonales()\r\n\r\n        // FUNCIONES DE ESTRUCTURA\r\n        const calcularDeudaActualizada = () =>{\r\n            return props.proveedores[cadena[step].proveedor].datos.deuda + parseFloat(calcularAdeudado())\r\n        }\r\n        const calcularPagado = () =>{\r\n            return total + totalChequesPersonales +(efectivo?parseFloat(efectivo):0) +(totalTransferencia?parseFloat(totalTransferencia):0)\r\n        }     \r\n        const calcularAdeudado = () =>{\r\n            return precio - (total + totalChequesPersonales + (efectivo?parseFloat(efectivo):0) + (totalTransferencia?parseFloat(totalTransferencia):0))\r\n        }        \r\n        // ESTRUCTURA DE LA ENTREGA\r\n        let aux={\r\n                fecha:obtenerFecha(),\r\n                proveedor:cadena[step].proveedor,\r\n                articulos:[{\r\n                    cantidad:cantidad,\r\n                    precio:precio/cantidad,\r\n                    producto:props.cadenasActivas[id].producto,\r\n                    total:precio\r\n                }],\r\n                metodoDePago:{\r\n                    facturacion:facturacion,\r\n                    efectivo:efectivo?efectivo:null,\r\n                    cuentaTransferencia:cuentaTransferencia?cuentaTransferencia:null,\r\n                    totalTransferencia:totalTransferencia?totalTransferencia:null,\r\n                    cheques:chequesList,\r\n                    chequesPersonales:chequesPersonalesList,\r\n                    totalChequesPersonales:totalChequesPersonales,\r\n                    fecha:obtenerFecha(),\r\n                    total:precio,\r\n                    deudaPasada:props.proveedores[cadena[step].proveedor].datos.deuda,\r\n                    deudaActualizada:calcularDeudaActualizada(),\r\n                    pagado:calcularPagado(),\r\n                    adeudado:calcularAdeudado()\r\n                },\r\n                metodoDeEnvio:'Particular',\r\n                total:precio,\r\n            }\r\n        \r\n        // ACTUALIZA LA DEUDA DEL PROVEEDOR\r\n        actualizarDeuda(aux.total, aux.metodoDePago.pagado,cadena[step].proveedor)\r\n       \r\n        if(props.location.props.facturacion){\r\n            aux.articulos = actualizarPrecios(aux.articulos)\r\n        }\r\n\r\n\r\n        // AGREGA LA ENTREGA A DB PARA OBTENER ID\r\n        let idLink = database().ref().child(props.user.uid).child('proveedores').child(cadena[step].proveedor).child('entregas').push()\r\n        \r\n        // AGREGA LA FACTURA A LISTA DE COMPRAS\r\n        agregarAListaDeCompras(aux,idLink.key)\r\n\r\n        // MODELA Y AGREGA EL PAGO AL HISTORIAL\r\n        agregarPagoAlHistorial(aux.metodoDePago,idLink.key,cadena[step].proveedor)\r\n        \r\n        // MODELA Y AGREGA LA TRANSFERENCIA A LOS MOVIMIENTOS BANCARIOS\r\n        if(aux.metodoDePago.cuentaTransferencia){\r\n            guardarTransferenciaBancaria(aux.metodoDePago.cuentaTransferencia,aux.metodoDePago.totalTransferencia)\r\n        }\r\n\r\n        // FEEDBACK DEL PROCESO\r\n        setshowSnackbar('El Proceso Finalizo Correctamente')\r\n\r\n        // ACTUALIZA LA CADENA DE PRODUCCION ACTIVA\r\n        actualizarCadenaDeProduccion(id,step,aux.total,cantidad,idLink.key)\r\n\r\n        // AUMENTAR PRDODUCTOS\r\n        if(step==cadena.length-1){\r\n            await aumentarProducto(id)\r\n            await descontarSubproductos(id)\r\n        }\r\n        // ACTUALIZA DB ENVIANDO TODA LA INFO\r\n        idLink.update(aux)\r\n            .then(()=>{\r\n                setTimeout(() => {\r\n                    props.history.replace('/Cadenas-De-Produccion')\r\n                    if(step==cadena.length-1){\r\n                        database().ref().child(props.user.uid).child('cadenasActivas').child(id).remove()\r\n                    }\r\n                }, 2000);\r\n            })\r\n            .catch(()=>{\r\n                setLoading(false)\r\n            })\r\n    }\r\n    const actualizarPrecios = (articulos) =>{\r\n        let aux =articulos\r\n        aux.map(articulo=>{\r\n            articulo.precio=articulo.precio+articulo.precio*0.21\r\n            articulo.total = parseFloat(articulo.cantidad) * articulo.precio\r\n        })\r\n        return aux\r\n    }\r\n    const aumentarProducto = async id =>{\r\n        const producto = props.cadenasActivas[id].producto\r\n\r\n        // AUMENTA LA CANTIDAD DE PRODUCTOS\r\n        const nuevaCantidad = parseInt(props.productos[producto].cantidad)+parseInt(cantidad)\r\n        await database().ref().child(props.user.uid).child('productos').child(producto).update({cantidad:nuevaCantidad})\r\n        await database().ref().child(props.user.uid).child('productos').child(producto).child('historialDeStock').push({cantidad:nuevaCantidad,fecha:obtenerFecha()})\r\n        \r\n    }\r\n    const descontarSubproductos = async id =>{\r\n        const subproductos = props.productos[props.cadenasActivas[id].producto].subproductos\r\n\r\n        // DESCUENTA LA CANTIDAD DE PRODUCTOS\r\n        if(subproductos){\r\n            subproductos.map(async subproducto=>{\r\n                const nuevaCantidad = parseInt(props.productos[subproducto.nombre].cantidad)-(cantidad*subproducto.cantidad)\r\n                await database().ref().child(props.user.uid).child('productos').child(subproducto.nombre).update({cantidad:nuevaCantidad})\r\n                await database().ref().child(props.user.uid).child('productos').child(subproducto.nombre).child('historialDeStock').push({cantidad:nuevaCantidad,fecha:obtenerFecha()})\r\n            })\r\n        }\r\n    }\r\n    const actualizarCheques =(id) =>{\r\n        let chequesList= []\r\n        if(cheques.length){\r\n            // RECORRE LA LISTA DE CHEQUES \r\n            cheques.map(cheque=>{\r\n                // ACTUALIZA EL CHEQUE EN DB\r\n                database().ref().child(props.user.uid).child('cheques').child(cheque).update({\r\n                    destinatario:id,\r\n                    egreso:obtenerFecha()\r\n                })\r\n                // GUARDA EL NUMERO DE CHEQUE\r\n                chequesList.push(props.cheques[cheque].numero)\r\n            })\r\n        }\r\n        // RETORNA UNA LISTA CON CADA NUMERO DE CHEQUE\r\n        return chequesList\r\n    }\r\n    const agregarChequesPersonales = () =>{\r\n        let chequesList= []\r\n        if(chequesPersonales.length){\r\n            // RECORRE LA LISTA DE CHEQUES \r\n            chequesPersonales.map(cheque=>{\r\n                // GUARDA EL NUMERO DE CHEQUE\r\n                chequesList.push(cheque.numero)\r\n                // ESTRUCTURA DEL CHEQUE\r\n                let auxCheque = {\r\n                    egreso:obtenerFecha(),\r\n                    destinatario:cheque.destinatario,\r\n                    numero:cheque.numero,\r\n                    vencimiento:cheque.vencimiento,\r\n                    valor:cheque.valor\r\n                }\r\n                // GUARDA EN LA LISTA DE CHQUES CADA UNO\r\n                database().ref().child(props.user.uid).child('chequesPersonales').push(auxCheque)\r\n            })\r\n        }\r\n        // RETORNA UNA LISTA CON CADA NUMERO DE CHEQUE\r\n        return chequesList\r\n    }\r\n    const actualizarDeuda = (totalPedido,totalRecibido,id) =>{\r\n        const deudaPasada = props.proveedores[id].datos.deuda\r\n        if(totalPedido>totalRecibido){\r\n            database().ref().child(props.user.uid).child('proveedores').child(id).child('datos').update({deuda:(deudaPasada)+(totalPedido-totalRecibido)})\r\n        }\r\n        else{\r\n            database().ref().child(props.user.uid).child('proveedores').child(id).child('datos').update({deuda:(deudaPasada)-(totalRecibido-totalPedido)})\r\n        }\r\n    }\r\n    const agregarPagoAlHistorial = (pago,idLink,id) =>{\r\n        let aux= {...pago,idEntrega:idLink}\r\n        database().ref().child(props.user.uid).child('proveedores').child(id).child('pagos').push(aux)\r\n    }\r\n    const agregarAListaDeCompras = (entrega,idLink) =>{\r\n        let aux=entrega\r\n        aux['idEntrega']=idLink\r\n        database().ref().child(props.user.uid).child('compras').push(aux)\r\n    }\r\n    const actualizarCadenaDeProduccion = (id,step,precio,cantidad,idEntrega) =>{\r\n        let aux = props.cadenasActivas[id]\r\n        aux.cantidad=cantidad\r\n        aux.procesos[step].fechaDeEntrega=(obtenerFecha())\r\n        aux.procesos[step].idEntrega=idEntrega\r\n        aux.procesos[step].precio=precio\r\n        if(step==aux.procesos.length-1){\r\n            database().ref().child(props.user.uid).child('productos').child(aux.producto).child('historialDeCadenas').push(aux)\r\n        }\r\n        else{\r\n            database().ref().child(props.user.uid).child('cadenasActivas').child(id).update(aux)\r\n        }\r\n    }\r\n    const guardarTransferenciaBancaria = async (cuenta,total) =>{\r\n        const auxDeposito ={\r\n            fecha:obtenerFecha(),\r\n            tipo:'transferencia',\r\n            total:total\r\n        }\r\n        await database().ref().child(props.user.uid).child('CuentasBancarias').child(cuenta).child('egresos').push(auxDeposito)\r\n    }\r\n    const addCheque = key =>{\r\n        const index = cheques.indexOf(key)\r\n        let aux = [...cheques]\r\n        if(index !== -1){\r\n            aux.splice(index,1)\r\n            settotal(parseFloat(total)-parseFloat(props.cheques[key].valor))\r\n        }\r\n        else{\r\n            aux.push(key)\r\n            settotal(parseFloat(total)+parseFloat(props.cheques[key].valor))\r\n        }\r\n        setcheques(aux)\r\n    }\r\n\r\n    return(\r\n        <Layout history={props.history} page='Finalizar Proceso' user={props.user.uid} blockGoBack={true}>\r\n            {/* CONTENT */}\r\n            <Paper className={classes.content}>\r\n                {/* STEPPER */}\r\n                <Stepper orientation='vertical' activeStep={activeStep} className={classes.stepper}>\r\n                    {steps.map((label,index)=>(\r\n                        <Step>\r\n                            {getStepLabel(label,index)}\r\n                            <StepContent>\r\n                                <Grid container xs={12} justify='center' spacing={3}>\r\n                                    {getStepContent(index)}\r\n                                    {activeStep == 1?\r\n                                        <Grid container item xs={12} justify='center'>\r\n                                            <Paper elevation={3} variant='body1' className={classes.paperTotalRecibirEntrega}>\r\n                                                <Grid item xs={12}>\r\n                                                    <Typography variant='h6'>\r\n                                                        Total $ {formatMoney( total + totalChequesPersonales +(efectivo?parseFloat(efectivo):0) + (totalTransferencia?parseFloat(totalTransferencia):0))} / $ {formatMoney(precio)}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid container item xs={12} justify='center'>\r\n                                                    <Chip label={`$ ${formatMoney( precio - ( total + totalChequesPersonales +(efectivo?parseFloat(efectivo):0) + (totalTransferencia?parseFloat(totalTransferencia):0)) )}`}/>\r\n                                                </Grid>\r\n                                            </Paper>\r\n                                        </Grid>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                    <Grid container item xs={12} justify='center'>\r\n                                        <Grid item>\r\n                                            <Button\r\n                                                disabled={activeStep===0}\r\n                                                onClick={handleBack}\r\n                                            >\r\n                                                Volver\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                disabled={!cantidad || !precio}\r\n                                                onClick={activeStep === steps.length - 1 ? finalizarProceso : handleNext}\r\n                                            >\r\n                                                {activeStep === steps.length - 1 ? 'Finalizar' : 'Siguiente'}\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </StepContent>\r\n                        </Step>\r\n                    ))}\r\n                </Stepper>\r\n            </Paper>\r\n            \r\n            {/* BACKDROP & SNACKBAR */}\r\n            <Backdrop className={classes.backdrop} open={loading}>\r\n                <CircularProgress color=\"inherit\" />\r\n                <Snackbar open={showSnackbar} autoHideDuration={2000} onClose={()=>{setshowSnackbar('')}}>\r\n                    <Alert severity=\"success\" variant='filled'>\r\n                        {showSnackbar}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </Backdrop>\r\n        </Layout>\r\n    )\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        productos:state.productos,\r\n        proveedores:state.proveedores,\r\n        cheques:state.cheques,\r\n        cadenasActivas:state.cadenasActivas,\r\n        cuentasBancarias:state.CuentasBancarias\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(FinalizarEntrega)","import React,{useState} from 'react'\r\nimport {CardHeader,Paper,ListItem,Card,CardContent,Typography,TextField,List,Grid,Chip,IconButton,Link as LinkComponent} from '@material-ui/core'\r\nimport {content} from '../../Pages/styles/styles'\r\n// COMPONENT\r\nconst CardCuentaBancaria=({cuenta,active})=>{\r\n    const classes = content()\r\n    \r\n    return(\r\n        <Grid item>\r\n            <Card className={active?classes.activeBankAccountCard:classes.disabledBankAccountCard}>\r\n                <CardHeader\r\n                    title={cuenta}\r\n                />\r\n            </Card>\r\n        </Grid>\r\n    )\r\n}\r\nexport default CardCuentaBancaria\r\n","import React,{useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {makeStyles,Paper,ListItem,Card,CardContent,Typography,TextField,List,Grid,Chip,IconButton,Link as LinkComponent} from '@material-ui/core'\r\nimport {AttachMoney,PersonAdd} from '@material-ui/icons'\r\nimport {Link} from 'react-router-dom'\r\nimport {formatMoney} from '../utilities'\r\nimport {content} from './styles/styles'\r\nimport CardCuentaBancaria from '../components/Cuentas-Bancarias/CardCuentaBancaria'\r\nimport Empty from '../images/Empty.png'\r\nimport { useEffect } from 'react'\r\n// COMPONENT\r\nconst CuentasBancarias=(props)=>{\r\n    const classes = content()\r\n    const [search,setSearch]=useState('')\r\n    const [activeAccount,setActiveAccount]=useState(props.location.search?props.location.search.slice(1):undefined)\r\n\r\n    return(\r\n        <Layout history={props.history} page=\"Cuentas Bancarias\" user={props.user.uid}>\r\n            {console.log(activeAccount)}\r\n            {/* CONTENT */}\r\n            <Paper className={classes.content}>\r\n                <Grid container spacing={4}>\r\n                    {/* SEARCH BAR */}\r\n                    <Grid container item xs={12} justify='center' alignItems='center'>\r\n                        <Grid item>\r\n                            <Link \r\n                                to='/Nueva-Cuenta-Bancaria'>\r\n                                <IconButton>\r\n                                    <PersonAdd/>\r\n                                </IconButton>\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    {/* CLIENT LIST */}\r\n                    <Grid container item xs={12} spacing={2} >\r\n                        {props.CuentasBancarias?\r\n                            <Grid container xs={12} justify='space-around'>\r\n                                {Object.keys(props.CuentasBancarias).map(key=>(\r\n                                    <CardCuentaBancaria cuenta={key} active={key==activeAccount}/>\r\n                                ))}\r\n                            </Grid>\r\n                            :\r\n                            <>\r\n                                <Grid item>\r\n                                    <img src={Empty} alt=\"\" height='600px'/>\r\n                                </Grid>\r\n                                <Grid container item xs={12} justify='center'>\r\n                                    <Typography variant='h4'>No hay Cuentas Bancarias</Typography>\r\n                                </Grid>\r\n                            </>\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </Layout>\r\n    )\r\n}\r\n\r\n// REDUX STATE TO PROPS\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        CuentasBancarias:state.CuentasBancarias\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(CuentasBancarias)","import React, { useState } from 'react'\r\nimport {Grid, Button,makeStyles,Select,Input,Chip,MenuItem,Paper,InputAdornment, TextField,Tab,Tabs,AppBar,Typography,Box,Switch,FormControlLabel} from '@material-ui/core'\r\nimport { Autocomplete } from '@material-ui/lab'\r\nimport {AddOutlined,AttachMoney} from '@material-ui/icons'\r\nimport {content} from '../../Pages/styles/styles'\r\n\r\nexport const Step = ({tipoDeDato,nuevaCuenta,setNuevaCuenta}) =>{\r\n\r\n    const renderStep = () =>{\r\n        switch (tipoDeDato) {\r\n            case 'Informacion': \r\n                return(\r\n                    <Grid container>\r\n                        <Grid container item xs={12} justify='center'>\r\n                            <Typography variant='h6'>\r\n                                Ingresar el nombre de la nueva cuenta Bancaria\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} justify='center'>\r\n                            <TextField\r\n                                value={nuevaCuenta}\r\n                                onChange={e=>{\r\n                                    setNuevaCuenta(e.target.value)\r\n                                }}\r\n                                label='Nombre'\r\n                            />\r\n                            </Grid>\r\n                    </Grid>\r\n                )\r\n        }\r\n    }\r\n\r\n    return( renderStep() )\r\n}","import React,{useState, useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {Chip,Paper,ListItem,Card,Button,StepContent,Backdrop,StepLabel,Grid,Step,Stepper,Link as LinkComponent,Snackbar,CircularProgress,Typography} from '@material-ui/core'\r\nimport {AttachMoney,LocalAtm} from '@material-ui/icons'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {Redirect} from 'react-router-dom'\r\nimport {Step as StepComponent} from '../components/Nueva-Cuenta-Bancaria/Step'\r\nimport {database} from 'firebase'\r\nimport {checkSearch, formatMoney,obtenerFecha} from '../utilities'\r\nimport {content} from './styles/styles'\r\n  \r\nconst NuevaCuentaBancaria=(props)=>{\r\n    const classes = content()\r\n    const [nuevaCuenta,setNuevaCuenta]=useState(undefined)\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [showSnackbar, setshowSnackbar] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const steps = getSteps();\r\n\r\n    // STEPPER NAVIGATION\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n    function getStepContent(step) {\r\n      switch (step) {\r\n        case 0:\r\n          return (\r\n            <StepComponent\r\n                nuevaCuenta={nuevaCuenta}\r\n                setNuevaCuenta={setNuevaCuenta}\r\n                tipoDeDato=\"Informacion\"\r\n            /> \r\n            );\r\n      }\r\n    }\r\n    function getSteps() {\r\n        return ['Informacion'];\r\n    }\r\n    function getStepLabel(label,index) {\r\n        switch (index) {\r\n            case 0:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<AttachMoney/>} \r\n                            label={label}  \r\n                            onClick={()=>{setActiveStep(index)}}\r\n                            variant='default'\r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n        }\r\n    }\r\n\r\n    // FUNCTIONS\r\n    const agregarNuevaCuentaBancaria = async () =>{\r\n        setLoading(true)\r\n        const auxCuentaBancaria ={\r\n            [nuevaCuenta]:{\r\n                nombre:nuevaCuenta\r\n            }\r\n        }\r\n        await database().ref().child(props.user.uid).child('CuentasBancarias').update(auxCuentaBancaria)\r\n        setshowSnackbar('La cuenta Bancaria se Agrego Correctamente')\r\n        props.history.replace('/Cuentas-Bancarias')\r\n        setLoading(false)\r\n    }\r\n    return(\r\n        <Layout history={props.history} page='Despositar Cheque' user={props.user.uid} blockGoBack={true}>\r\n            {/* CONTENT */}\r\n            <Paper className={classes.content}>\r\n                    {/* STEPPER */}\r\n                    <Stepper orientation='vertical' activeStep={activeStep} className={classes.stepper}>\r\n                        {steps.map((label,index)=>(\r\n                            <Step>\r\n                                {getStepLabel(label,index)}\r\n                                <StepContent>\r\n                                    <Grid container xs={12} justify='center' spacing={3}>\r\n                                        {getStepContent(index)}\r\n                                        <Grid container item xs={12} justify='center'>\r\n                                            <Grid item>\r\n                                                <Button\r\n                                                    disabled={activeStep===0}\r\n                                                    onClick={handleBack}\r\n                                                >\r\n                                                    Volver\r\n                                                </Button>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Button\r\n                                                    variant=\"contained\"\r\n                                                    color=\"primary\"\r\n                                                    disabled={!nuevaCuenta}\r\n                                                    onClick={activeStep === steps.length - 1 ? agregarNuevaCuentaBancaria : handleNext}\r\n                                                >\r\n                                                    {activeStep === steps.length - 1 ? 'Finalizar' : 'Siguiente'}\r\n                                                </Button>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </StepContent>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                </Paper>\r\n\r\n            {/* BACKDROP & SNACKBAR */}\r\n            <Backdrop className={classes.backdrop} open={loading}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n            <Snackbar open={showSnackbar} autoHideDuration={2000} onClose={()=>{setshowSnackbar('')}}>\r\n                <Alert severity=\"success\" variant='filled'>\r\n                    {showSnackbar}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Layout>\r\n    )\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        cuentasBancarias:state.CuentasBancarias,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(NuevaCuentaBancaria)","import React, { useState } from 'react'\r\nimport {Grid, Button,makeStyles,Select,Input,Chip,MenuItem,Paper,InputAdornment, TextField,Tab,Tabs,AppBar,Typography,Box,Switch,FormControlLabel} from '@material-ui/core'\r\nimport { Autocomplete } from '@material-ui/lab'\r\nimport {AddOutlined,AttachMoney} from '@material-ui/icons'\r\nimport {content} from '../../Pages/styles/styles'\r\n\r\nexport const Step = ({tipoDeDato,destinatario,cuentasList,setDestinatario}) =>{\r\n    const classes = content()\r\n\r\n    const renderStep = () =>{\r\n        switch (tipoDeDato) {\r\n            case 'Cuenta de Destino': \r\n                return(\r\n                    <Grid container>\r\n                        {console.log((cuentasList))}\r\n                        <Grid container item xs={12} justify='center'>\r\n                            <Typography variant='h6'>\r\n                                Seleccionar Cuenta Bancaria de Destino\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} justify='center'>\r\n                                <Autocomplete\r\n                                    freeSolo\r\n                                    disabled={!cuentasList}\r\n                                    options={cuentasList?Object.keys(cuentasList):{}}\r\n                                    getOptionLabel={(option) => option}\r\n                                    onSelect={(e)=>{setDestinatario(e.target.value)}}\r\n                                    onChange={(e)=>{setDestinatario(e.target.value)}}\r\n                                    style={{ width: 300 }}\r\n                                    value={destinatario}\r\n                                    renderInput={(params) => <TextField {...params} label=\"Destinatario\" variant=\"outlined\" />}\r\n                                />\r\n                            </Grid>\r\n                    </Grid>\r\n                )\r\n        }\r\n    }\r\n\r\n    return( renderStep() )\r\n}","import React,{useState, useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {Chip,Paper,ListItem,Card,Button,StepContent,Backdrop,StepLabel,Grid,Step,Stepper,Link as LinkComponent,Snackbar,CircularProgress,Typography} from '@material-ui/core'\r\nimport {AttachMoney,LocalAtm} from '@material-ui/icons'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {Redirect} from 'react-router-dom'\r\nimport {Step as StepComponent} from '../components/Depositar-Cheque/Step'\r\nimport {database} from 'firebase'\r\nimport {checkSearch, formatMoney,obtenerFecha} from '../utilities'\r\nimport {content} from './styles/styles'\r\n  \r\nconst DepositarCheque=(props)=>{\r\n    const classes = content()\r\n    const [destinatario,setDestinatario]=useState(undefined)\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [showSnackbar, setshowSnackbar] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const steps = getSteps();\r\n\r\n    // STEPPER NAVIGATION\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n    function getStepContent(step) {\r\n      switch (step) {\r\n        case 0:\r\n          return (\r\n            <StepComponent \r\n                tipoDeDato='Cuenta de Destino'\r\n                destinatario={destinatario}\r\n                setDestinatario={setDestinatario}\r\n                cuentasList={props.cuentasBancarias}\r\n            /> \r\n            );\r\n      }\r\n    }\r\n    function getSteps() {\r\n        return ['Cuenta de Desitno'];\r\n    }\r\n    function getStepLabel(label,index) {\r\n        switch (index) {\r\n            case 0:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<AttachMoney/>} \r\n                            label={label}  \r\n                            onClick={()=>{setActiveStep(index)}}\r\n                            variant='default'\r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n        }\r\n    }\r\n\r\n    // FUNCTIONS\r\n    const depositarCheque = async () =>{\r\n        setLoading(true)\r\n        const auxDeposito ={\r\n            fecha:obtenerFecha(),\r\n            tipo:'cheque',\r\n            cheque:props.cheques[props.location.search.slice(1)].numero,\r\n            total:props.cheques[props.location.search.slice(1)].valor\r\n        }\r\n        actualizarCheque()\r\n        await database().ref().child(props.user.uid).child('CuentasBancarias').child(destinatario).child('ingresos').push(auxDeposito)\r\n        setshowSnackbar('El Cheque se Deposito Correctamente')\r\n        props.history.replace('/Cheques')\r\n        setLoading(false)\r\n    }\r\n    const actualizarCheque = async () =>{\r\n        const aux={\r\n            destinatario:destinatario,\r\n            depositadoEnCuenta:true,\r\n            egreso:obtenerFecha()\r\n        }\r\n        await database().ref().child(props.user.uid).child('cheques').child(props.location.search.slice(1)).update(aux)\r\n    }\r\n    return(\r\n        <Layout history={props.history} page='Despositar Cheque' user={props.user.uid} blockGoBack={true}>\r\n            {/* CONTENT */}\r\n            <Paper className={classes.content}>\r\n                    {/* STEPPER */}\r\n                    <Stepper orientation='vertical' activeStep={activeStep} className={classes.stepper}>\r\n                        {steps.map((label,index)=>(\r\n                            <Step>\r\n                                {getStepLabel(label,index)}\r\n                                <StepContent>\r\n                                    <Grid container xs={12} justify='center' spacing={3}>\r\n                                        {getStepContent(index)}\r\n                                        <Grid container item xs={12} justify='center'>\r\n                                            <Grid item>\r\n                                                <Button\r\n                                                    disabled={activeStep===0}\r\n                                                    onClick={handleBack}\r\n                                                >\r\n                                                    Volver\r\n                                                </Button>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Button\r\n                                                    variant=\"contained\"\r\n                                                    color=\"primary\"\r\n                                                    disabled={!destinatario}\r\n                                                    onClick={activeStep === steps.length - 1 ? depositarCheque : handleNext}\r\n                                                >\r\n                                                    {activeStep === steps.length - 1 ? 'Finalizar' : 'Siguiente'}\r\n                                                </Button>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </StepContent>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                </Paper>\r\n\r\n            {/* BACKDROP & SNACKBAR */}\r\n            <Backdrop className={classes.backdrop} open={loading}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n            <Snackbar open={showSnackbar} autoHideDuration={2000} onClose={()=>{setshowSnackbar('')}}>\r\n                <Alert severity=\"success\" variant='filled'>\r\n                    {showSnackbar}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Layout>\r\n    )\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        cuentasBancarias:state.CuentasBancarias,\r\n        cheques:state.cheques\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(DepositarCheque)","import React, {useState,useEffect} from 'react'\r\nimport {Grid,Card,CardContent,IconButton,Chip,InputLabel,CardHeader,Paper,Menu,MenuItem,Collapse, List,ListItem, ListItemText,Select,Input, CardActions, Divider} from '@material-ui/core'\r\nimport {MoreVert,AttachMoney,ExpandMore,ExpandLess, Add} from '@material-ui/icons'\r\nimport {Alert} from '@material-ui/lab'\r\nimport {Link} from 'react-router-dom'\r\nimport {database} from 'firebase'\r\nimport {formatMoney} from '../../utilities'\r\nimport {content} from '../../Pages/styles/styles'\r\n\r\nexport const Cheque = ({cheque,search,guardarChequeRebotado,asentarAcreditacion,id,guardarChequeEnGrupo}) =>{\r\n    const classes = content()\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [facturacion,setFacturacion]=useState(false)\r\n    const [expanded, setExpanded] = useState(false);\r\n\r\n    //Menu More\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <Grid item xs={11} sm={8} md={6} lg={4} className={!search?null:(cheque.numero).search(search) == -1 ? classes.displayNone:classes.display}>\r\n                    <Card>\r\n                        <Paper elevation={3} className={cheque.dadoDeBaja?classes.cardChequeHeaderBaja:(cheque.acreditado?classes.cardChequeEnviadoHeader:classes.cardChequeHeader)}>\r\n                            <CardHeader\r\n                                className={cheque.dadoDeBaja?classes.cardHeaderChequeIconDanger:(cheque.acreditado?classes.cardHeaderChequeIconSuccess:null)}\r\n                                action={\r\n                                    <>\r\n                                        <IconButton onClick={()=>{setExpanded(!expanded)}}>\r\n                                            {expanded?\r\n                                                <ExpandLess className={cheque.dadoDeBaja?classes.cardHeaderChequeIconDanger:(cheque.acreditado?classes.cardHeaderChequeIconSuccess:null)}/>\r\n                                                :\r\n                                                <ExpandMore className={cheque.dadoDeBaja?classes.cardHeaderChequeIconDanger:(cheque.acreditado?classes.cardHeaderChequeIconSuccess:null)}/>\r\n                                            }\r\n                                        </IconButton>\r\n                                            {cheque.dadoDeBaja && cheque.acreditado ?\r\n                                                null\r\n                                                :\r\n                                                <IconButton aria-label=\"settings\" onClick={handleClick}>\r\n                                                    <MoreVert className={cheque.dadoDeBaja?classes.cardHeaderChequeIconDanger:(cheque.acreditado?classes.cardHeaderChequeIconSuccess:null)}/>\r\n                                                </IconButton>\r\n                                            }\r\n                                            <Menu\r\n                                                id=\"simple-menu\"\r\n                                                anchorEl={anchorEl}\r\n                                                keepMounted\r\n                                                open={Boolean(anchorEl)}\r\n                                                onClose={handleClose}\r\n                                            >\r\n                                                {!cheque.dadoDeBaja?\r\n                                                    <MenuItem onClick={()=>{\r\n                                                        guardarChequeRebotado(id)\r\n                                                        setAnchorEl(null)\r\n                                                    }}>\r\n                                                        Dar de Baja\r\n                                                    </MenuItem>\r\n                                                    :\r\n                                                    null\r\n                                                }\r\n                                                {!cheque.acreditado?\r\n                                                    <MenuItem onClick={()=>{\r\n                                                        asentarAcreditacion(id)\r\n                                                        setAnchorEl(null)\r\n                                                    }}>\r\n                                                        Asentar Acreditacion\r\n                                                    </MenuItem>\r\n                                                    :\r\n                                                    null\r\n                                                }\r\n                                            </Menu>\r\n                                    </>\r\n                                }\r\n                                title={\r\n                                    <Grid container xs={12} justify='flex-start' spacing={3}>\r\n                                        <Grid item>\r\n                                               Nº {cheque.numero} \r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Chip\r\n                                                className={classes.cardChequeChip}\r\n                                                color=\"primary\"\r\n                                                icon={<AttachMoney/>}\r\n                                                label={cheque.valor?formatMoney(cheque.valor):formatMoney(0)}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                }\r\n                                subheader={cheque.vencimiento}\r\n                            />\r\n                            \r\n                        </Paper>\r\n                        <Collapse in={expanded} timeout='auto' unmountOnExit>\r\n                            <CardContent>\r\n                                <Grid container xs={12} spacing={3}>\r\n                                    {cheque.dadoDeBaja?\r\n                                        <Grid container item xs={12}>\r\n                                            <Alert variant=\"filled\" severity=\"error\" className={classes.alertCheque}>\r\n                                                Cheque Dado De Baja\r\n                                            </Alert>\r\n                                        </Grid>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                    {cheque.destinatario?\r\n                                        <Grid container item xs={12}>\r\n                                            <Alert variant=\"filled\" severity=\"success\" className={classes.alertCheque}>\r\n                                                {cheque.depositadoEnCuenta?'Depositado en Cuenta de ':'Entregado a '} \r\n                                                <Link \r\n                                                    style={{color:'#fff',textDecoration:'none'}}\r\n                                                    className={classes.textWhite}\r\n                                                    to={cheque.depositadoEnCuenta?\r\n                                                        {pathname:'/Cuentas-Bancarias',search:`${cheque.destinatario}`}\r\n                                                        :\r\n                                                        {pathname:'/Proveedor',search:`${cheque.destinatario}`}\r\n                                                }>\r\n                                                    {cheque.destinatario}\r\n                                                </Link> el {cheque.egreso}\r\n                                            </Alert>\r\n                                        </Grid>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </Grid>\r\n                                <List>\r\n                                    <ListItem>\r\n                                        <ListItemText primary={cheque.vencimiento} secondary='Vencimiento'/>\r\n                                    </ListItem>\r\n                                    {cheque.acreditado?\r\n                                        <ListItem>\r\n                                            <ListItemText primary={cheque.fechaAcreditacion} secondary='Fecha de Acreditacion'/>\r\n                                        </ListItem>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </List>\r\n                            </CardContent>\r\n                        </Collapse>\r\n                    </Card>\r\n                </Grid>\r\n        </>\r\n    )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {Typography,TextField,Backdrop,Grid,CircularProgress,IconButton,Card,Snackbar,CardHeader,Input,TableCell,TableRow,TableHead,TableBody,Paper,Menu,MenuItem, CardContent} from '@material-ui/core'\r\nimport {Alert} from '@material-ui/lab'\r\nimport {PersonAdd} from '@material-ui/icons'\r\nimport {MoreVert,DeleteOutlineOutlined} from '@material-ui/icons'\r\nimport {Link} from 'react-router-dom'\r\nimport {CardPedido} from '../components/Pedidos/CardPedido'\r\nimport {database} from 'firebase'\r\nimport {formatMoney,obtenerFecha,monthsList} from '../utilities'\r\nimport {DialogEntregarCheque} from '../components/Cheques/DialogEntregarCheque'\r\nimport {content} from './styles/styles'\r\nimport { Cheque } from '../components/Cheques/ChequePersonal'\r\nimport Empty from '../images/Empty.png'\r\nimport ApexCharts from 'react-apexcharts';\r\n\r\n// COMPONENT\r\nconst ChequesPersonales=(props)=>{\r\n    const classes = content()\r\n    const [search,setSearch]=useState(props.location.search?props.location.search.slice(1):'')\r\n    const [showSnackbar, setshowSnackbar] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [totalBlanco,setTotalBlanco] = useState('')\r\n    const [totalNegro,setTotalNegro] = useState('')\r\n    const [sortedCheques,setSortedCheques] = useState(undefined)\r\n\r\n    // FUNCTIONS \r\n\r\n    const guardarChequeRebotado = id =>{\r\n        setLoading(true)\r\n\r\n        let valor = props.cheques[id].valor\r\n        let proveedor = props.cheques[id].destinatario\r\n\r\n\r\n        // GUARDA EL MOVIMIENTO EN LA LISTA DE PAGOS DEL PROVEEDOR\r\n        guardarPago(proveedor,id)\r\n\r\n        // ACTUALIZA DEUDA DE PROVEEDOR \r\n        actualizarDeuda(valor,proveedor)\r\n\r\n        // ACTUALIZA EL CHEQUE EN LA DB\r\n        database().ref().child(props.user.uid).child('chequesPersonales').child(id).update({\r\n            dadoDeBaja:true\r\n        })\r\n        // FEEDBACK DEL PROCESO\r\n        .then(()=>{\r\n            setshowSnackbar('El cheque se dio de baja correctamente!')\r\n            setTimeout(() => {\r\n                setLoading(false)\r\n                setshowSnackbar('')\r\n            }, 2000);\r\n        })\r\n        .catch(()=>{\r\n            setLoading(false)\r\n        })\r\n    }\r\n    const asentarAcreditacion = id =>{\r\n        setLoading(true)\r\n\r\n        let fecha = \r\n\r\n        // ACTUALIZA EL CHEQUE EN LA DB\r\n        database().ref().child(props.user.uid).child('chequesPersonales').child(id).update({\r\n            acreditado:true,\r\n            fechaAcreditacion:obtenerFecha()\r\n        })\r\n        // FEEDBACK DEL PROCESO\r\n        .then(()=>{\r\n            setshowSnackbar('El cheque se acredito!')\r\n            setTimeout(() => {\r\n                setLoading(false)\r\n                setshowSnackbar('')\r\n            }, 2000);\r\n        })\r\n        .catch(()=>{\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    const actualizarDeuda = (valor,proveedor) =>{\r\n            const nuevaDeudaProveedor = props.proveedores[proveedor].datos.deuda+parseFloat(valor)\r\n            database().ref().child(props.user.uid).child('proveedores').child(`${proveedor}`).child('datos').update({\r\n                deuda:nuevaDeudaProveedor\r\n            })\r\n    }\r\n    \r\n    const guardarPago = (proveedor,cheque) =>{\r\n\r\n        // FUNCIONES DE ESTRUCTURA\r\n        const calcularDeudaActualizada = () =>{\r\n                return getDeudaPasada() + parseFloat(props.cheques[cheque].valor)\r\n        }\r\n        const getDeudaPasada = () =>{\r\n                return props.proveedores[proveedor].datos.deuda\r\n        }\r\n        // ESTRUCTURA DEL PAGO\r\n        let aux={\r\n            deudaPasada:getDeudaPasada(),\r\n            deudaActualizada:calcularDeudaActualizada(),\r\n            totalChequesPersonales:-(props.cheques[cheque].valor),\r\n            chequesPersonales:[props.cheques[cheque].numero],\r\n            fecha:obtenerFecha(),\r\n            pagado:-(props.cheques[cheque].valor),\r\n            total:-(props.cheques[cheque].valor),\r\n        }\r\n        // ACTUALIZA DB PROVEEDOR\r\n        database().ref().child(props.user.uid).child('proveedores').child(proveedor).child('pagos').push(aux)\r\n        \r\n    }\r\n    const guardarChequeEnGrupo = (id,grupo) =>{\r\n        setLoading(true)\r\n        database().ref().child(props.user.uid).child('cheques').child(id).update({\r\n                grupo:grupo\r\n        })\r\n        .then(()=>{\r\n            setshowSnackbar('El cheque Se Agrego Al Grupo!')\r\n            setTimeout(() => {\r\n                setLoading(false)\r\n                setshowSnackbar('')\r\n            }, 2000);\r\n        })\r\n    }\r\n    \r\n    const obtenerTotalGrupos = (cheques) =>{\r\n        let auxBlanco = 0\r\n        let auxNegro = 0\r\n        if(cheques){\r\n            Object.keys(cheques).map(cheque=>{\r\n                if(!cheques[cheque].destinatario && !cheques[cheque].dadoDeBaja){\r\n                    if(cheques[cheque].grupo){\r\n                        if(cheques[cheque].grupo=='Blanco'){\r\n                            auxBlanco+=parseFloat(cheques[cheque].valor)\r\n                        }\r\n                        else{\r\n                            auxNegro+=parseFloat(cheques[cheque].valor)\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        setTotalBlanco(auxBlanco)\r\n        setTotalNegro(auxNegro)\r\n    }\r\n\r\n\r\n    // CHARTS\r\n    const generateChartGrupos = () => {\r\n        // Asume que tienes los datos en dos variables: sortedCompras y sortedVentas\r\n        let series = [totalBlanco,totalNegro]\r\n        let labels = ['blanco','negro']\r\n        // Define la configuración del gráfico\r\n        const options = {\r\n            labels:labels,\r\n            theme:{\r\n                mode:'dark',\r\n                palette:'palette3'\r\n            },\r\n            tooltip:{\r\n                y:{\r\n                    formatter: val=> `$ ${formatMoney(val)}`\r\n                }\r\n            },\r\n            dataLabels:{\r\n                dropShadow: {\r\n                    enabled: true,\r\n                    left: 2,\r\n                    top: 2,\r\n                    opacity: 0.5\r\n                },\r\n            }\r\n        };\r\n    \r\n    \r\n        // Renderiza el gráfico\r\n        return <ApexCharts options={options} series={series} type='donut' width={350} />;\r\n    }\r\n\r\n    // FILTRADO DE INFORMACION \r\n    const filtrarCheques = () =>{\r\n        const months = {};\r\n        const year = new Date().getFullYear()\r\n            Object.keys(props.cheques).forEach((cheque) => {\r\n                const yearOfCheque = props.cheques[cheque].vencimiento.split('/')[2]\r\n                if(year==yearOfCheque){\r\n                    const month = props.cheques[cheque].vencimiento.split('/')[1];\r\n                    if (!months[month]) {\r\n                        months[month] = { total: 0,totalDisponible:0, cheques: [] };\r\n                    }\r\n                    if(!props.cheques[cheque].dadoDeBaja){\r\n                        months[month].total += parseInt(props.cheques[cheque].valor, 10);\r\n                        if(!props.cheques[cheque].destinatario){\r\n                            months[month].totalDisponible += parseInt(props.cheques[cheque].valor, 10);\r\n                        }\r\n                    }\r\n        \r\n                    months[month].cheques={...months[month].cheques,[`${cheque}`]:props.cheques[cheque]}\r\n                    console.log(months[month].cheques)\r\n                }\r\n            });\r\n        return months\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setLoading(true)\r\n        if(props.cheques){\r\n            const auxSortedCheques = filtrarCheques()\r\n            setSortedCheques(auxSortedCheques)\r\n        }\r\n\r\n        obtenerTotalGrupos(props.cheques)\r\n        if(props.history.location.search){\r\n            setSearch(props.history.location.search.slice(1))\r\n        }\r\n        setTimeout(() => {\r\n            setLoading(false)\r\n        }, 500);\r\n    },[props.cheques])\r\n\r\n    return(\r\n        <Layout history={props.history} page=\"Cheques Personales\" user={props.user.uid}>\r\n            {/* CONTENT */}\r\n            <Paper className={classes.content}>\r\n                {/* CHEQUES TABLE */}\r\n                <Grid container justify='center' alignItems='center' spacing={6}>\r\n                    {/* props.cheques?\r\n                        <Grid container item xs={12} justify='space-around'>\r\n                            <Grid item>\r\n                                <Card>\r\n                                    <CardHeader title='Grupos de Cheques'/>\r\n                                    <CardContent>\r\n                                        {generateChartGrupos()}\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                        </Grid>\r\n                        :\r\n                        null\r\n                    */}\r\n                    {/* SEARCH BAR */}\r\n                    <Grid container item xs={12} justify='center' alignItems='center' >\r\n                        <Grid item>\r\n                            <TextField\r\n                                value={search}\r\n                                onChange={e=>{\r\n                                    setSearch(e.target.value)\r\n                                }}\r\n                                disabled={!props.cheques}\r\n                                label='Buscar Cheque'\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    {/* LIST */}\r\n                    <Grid container justify='center' alignItems='center' spacing={3}>\r\n                        {sortedCheques?\r\n                            <Grid container xs={12} justify='center' spacing={3}>\r\n                                {Object.keys(sortedCheques).reverse().map((month)=>(\r\n                                    <>\r\n                                        <Grid container item xs={12} justify='center'>\r\n                                            <Card className={classes.CardMonthCheques}>\r\n                                                <CardHeader\r\n                                                    title={`$ ${formatMoney(sortedCheques[month].total)}`}\r\n                                                    subheader={monthsList[month-1]}\r\n                                                />\r\n                                            </Card>\r\n                                        </Grid>\r\n                                        <Grid container item xs={12} justify='center' spacing={3}>\r\n                                            {Object.keys(sortedCheques[month].cheques).map(cheque=>(\r\n                                                <Cheque cheque={sortedCheques[month].cheques[cheque]} id={cheque} search={search} guardarChequeRebotado={guardarChequeRebotado} asentarAcreditacion={asentarAcreditacion} guardarChequeEnGrupo={guardarChequeEnGrupo} />    \r\n                                            ))}\r\n                                        </Grid>\r\n                                    </>\r\n                                ))}\r\n                            </Grid>\r\n                        :\r\n                            <>\r\n                                <Grid item>\r\n                                    <img src={Empty} alt=\"\" height='500px'/>\r\n                                </Grid>\r\n                                <Grid container item xs={12} justify='center'>\r\n                                    <Typography variant='h4'>No hay Cheques Ingresados</Typography>\r\n                                </Grid>\r\n                            </>\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n\r\n            {/* BACKDROP & SNACKBAR */}\r\n            <Backdrop className={classes.backdrop} open={loading}>\r\n                <CircularProgress color=\"inherit\" />\r\n                <Snackbar open={showSnackbar} autoHideDuration={2000} onClose={()=>{setshowSnackbar('')}}>\r\n                    <Alert severity=\"success\" variant='filled'>\r\n                        {showSnackbar}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </Backdrop>\r\n        </Layout>\r\n    )\r\n}\r\n// REDUX STATE TO PROPS\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        cheques:state.chequesPersonales,\r\n        clientes:state.clientes,\r\n        proveedores:state.proveedores\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(ChequesPersonales)","import React, { useState,useEffect } from 'react'\r\nimport {Grid, Button,InputAdornment,Select,Input,Chip,MenuItem,Paper,FormControl, TextField,Tab,Tabs,AppBar,Typography,Box,Switch,FormControlLabel,InputLabel} from '@material-ui/core'\r\nimport {List} from '@material-ui/icons'\r\nimport {content} from '../../Pages/styles/styles'\r\n\r\nexport const Step = ({cantidad,setCantidad}) =>{\r\n    const classes = content()\r\n    return(\r\n        <Grid container item xs={12} justify='center'>\r\n            <Grid item>\r\n                <Typography variant='h6'>\r\n                    Cantidad Terminada\r\n                </Typography>\r\n            </Grid>\r\n            <Grid container item xs={12} justify='center'>\r\n                <TextField\r\n                    autoFocus\r\n                    style={{ width: '250px' }}\r\n                    value={cantidad}\r\n                    variant='outlined'\r\n                    type='number'\r\n                    onChange={e=>{\r\n                        setCantidad(e.target.value)\r\n                    }}\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                            <List/>\r\n                        </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import React,{useState, useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {Grid,Paper,Chip,Card,Button,StepContent,Backdrop,StepLabel,Typography,Step,Stepper,Snackbar,CircularProgress} from '@material-ui/core'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {Step as StepComponent} from '../components/Finalizar-Proceso-Propio/Step'\r\nimport {database} from 'firebase'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {checkSearch, formatMoney,fechaDetallada,obtenerFecha} from '../utilities'\r\nimport {content} from './styles/styles'\r\nimport { AttachMoney, List, LocalAtm } from '@material-ui/icons';\r\n  \r\n  const FinalizarProcesoPropio=(props)=>{\r\n    const classes = content()\r\n\r\n    const [cantidad, setCantidad] = useState(props.cadenasActivas[props.location.search.slice(1)].cantidad?props.cadenasActivas[props.location.search.slice(1)].cantidad:undefined);\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [showSnackbar, setshowSnackbar] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const steps = getSteps();\r\n\r\n    //STEPPER NAVIGATION \r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n    function getStepContent(step) {\r\n      switch (step) {\r\n        case 0:\r\n          return (\r\n            <StepComponent  \r\n                setCantidad={setCantidad}\r\n                cantidad={cantidad}\r\n            />\r\n          );\r\n        }\r\n    }\r\n    function getSteps() {\r\n        return ['Detalles'];\r\n    }\r\n    function getStepLabel(label,index) {\r\n        switch (index) {\r\n            case 0:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<List/>} \r\n                            label={label}  \r\n                            onClick={()=>{setActiveStep(index)}}\r\n                            variant='default'\r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n        }\r\n    }\r\n\r\n\r\n    //FUNCTIONS\r\n    const checkStepProceso = (id) =>{\r\n        let aux = props.cadenasActivas[id].procesos\r\n        let index = 0\r\n        aux.map((proceso,i)=>{\r\n            if(proceso.fechaDeInicio){\r\n                index = i\r\n            }\r\n        })\r\n        return index\r\n    }\r\n    const finalizarProceso = async () =>{\r\n        const id = props.history.location.search.slice(1)\r\n        const step = checkStepProceso(id)\r\n        const cadena = props.cadenasActivas[id].procesos\r\n\r\n        setLoading(true)\r\n            \r\n        // ESTRUCTURA DE LA ENTREGA\r\n        let aux={\r\n                fecha:obtenerFecha(),\r\n                articulos:[{\r\n                    cantidad:cantidad,\r\n                    producto:props.cadenasActivas[id].producto,\r\n                }],\r\n                proveedor:'Tota',\r\n                metodoDePago:{\r\n                    facturacion:false\r\n                }\r\n            }\r\n        \r\n        // AGREGA LA ENTREGA A DB PARA OBTENER ID\r\n        let idLink = database().ref().child(props.user.uid).child('proveedores').child('Tota').child('entregas').push()\r\n        \r\n        // AGREGA LA FACTURA A LISTA DE COMPRAS\r\n        agregarAListaDeCompras(aux,idLink.key)\r\n\r\n\r\n        // FEEDBACK DEL PROCESO\r\n        setshowSnackbar('El Proceso Finalizo Correctamente')\r\n\r\n        // ACTUALIZA LA CADENA DE PRODUCCION ACTIVA\r\n        actualizarCadenaDeProduccion(id,step,cantidad,idLink.key)\r\n\r\n        // AUMENTAR PRDODUCTOS\r\n        if(step==cadena.length-1){\r\n            await aumentarProducto(id)\r\n            await descontarSubproductos(id)\r\n        }\r\n        // ACTUALIZA DB ENVIANDO TODA LA INFO\r\n        idLink.update(aux)\r\n            .then(()=>{\r\n                setTimeout(() => {\r\n                    props.history.replace('/Cadenas-De-Produccion')\r\n                    if(step==cadena.length-1){\r\n                        database().ref().child(props.user.uid).child('cadenasActivas').child(id).remove()\r\n                    }\r\n                }, 2000);\r\n            })\r\n            .catch(()=>{\r\n                setLoading(false)\r\n            })\r\n    }\r\n    const aumentarProducto = async id =>{\r\n        const producto = props.cadenasActivas[id].producto\r\n\r\n        // AUMENTA LA CANTIDAD DE PRODUCTOS\r\n        const nuevaCantidad = parseInt(props.productos[producto].cantidad)+parseInt(cantidad)\r\n        await database().ref().child(props.user.uid).child('productos').child(producto).update({cantidad:nuevaCantidad})\r\n        await database().ref().child(props.user.uid).child('productos').child(producto).child('historialDeStock').push({cantidad:nuevaCantidad,fecha:obtenerFecha()})\r\n        \r\n    }\r\n    const descontarSubproductos = async id =>{\r\n        const subproductos = props.productos[props.cadenasActivas[id].producto].subproductos\r\n\r\n        // DESCUENTA LA CANTIDAD DE PRODUCTOS\r\n        if(subproductos){\r\n            subproductos.map(async subproducto=>{\r\n                const nuevaCantidad = parseInt(props.productos[subproducto.nombre].cantidad)-(cantidad*subproducto.cantidad)\r\n                await database().ref().child(props.user.uid).child('productos').child(subproducto.nombre).update({cantidad:nuevaCantidad})\r\n                //await database().ref().child(props.user.uid).child('productos').child(subproducto.nombre).child('historialDeStock').push({cantidad:nuevaCantidad,fecha:obtenerFecha()})\r\n            })\r\n        }\r\n    }\r\n    const agregarAListaDeCompras = (entrega,idLink) =>{\r\n        let aux=entrega\r\n        aux['idEntrega']=idLink\r\n        database().ref().child(props.user.uid).child('compras').push(aux)\r\n    }\r\n    const actualizarCadenaDeProduccion = (id,step,cantidad,idEntrega) =>{\r\n        let aux = props.cadenasActivas[id]\r\n        aux.cantidad=cantidad\r\n        aux.procesos[step].fechaDeEntrega=(obtenerFecha())\r\n        aux.procesos[step].idEntrega=idEntrega\r\n        if(step==aux.procesos.length-1){\r\n            database().ref().child(props.user.uid).child('productos').child(aux.producto).child('historialDeCadenas').push(aux)\r\n        }\r\n        else{\r\n            database().ref().child(props.user.uid).child('cadenasActivas').child(id).update(aux)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Layout history={props.history} page='Finalizar Proceso Propio' user={props.user.uid} blockGoBack={true}>\r\n            {/* CONTENT */}\r\n            <Paper className={classes.content}>\r\n                {/* STEPPER */}\r\n                <Stepper orientation='vertical' activeStep={activeStep} className={classes.stepper}>\r\n                    {steps.map((label,index)=>(\r\n                        <Step>\r\n                            {getStepLabel(label,index)}\r\n                            <StepContent>\r\n                                <Grid container xs={12} justify='center' spacing={3}>\r\n                                    {getStepContent(index)}\r\n                                    <Grid container item xs={12} justify='center'>\r\n                                        <Grid item>\r\n                                            <Button\r\n                                                disabled={activeStep===0}\r\n                                                onClick={handleBack}\r\n                                            >\r\n                                                Volver\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                disabled={!cantidad}\r\n                                                onClick={activeStep === steps.length - 1 ? finalizarProceso : handleNext}\r\n                                            >\r\n                                                {activeStep === steps.length - 1 ? 'Finalizar' : 'Siguiente'}\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </StepContent>\r\n                        </Step>\r\n                    ))}\r\n                </Stepper>\r\n            </Paper>\r\n            \r\n            {/* BACKDROP & SNACKBAR */}\r\n            <Backdrop className={classes.backdrop} open={loading}>\r\n                <CircularProgress color=\"inherit\" />\r\n                <Snackbar open={showSnackbar} autoHideDuration={2000} onClose={()=>{setshowSnackbar('')}}>\r\n                    <Alert severity=\"success\" variant='filled'>\r\n                        {showSnackbar}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </Backdrop>\r\n        </Layout>\r\n    )\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        productos:state.productos,\r\n        proveedores:state.proveedores,\r\n        cadenasActivas:state.cadenasActivas,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(FinalizarProcesoPropio)","import React, { useState } from 'react'\r\nimport {Grid, Button,TextField,Select,Input,Chip,MenuItem,Paper,FormControl, Typography,Card,CardContent,CardActions} from '@material-ui/core'\r\nimport { Autocomplete } from '@material-ui/lab'\r\nimport {AddOutlined} from '@material-ui/icons'\r\nimport {formatMoney} from '../../utilities'\r\nimport {content} from '../../Pages/styles/styles'\r\n\r\nexport const Step = ({tipoDeDato,titulo,setTitulo,total,settotal,totalIva,settotalIva}) =>{\r\n    const classes = content()\r\n    const [showDialog,setshowDialog]=useState(false)\r\n    const [editIndex,seteditIndex]=useState(-1)\r\n    const [showDialogDelete,setshowDialogDelete]=useState(false)\r\n    const [deleteIndex,setdeleteIndex]=useState(undefined)\r\n\r\n    const openDialogDelete = (index) =>{\r\n        setdeleteIndex(index)\r\n        setshowDialogDelete(true)\r\n    }\r\n    const renderStep = () =>{\r\n        switch (tipoDeDato) {\r\n            case 'Factura':\r\n                return(\r\n                    <Paper>\r\n                        <Grid container item xs={12} spacing={3}>\r\n                            <Grid container item xs={12} justify='center'>\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        label='Titulo'\r\n                                        value={titulo}\r\n                                        onChange={e=>{\r\n                                            setTitulo(e.target.value)\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container item xs={12} justify='center'>\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        label='Total IVA'\r\n                                        type='number'\r\n                                        value={totalIva}\r\n                                        onChange={e=>{\r\n                                            settotalIva(e.target.value)\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container item xs={12} justify='center'>\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        label='Total'\r\n                                        type='number'\r\n                                        value={total}\r\n                                        onChange={e=>{\r\n                                            settotal(e.target.value)\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                )\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return( renderStep() )\r\n}","import React,{useState, useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {Chip,Paper,ListItem,Card,Button,StepContent,Backdrop,StepLabel,Grid,Step,Stepper,Link as LinkComponent,Snackbar,CircularProgress} from '@material-ui/core'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {Step as StepComponent} from '../components/Nuevo-Consumo-Facturado/Step'\r\nimport {database} from 'firebase'\r\nimport {obtenerFecha} from '../utilities'\r\nimport {content} from './styles/styles'\r\nimport {checkSearch} from '../utilities'\r\nimport { PeopleAlt, MoveToInbox, List } from '@material-ui/icons';\r\n\r\n\r\n// COMPONENT\r\nconst NuevoConsumoFacturado=(props)=>{\r\n    const classes = content()\r\n    const [total,settotal]=useState(\"\")\r\n    const [totalIva,settotalIva]=useState(\"\")\r\n    const [titulo,setTitulo]=useState(\"\")\r\n    const [fecha,setfecha]=useState(undefined)\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [showSnackbar, setshowSnackbar] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const steps = getSteps();\r\n\r\n    // STEPPER NAVIGATION\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n    function getStepContent(step) {\r\n      switch (step) {\r\n        case 0:\r\n            return (\r\n                <StepComponent \r\n                    tipoDeDato='Factura'\r\n                    titulo={titulo}\r\n                    setTitulo={setTitulo}\r\n                    total={total}\r\n                    settotal={settotal}\r\n                    totalIva={totalIva}\r\n                    settotalIva={settotalIva}\r\n                /> \r\n            );\r\n        }\r\n    }\r\n    function getSteps() {\r\n        return ['Detalles'];\r\n    }\r\n    const setDisabled=(step)=>{\r\n        switch (step) {\r\n            case 0:\r\n                    return titulo && total && totalIva ? false : true\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    function getStepLabel(label,index) {\r\n        switch (index) {\r\n            case 0:\r\n                return (\r\n                    <StepLabel>\r\n                        <Chip \r\n                            avatar={<List/>} \r\n                            label={label}\r\n                            variant='default'\r\n                            className={activeStep==index?classes.iconLabelSelected:null}\r\n                        />\r\n                    </StepLabel>\r\n                );\r\n        }\r\n    }\r\n\r\n    // FUNCTIONS\r\n    const guardarConsumoFacturado = () =>{\r\n        setLoading(true)\r\n        let aux={\r\n            fecha:!fecha?obtenerFecha():fecha,\r\n            titulo:titulo,\r\n            total:total,\r\n            totalIva:totalIva,\r\n            consumoFacturado:true,\r\n            metodoDePago:{\r\n                facturacion:true\r\n            }\r\n        }\r\n        if(props.history.location.search){\r\n            database().ref().child(props.user.uid).child('compras').child(checkSearch(props.history.location.search)).update(aux)\r\n            .then(()=>{\r\n                    setshowSnackbar('El consumo se editó correctamente!')\r\n                setTimeout(() => {\r\n                    props.history.replace(`/`)\r\n                }, 2000);\r\n            })\r\n            .catch(()=>{\r\n                setLoading(false)\r\n            })\r\n        }\r\n        else{\r\n            database().ref().child(props.user.uid).child('compras').push(aux)\r\n            .then(()=>{\r\n                setshowSnackbar('El consumo se agregó correctamente!')\r\n                setTimeout(() => {\r\n                    props.history.replace(`/`)\r\n                }, 2000);\r\n            })\r\n            .catch(()=>{\r\n                setLoading(false)\r\n            })\r\n        }\r\n    }\r\n\r\n    //FILL FOR EDIT\r\n    useEffect(()=>{\r\n        if(props.history.location.search){\r\n            const {titulo,total,totalIva,fecha} = props.entregas[props.history.location.search.slice(1)]\r\n            titulo&&setTitulo(titulo)\r\n            total&&settotal(total)\r\n            totalIva&&settotalIva(totalIva)\r\n            fecha&&setfecha(fecha)\r\n            setActiveStep(1)\r\n        }\r\n    },[])\r\n    return(\r\n        <Layout history={props.history} page={props.history.location.search?'Editar Consumo Facturado':'Nuevo Consumo Facturado'} user={props.user.uid} blockGoBack={true}>\r\n            <Paper className={classes.content}>\r\n                {/* STEPPER */}\r\n                <Stepper orientation='vertical' activeStep={activeStep} className={classes.stepper}>\r\n                    {steps.map((label,index)=>(\r\n                        <Step>\r\n                            {getStepLabel(label,index)}\r\n                            <StepContent>\r\n                                <Grid container item xs={12} justify='center' spacing={3}>\r\n                                    {getStepContent(index)}\r\n                                    <Grid container item xs={12} justify='center'>\r\n                                        <Grid item>\r\n                                            <Button\r\n                                                disabled={activeStep===0}\r\n                                                onClick={handleBack}\r\n                                            >\r\n                                                Volver\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                disabled={setDisabled(activeStep)}\r\n                                                onClick={activeStep === steps.length - 1 ? guardarConsumoFacturado : handleNext}\r\n                                            >\r\n                                                {activeStep === steps.length - 1 ? `${props.history.location.search?'Guardar Edicion':'Guardar Consumo Facturado'}` : 'Siguiente'}\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </StepContent>\r\n                        </Step>\r\n                    ))}\r\n                </Stepper>\r\n                {/* BACKDROP & SNACKBAR */}\r\n                <Backdrop className={classes.backdrop} open={loading}>\r\n                    <CircularProgress color=\"inherit\" />\r\n                    <Snackbar open={showSnackbar} autoHideDuration={2000} onClose={()=>{setshowSnackbar('')}}>\r\n                        <Alert severity=\"success\" variant='filled'>\r\n                            {showSnackbar}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </Backdrop>\r\n            </Paper>\r\n        </Layout>\r\n    )\r\n}\r\n\r\n// REDUX STATE TO PROPS\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        entregas:state.entregas,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(NuevoConsumoFacturado)","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <App />\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/noData.30b0273c.png\";"],"sourceRoot":""}